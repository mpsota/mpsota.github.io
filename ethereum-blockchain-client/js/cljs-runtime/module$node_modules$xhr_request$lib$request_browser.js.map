{
"version":3,
"file":"module$node_modules$xhr_request$lib$request_browser.js",
"lineCount":2,
"mappings":"AAAAA,cAAA,oDAAA,CAAwE,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAChH,IAAIC,IAAMH,OAAA,CAAQ,+BAAR,CAAV,CACII,UAAYJ,OAAA,CAAQ,wDAAR,CADhB,CAEIK,KAAOA,QAAS,EAAG,EAEvBJ,OAAAC,QAAA,CACAI,QAAoB,CAACC,GAAD,CAAMC,EAAN,CAAU,CAC5B,OAAOD,GAAAE,IAGP,KAAIC,QAAU,CAAA,CACW,OAAzB,GAAIH,GAAAI,aAAJ,GACEJ,GAAAI,aACA,CADmB,MACnB,CAAAD,OAAA,CAAU,CAAA,CAFZ,CAKA,KAAIE,IAAMT,GAAA,CAAII,GAAJ,CAASM,QAA0B,CAACC,GAAD,CAAMC,IAAN,CAAYC,IAAZ,CAAkB,CAC7D,GAAIN,OAAJ,EAAe,CAACI,GAAhB,CACE,GAAI,CAEFE,IAAA,CAAOC,IAAAC,MAAA,CADIH,IAAAI,WAAAC,aACJ,CAFL,CAGF,MAAOC,CAAP,CAAU,CACVP,GAAA,CAAMO,CADI,CAKdN,IAAA;AAAOX,SAAA,CAAUG,GAAV,CAAeQ,IAAf,CACHD,IAAJ,CAASN,EAAA,CAAGM,GAAH,CAAQ,IAAR,CAAcC,IAAd,CAAT,CACKP,EAAA,CAAGM,GAAH,CAAQE,IAAR,CAAcD,IAAd,CACLP,GAAA,CAAKH,IAbwD,CAArD,CAAV,CAiBIiB,QAAUV,GAAAU,QACdV,IAAAU,QAAA,CAAcC,QAAS,EAAG,CACxB,IAAIC,IAAMF,OAAAG,MAAA,CAAcb,GAAd,CAAmBc,KAAAC,UAAAC,MAAAC,KAAA,CAA2BC,SAA3B,CAAnB,CACVtB,GAAA,CAAOuB,KAAJ,CAAU,aAAV,CAAH,CACAvB,GAAA,CAAKH,IACL,OAAOmB,IAJiB,CAO1B,OAAOZ,IAnCqB,CANkF;",
"sources":["node_modules/xhr-request/lib/request-browser.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$xhr_request$lib$request_browser\"] = function(global,require,module,exports) {\nvar xhr = require('xhr')\nvar normalize = require('./normalize-response')\nvar noop = function () {}\n\nmodule.exports = xhrRequest\nfunction xhrRequest (opt, cb) {\n  delete opt.uri\n\n  // for better JSON.parse error handling than xhr module\n  var useJson = false\n  if (opt.responseType === 'json') {\n    opt.responseType = 'text'\n    useJson = true\n  }\n\n  var req = xhr(opt, function xhrRequestResult (err, resp, body) {\n    if (useJson && !err) {\n      try {\n        var text = resp.rawRequest.responseText\n        body = JSON.parse(text)\n      } catch (e) {\n        err = e\n      }\n    }\n\n    resp = normalize(opt, resp)\n    if (err) cb(err, null, resp)\n    else cb(err, body, resp)\n    cb = noop\n  })\n\n  // Patch abort() so that it also calls the callback, but with an error\n  var onabort = req.onabort\n  req.onabort = function () {\n    var ret = onabort.apply(req, Array.prototype.slice.call(arguments))\n    cb(new Error('XHR Aborted'))\n    cb = noop\n    return ret\n  }\n\n  return req\n}\n\n};"],
"names":["shadow$provide","global","require","module","exports","xhr","normalize","noop","xhrRequest","opt","cb","uri","useJson","responseType","req","xhrRequestResult","err","resp","body","JSON","parse","rawRequest","responseText","e","onabort","req.onabort","ret","apply","Array","prototype","slice","call","arguments","Error"]
}
