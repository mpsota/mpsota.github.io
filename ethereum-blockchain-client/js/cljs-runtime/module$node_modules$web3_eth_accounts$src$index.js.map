{
"version":3,
"file":"module$node_modules$web3_eth_accounts$src$index.js",
"lineCount":25,
"mappings":"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",
"sources":["node_modules/web3-eth-accounts/src/index.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$web3_eth_accounts$src$index\"] = function(global,require,module,exports) {\nvar Buffer = require('buffer').Buffer;\n/*\n This file is part of web3.js.\n\n web3.js is free software: you can redistribute it and/or modify\n it under the terms of the GNU Lesser General Public License as published by\n the Free Software Foundation, either version 3 of the License, or\n (at your option) any later version.\n\n web3.js is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n GNU Lesser General Public License for more details.\n\n You should have received a copy of the GNU Lesser General Public License\n along with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n */\n/**\n * @file accounts.js\n * @author Fabian Vogelsteller <fabian@ethereum.org>\n * @date 2017\n */\n\n'use strict';\n\nvar _ = require('underscore');\nvar core = require('web3-core');\nvar Method = require('web3-core-method');\nvar Promise = require('any-promise');\nvar Account = require('eth-lib/lib/account');\nvar Hash = require('eth-lib/lib/hash');\nvar RLP = require('eth-lib/lib/rlp');// jshint ignore:line\nvar Bytes = require('eth-lib/lib/bytes');// jshint ignore:line\nvar cryp = (typeof global === 'undefined') ? require('crypto-browserify') : require('crypto');\nvar scrypt = require('@web3-js/scrypt-shim');\nvar uuid = require('uuid');\nvar utils = require('web3-utils');\nvar helpers = require('web3-core-helpers');\nvar Transaction = require('ethereumjs-tx').Transaction;\nvar Common = require('ethereumjs-common').default;\n\n\nvar isNot = function(value) {\n    return (_.isUndefined(value) || _.isNull(value));\n};\n\nvar Accounts = function Accounts() {\n    var _this = this;\n\n    // sets _requestmanager\n    core.packageInit(this, arguments);\n\n    // remove unecessary core functions\n    delete this.BatchRequest;\n    delete this.extend;\n\n    var _ethereumCall = [\n        new Method({\n            name: 'getNetworkId',\n            call: 'net_version',\n            params: 0,\n            outputFormatter: parseInt\n        }),\n        new Method({\n            name: 'getChainId',\n            call: 'eth_chainId',\n            params: 0,\n            outputFormatter: utils.hexToNumber\n        }),\n        new Method({\n            name: 'getGasPrice',\n            call: 'eth_gasPrice',\n            params: 0\n        }),\n        new Method({\n            name: 'getTransactionCount',\n            call: 'eth_getTransactionCount',\n            params: 2,\n            inputFormatter: [function(address) {\n                if (utils.isAddress(address)) {\n                    return address;\n                } else {\n                    throw new Error('Address ' + address + ' is not a valid address to get the \"transactionCount\".');\n                }\n            }, function() {\n                return 'latest';\n            }]\n        })\n    ];\n    // attach methods to this._ethereumCall\n    this._ethereumCall = {};\n    _.each(_ethereumCall, function(method) {\n        method.attachToObject(_this._ethereumCall);\n        method.setRequestManager(_this._requestManager);\n    });\n\n\n    this.wallet = new Wallet(this);\n};\n\nAccounts.prototype._addAccountFunctions = function(account) {\n    var _this = this;\n\n    // add sign functions\n    account.signTransaction = function signTransaction(tx, callback) {\n        return _this.signTransaction(tx, account.privateKey, callback);\n    };\n    account.sign = function sign(data) {\n        return _this.sign(data, account.privateKey);\n    };\n\n    account.encrypt = function encrypt(password, options) {\n        return _this.encrypt(account.privateKey, password, options);\n    };\n\n\n    return account;\n};\n\nAccounts.prototype.create = function create(entropy) {\n    return this._addAccountFunctions(Account.create(entropy || utils.randomHex(32)));\n};\n\nAccounts.prototype.privateKeyToAccount = function privateKeyToAccount(privateKey) {\n    return this._addAccountFunctions(Account.fromPrivate(privateKey));\n};\n\nAccounts.prototype.signTransaction = function signTransaction(tx, privateKey, callback) {\n    var _this = this,\n        error = false,\n        transactionOptions = {},\n        hasTxSigningOptions = !!(tx && ((tx.chain && tx.hardfork) || tx.common));\n\n    callback = callback || function() {\n    };\n\n    if (!tx) {\n        error = new Error('No transaction object given!');\n\n        callback(error);\n        return Promise.reject(error);\n    }\n\n    function signed(tx) {\n        if (tx.common && (tx.chain && tx.hardfork)) {\n            error = new Error(\n                'Please provide the ethereumjs-common object or the chain and hardfork property but not all together.'\n            );\n        }\n\n        if ((tx.chain && !tx.hardfork) || (tx.hardfork && !tx.chain)) {\n            error = new Error(\n                'When specifying chain and hardfork, both values must be defined. ' +\n                'Received \"chain\": ' + tx.chain + ', \"hardfork\": ' + tx.hardfork\n            );\n        }\n\n        if (!tx.gas && !tx.gasLimit) {\n            error = new Error('\"gas\" is missing');\n        }\n\n        if (tx.nonce < 0 ||\n            tx.gas < 0 ||\n            tx.gasPrice < 0 ||\n            tx.chainId < 0) {\n            error = new Error('Gas, gasPrice, nonce or chainId is lower than 0');\n        }\n\n        if (error) {\n            callback(error);\n            return Promise.reject(error);\n        }\n\n        try {\n            var transaction = helpers.formatters.inputCallFormatter(_.clone(tx));\n            transaction.to = transaction.to || '0x';\n            transaction.data = transaction.data || '0x';\n            transaction.value = transaction.value || '0x';\n            transaction.chainId = utils.numberToHex(transaction.chainId);\n\n            // Because tx has no ethereumjs-tx signing options we use fetched vals.\n            if (!hasTxSigningOptions) {\n                transactionOptions.common = Common.forCustomChain(\n                    'mainnet',\n                    {\n                        name: 'custom-network',\n                        networkId: transaction.networkId,\n                        chainId: transaction.chainId\n                    },\n                    'petersburg'\n                );\n\n                delete transaction.networkId;\n            } else {\n                if (transaction.common) {\n                    transactionOptions.common = Common.forCustomChain(\n                        transaction.common.baseChain || 'mainnet',\n                        {\n                            name: transaction.common.customChain.name || 'custom-network',\n                            networkId: transaction.common.customChain.networkId,\n                            chainId: transaction.common.customChain.chainId\n                        },\n                        transaction.common.hardfork || 'petersburg'\n                    );\n\n                    delete transaction.common;\n                }\n\n                if (transaction.chain) {\n                    transactionOptions.chain = transaction.chain;\n                    delete transaction.chain;\n                }\n\n                if (transaction.hardfork) {\n                    transactionOptions.hardfork = transaction.hardfork;\n                    delete transaction.hardfork;\n                }\n            }\n\n            if (privateKey.startsWith('0x')) {\n                privateKey = privateKey.substring(2);\n            }\n\n            var ethTx = new Transaction(transaction, transactionOptions);\n\n            ethTx.sign(Buffer.from(privateKey, 'hex'));\n\n            var validationResult = ethTx.validate(true);\n\n            if (validationResult !== '') {\n                throw new Error('Signer Error: ' + validationResult);\n            }\n\n            var rlpEncoded = ethTx.serialize().toString('hex');\n            var rawTransaction = '0x' + rlpEncoded;\n            var transactionHash = utils.keccak256(rawTransaction);\n\n            var result = {\n                messageHash: '0x' + Buffer.from(ethTx.hash(false)).toString('hex'),\n                v: '0x' + Buffer.from(ethTx.v).toString('hex'),\n                r: '0x' + Buffer.from(ethTx.r).toString('hex'),\n                s: '0x' + Buffer.from(ethTx.s).toString('hex'),\n                rawTransaction: rawTransaction,\n                transactionHash: transactionHash\n            };\n\n            callback(null, result);\n            return result;\n\n        } catch (e) {\n            callback(e);\n            return Promise.reject(e);\n        }\n    }\n\n\n    // Resolve immediately if nonce, chainId, price and signing options are provided\n    if (tx.nonce !== undefined && tx.chainId !== undefined && tx.gasPrice !== undefined && hasTxSigningOptions) {\n        return Promise.resolve(signed(tx));\n    }\n\n    // Otherwise, get the missing info from the Ethereum Node\n    return Promise.all([\n        isNot(tx.chainId) ? _this._ethereumCall.getChainId() : tx.chainId,\n        isNot(tx.gasPrice) ? _this._ethereumCall.getGasPrice() : tx.gasPrice,\n        isNot(tx.nonce) ? _this._ethereumCall.getTransactionCount(_this.privateKeyToAccount(privateKey).address) : tx.nonce,\n        isNot(hasTxSigningOptions) ? _this._ethereumCall.getNetworkId() : 1\n    ]).then(function(args) {\n        if (isNot(args[0]) || isNot(args[1]) || isNot(args[2]) || isNot(args[3])) {\n            throw new Error('One of the values \"chainId\", \"networkId\", \"gasPrice\", or \"nonce\" couldn\\'t be fetched: ' + JSON.stringify(args));\n        }\n        return signed(_.extend(tx, {chainId: args[0], gasPrice: args[1], nonce: args[2], networkId: args[3]}));\n    });\n};\n\n/* jshint ignore:start */\nAccounts.prototype.recoverTransaction = function recoverTransaction(rawTx) {\n    var values = RLP.decode(rawTx);\n    var signature = Account.encodeSignature(values.slice(6, 9));\n    var recovery = Bytes.toNumber(values[6]);\n    var extraData = recovery < 35 ? [] : [Bytes.fromNumber((recovery - 35) >> 1), '0x', '0x'];\n    var signingData = values.slice(0, 6).concat(extraData);\n    var signingDataHex = RLP.encode(signingData);\n    return Account.recover(Hash.keccak256(signingDataHex), signature);\n};\n/* jshint ignore:end */\n\nAccounts.prototype.hashMessage = function hashMessage(data) {\n    var message = utils.isHexStrict(data) ? utils.hexToBytes(data) : data;\n    var messageBuffer = Buffer.from(message);\n    var preamble = '\\x19Ethereum Signed Message:\\n' + message.length;\n    var preambleBuffer = Buffer.from(preamble);\n    var ethMessage = Buffer.concat([preambleBuffer, messageBuffer]);\n    return Hash.keccak256s(ethMessage);\n};\n\nAccounts.prototype.sign = function sign(data, privateKey) {\n    var hash = this.hashMessage(data);\n    var signature = Account.sign(hash, privateKey);\n    var vrs = Account.decodeSignature(signature);\n    return {\n        message: data,\n        messageHash: hash,\n        v: vrs[0],\n        r: vrs[1],\n        s: vrs[2],\n        signature: signature\n    };\n};\n\nAccounts.prototype.recover = function recover(message, signature, preFixed) {\n    var args = [].slice.apply(arguments);\n\n\n    if (_.isObject(message)) {\n        return this.recover(message.messageHash, Account.encodeSignature([message.v, message.r, message.s]), true);\n    }\n\n    if (!preFixed) {\n        message = this.hashMessage(message);\n    }\n\n    if (args.length >= 4) {\n        preFixed = args.slice(-1)[0];\n        preFixed = _.isBoolean(preFixed) ? !!preFixed : false;\n\n        return this.recover(message, Account.encodeSignature(args.slice(1, 4)), preFixed); // v, r, s\n    }\n    return Account.recover(message, signature);\n};\n\n// Taken from https://github.com/ethereumjs/ethereumjs-wallet\nAccounts.prototype.decrypt = function(v3Keystore, password, nonStrict) {\n    /* jshint maxcomplexity: 10 */\n\n    if (!_.isString(password)) {\n        throw new Error('No password given.');\n    }\n\n    var json = (_.isObject(v3Keystore)) ? v3Keystore : JSON.parse(nonStrict ? v3Keystore.toLowerCase() : v3Keystore);\n\n    if (json.version !== 3) {\n        throw new Error('Not a valid V3 wallet');\n    }\n\n    var derivedKey;\n    var kdfparams;\n    if (json.crypto.kdf === 'scrypt') {\n        kdfparams = json.crypto.kdfparams;\n\n        // FIXME: support progress reporting callback\n        derivedKey = scrypt(Buffer.from(password), Buffer.from(kdfparams.salt, 'hex'), kdfparams.n, kdfparams.r, kdfparams.p, kdfparams.dklen);\n    } else if (json.crypto.kdf === 'pbkdf2') {\n        kdfparams = json.crypto.kdfparams;\n\n        if (kdfparams.prf !== 'hmac-sha256') {\n            throw new Error('Unsupported parameters to PBKDF2');\n        }\n\n        derivedKey = cryp.pbkdf2Sync(Buffer.from(password), Buffer.from(kdfparams.salt, 'hex'), kdfparams.c, kdfparams.dklen, 'sha256');\n    } else {\n        throw new Error('Unsupported key derivation scheme');\n    }\n\n    var ciphertext = Buffer.from(json.crypto.ciphertext, 'hex');\n\n    var mac = utils.sha3(Buffer.concat([derivedKey.slice(16, 32), ciphertext])).replace('0x', '');\n    if (mac !== json.crypto.mac) {\n        throw new Error('Key derivation failed - possibly wrong password');\n    }\n\n    var decipher = cryp.createDecipheriv(json.crypto.cipher, derivedKey.slice(0, 16), Buffer.from(json.crypto.cipherparams.iv, 'hex'));\n    var seed = '0x' + Buffer.concat([decipher.update(ciphertext), decipher.final()]).toString('hex');\n\n    return this.privateKeyToAccount(seed);\n};\n\nAccounts.prototype.encrypt = function(privateKey, password, options) {\n    /* jshint maxcomplexity: 20 */\n    var account = this.privateKeyToAccount(privateKey);\n\n    options = options || {};\n    var salt = options.salt || cryp.randomBytes(32);\n    var iv = options.iv || cryp.randomBytes(16);\n\n    var derivedKey;\n    var kdf = options.kdf || 'scrypt';\n    var kdfparams = {\n        dklen: options.dklen || 32,\n        salt: salt.toString('hex')\n    };\n\n    if (kdf === 'pbkdf2') {\n        kdfparams.c = options.c || 262144;\n        kdfparams.prf = 'hmac-sha256';\n        derivedKey = cryp.pbkdf2Sync(Buffer.from(password), Buffer.from(kdfparams.salt, 'hex'), kdfparams.c, kdfparams.dklen, 'sha256');\n    } else if (kdf === 'scrypt') {\n        // FIXME: support progress reporting callback\n        kdfparams.n = options.n || 8192; // 2048 4096 8192 16384\n        kdfparams.r = options.r || 8;\n        kdfparams.p = options.p || 1;\n        derivedKey = scrypt(Buffer.from(password), Buffer.from(kdfparams.salt, 'hex'), kdfparams.n, kdfparams.r, kdfparams.p, kdfparams.dklen);\n    } else {\n        throw new Error('Unsupported kdf');\n    }\n\n    var cipher = cryp.createCipheriv(options.cipher || 'aes-128-ctr', derivedKey.slice(0, 16), iv);\n    if (!cipher) {\n        throw new Error('Unsupported cipher');\n    }\n\n    var ciphertext = Buffer.concat([cipher.update(Buffer.from(account.privateKey.replace('0x', ''), 'hex')), cipher.final()]);\n\n    var mac = utils.sha3(Buffer.concat([derivedKey.slice(16, 32), Buffer.from(ciphertext, 'hex')])).replace('0x', '');\n\n    return {\n        version: 3,\n        id: uuid.v4({random: options.uuid || cryp.randomBytes(16)}),\n        address: account.address.toLowerCase().replace('0x', ''),\n        crypto: {\n            ciphertext: ciphertext.toString('hex'),\n            cipherparams: {\n                iv: iv.toString('hex')\n            },\n            cipher: options.cipher || 'aes-128-ctr',\n            kdf: kdf,\n            kdfparams: kdfparams,\n            mac: mac.toString('hex')\n        }\n    };\n};\n\n\n// Note: this is trying to follow closely the specs on\n// http://web3js.readthedocs.io/en/1.0/web3-eth-accounts.html\n\nfunction Wallet(accounts) {\n    this._accounts = accounts;\n    this.length = 0;\n    this.defaultKeyName = 'web3js_wallet';\n}\n\nWallet.prototype._findSafeIndex = function(pointer) {\n    pointer = pointer || 0;\n    if (_.has(this, pointer)) {\n        return this._findSafeIndex(pointer + 1);\n    } else {\n        return pointer;\n    }\n};\n\nWallet.prototype._currentIndexes = function() {\n    var keys = Object.keys(this);\n    var indexes = keys\n        .map(function(key) {\n            return parseInt(key);\n        })\n        .filter(function(n) {\n            return (n < 9e20);\n        });\n\n    return indexes;\n};\n\nWallet.prototype.create = function(numberOfAccounts, entropy) {\n    for (var i = 0; i < numberOfAccounts; ++i) {\n        this.add(this._accounts.create(entropy).privateKey);\n    }\n    return this;\n};\n\nWallet.prototype.add = function(account) {\n\n    if (_.isString(account)) {\n        account = this._accounts.privateKeyToAccount(account);\n    }\n    if (!this[account.address]) {\n        account = this._accounts.privateKeyToAccount(account.privateKey);\n        account.index = this._findSafeIndex();\n\n        this[account.index] = account;\n        this[account.address] = account;\n        this[account.address.toLowerCase()] = account;\n\n        this.length++;\n\n        return account;\n    } else {\n        return this[account.address];\n    }\n};\n\nWallet.prototype.remove = function(addressOrIndex) {\n    var account = this[addressOrIndex];\n\n    if (account && account.address) {\n        // address\n        this[account.address].privateKey = null;\n        delete this[account.address];\n        // address lowercase\n        this[account.address.toLowerCase()].privateKey = null;\n        delete this[account.address.toLowerCase()];\n        // index\n        this[account.index].privateKey = null;\n        delete this[account.index];\n\n        this.length--;\n\n        return true;\n    } else {\n        return false;\n    }\n};\n\nWallet.prototype.clear = function() {\n    var _this = this;\n    var indexes = this._currentIndexes();\n\n    indexes.forEach(function(index) {\n        _this.remove(index);\n    });\n\n    return this;\n};\n\nWallet.prototype.encrypt = function(password, options) {\n    var _this = this;\n    var indexes = this._currentIndexes();\n\n    var accounts = indexes.map(function(index) {\n        return _this[index].encrypt(password, options);\n    });\n\n    return accounts;\n};\n\n\nWallet.prototype.decrypt = function(encryptedWallet, password) {\n    var _this = this;\n\n    encryptedWallet.forEach(function(keystore) {\n        var account = _this._accounts.decrypt(keystore, password);\n\n        if (account) {\n            _this.add(account);\n        } else {\n            throw new Error('Couldn\\'t decrypt accounts. Password wrong?');\n        }\n    });\n\n    return this;\n};\n\nWallet.prototype.save = function(password, keyName) {\n    localStorage.setItem(keyName || this.defaultKeyName, JSON.stringify(this.encrypt(password)));\n\n    return true;\n};\n\nWallet.prototype.load = function(password, keyName) {\n    var keystore = localStorage.getItem(keyName || this.defaultKeyName);\n\n    if (keystore) {\n        try {\n            keystore = JSON.parse(keystore);\n        } catch (e) {\n\n        }\n    }\n\n    return this.decrypt(keystore || [], password);\n};\n\nif (!storageAvailable('localStorage')) {\n    delete Wallet.prototype.save;\n    delete Wallet.prototype.load;\n}\n\n/**\n * Checks whether a storage type is available or not\n * For more info on how this works, please refer to MDN documentation\n * https://developer.mozilla.org/en-US/docs/Web/API/Web_Storage_API/Using_the_Web_Storage_API#Feature-detecting_localStorage\n *\n * @method storageAvailable\n * @param {String} type the type of storage ('localStorage', 'sessionStorage')\n * @returns {Boolean} a boolean indicating whether the specified storage is available or not\n */\nfunction storageAvailable(type) {\n    var storage;\n    try {\n        storage = window[type];\n        var x = '__storage_test__';\n        storage.setItem(x, x);\n        storage.removeItem(x);\n        return true;\n    } catch (e) {\n        return e && (\n                // everything except Firefox\n            e.code === 22 ||\n            // Firefox\n            e.code === 1014 ||\n            // test name field too, because code might not be present\n            // everything except Firefox\n            e.name === 'QuotaExceededError' ||\n            // Firefox\n            e.name === 'NS_ERROR_DOM_QUOTA_REACHED') &&\n            // acknowledge QuotaExceededError only if there's something already stored\n            (storage && storage.length !== 0);\n    }\n}\n\n\nmodule.exports = Accounts;\n\n};"],
"names":["shadow$provide","global","require","module","exports","Wallet","accounts","_accounts","length","defaultKeyName","Buffer","_","core","Method","Promise","Account","Hash","RLP","Bytes","cryp","scrypt","uuid","utils","helpers","Transaction","Common","default","isNot","value","isUndefined","isNull","Accounts","_this","packageInit","arguments","BatchRequest","extend","_ethereumCall","name","call","params","outputFormatter","parseInt","hexToNumber","inputFormatter","address","isAddress","Error","each","method","attachToObject","setRequestManager","_requestManager","wallet","prototype","_addAccountFunctions","Accounts.prototype._addAccountFunctions","account","signTransaction","account.signTransaction","tx","callback","privateKey","sign","account.sign","data","encrypt","account.encrypt","password","options","create","Accounts.prototype.create","entropy","randomHex","privateKeyToAccount","Accounts.prototype.privateKeyToAccount","fromPrivate","Accounts.prototype.signTransaction","signed","common","chain","hardfork","error","gas","gasLimit","nonce","gasPrice","chainId","reject","transaction","formatters","inputCallFormatter","clone","to","numberToHex","hasTxSigningOptions","transactionOptions","forCustomChain","baseChain","customChain","networkId","startsWith","substring","ethTx","from","validationResult","validate","rawTransaction","serialize","toString","rlpEncoded","transactionHash","keccak256","result","messageHash","hash","v","r","s","e","undefined","resolve","all","getChainId","getGasPrice","getTransactionCount","getNetworkId","then","args","JSON","stringify","recoverTransaction","Accounts.prototype.recoverTransaction","rawTx","values","decode","signature","encodeSignature","slice","recovery","toNumber","extraData","fromNumber","signingData","concat","signingDataHex","encode","recover","hashMessage","Accounts.prototype.hashMessage","message","isHexStrict","hexToBytes","messageBuffer","preambleBuffer","ethMessage","keccak256s","Accounts.prototype.sign","vrs","decodeSignature","Accounts.prototype.recover","preFixed","apply","isObject","isBoolean","decrypt","Accounts.prototype.decrypt","v3Keystore","nonStrict","isString","json","parse","toLowerCase","version","crypto","kdf","kdfparams","derivedKey","salt","n","p","dklen","prf","pbkdf2Sync","c","ciphertext","sha3","replace","mac","decipher","createDecipheriv","cipher","cipherparams","iv","seed","update","final","Accounts.prototype.encrypt","randomBytes","createCipheriv","id","v4","random","_findSafeIndex","Wallet.prototype._findSafeIndex","pointer","has","_currentIndexes","Wallet.prototype._currentIndexes","Object","keys","map","key","filter","indexes","Wallet.prototype.create","numberOfAccounts","i","add","Wallet.prototype.add","index","remove","Wallet.prototype.remove","addressOrIndex","clear","Wallet.prototype.clear","forEach","Wallet.prototype.encrypt","Wallet.prototype.decrypt","encryptedWallet","keystore","save","Wallet.prototype.save","keyName","localStorage","setItem","load","Wallet.prototype.load","getItem","storageAvailable","type","storage","window","x","removeItem","code"]
}
