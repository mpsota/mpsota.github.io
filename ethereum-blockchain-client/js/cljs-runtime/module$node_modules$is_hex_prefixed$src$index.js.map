{
"version":3,
"file":"module$node_modules$is_hex_prefixed$src$index.js",
"lineCount":1,
"mappings":"AAAAA,cAAA,8CAAA,CAAkE,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAO1GD,MAAAC,QAAA,CAAiBC,QAAsB,CAACC,GAAD,CAAM,CAC3C,GAAmB,QAAnB,GAAI,MAAOA,IAAX,CACE,KAAUC,MAAJ,CAAU,mEAAV,CAAiF,MAAOD,IAAxF,CAA+F,iCAA/F,CAAN,CAGF,MAA2B,IAA3B,GAAOA,GAAAE,MAAA,CAAU,CAAV,CAAa,CAAb,CALoC,CAP6D;",
"sources":["node_modules/is-hex-prefixed/src/index.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$is_hex_prefixed$src$index\"] = function(global,require,module,exports) {\n/**\n * Returns a `Boolean` on whether or not the a `String` starts with '0x'\n * @param {String} str the string input value\n * @return {Boolean} a boolean if it is or is not hex prefixed\n * @throws if the str input is not a string\n */\nmodule.exports = function isHexPrefixed(str) {\n  if (typeof str !== 'string') {\n    throw new Error(\"[is-hex-prefixed] value must be type 'string', is currently type \" + (typeof str) + \", while checking isHexPrefixed.\");\n  }\n\n  return str.slice(0, 2) === '0x';\n}\n\n};"],
"names":["shadow$provide","global","require","module","exports","module.exports","str","Error","slice"]
}
