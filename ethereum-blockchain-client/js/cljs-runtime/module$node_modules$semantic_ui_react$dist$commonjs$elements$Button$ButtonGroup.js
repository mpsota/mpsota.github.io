shadow$provide.module$node_modules$semantic_ui_react$dist$commonjs$elements$Button$ButtonGroup=function(global,require,module,exports){function ButtonGroup(props){var attached=props.attached,basic=props.basic,buttons=props.buttons,children=props.children,className=props.className,color=props.color,compact=props.compact,content=props.content,floated=props.floated,fluid=props.fluid,icon=props.icon,inverted=props.inverted,labeled=props.labeled,negative=props.negative,positive=props.positive,primary=
props.primary,secondary=props.secondary,size=props.size,toggle=props.toggle,vertical=props.vertical,widths=props.widths;attached=(0,_classnames["default"])("ui",color,size,(0,_lib.useKeyOnly)(basic,"basic"),(0,_lib.useKeyOnly)(compact,"compact"),(0,_lib.useKeyOnly)(fluid,"fluid"),(0,_lib.useKeyOnly)(icon,"icon"),(0,_lib.useKeyOnly)(inverted,"inverted"),(0,_lib.useKeyOnly)(labeled,"labeled"),(0,_lib.useKeyOnly)(negative,"negative"),(0,_lib.useKeyOnly)(positive,"positive"),(0,_lib.useKeyOnly)(primary,
"primary"),(0,_lib.useKeyOnly)(secondary,"secondary"),(0,_lib.useKeyOnly)(toggle,"toggle"),(0,_lib.useKeyOnly)(vertical,"vertical"),(0,_lib.useKeyOrValueAndKey)(attached,"attached"),(0,_lib.useValueAndKey)(floated,"floated"),(0,_lib.useWidthProp)(widths),"buttons",className);basic=(0,_lib.getUnhandledProps)(ButtonGroup,props);props=(0,_lib.getElementType)(ButtonGroup,props);return(0,_isNil2["default"])(buttons)?_react["default"].createElement(props,(0,_extends2["default"])({},basic,{className:attached}),
_lib.childrenUtils.isNil(children)?content:children):_react["default"].createElement(props,(0,_extends2["default"])({},basic,{className:attached}),(0,_map2["default"])(buttons,function(button){return _Button["default"].create(button)}))}global=require("module$node_modules$$babel$runtime$helpers$interopRequireDefault");Object.defineProperty(exports,"__esModule",{value:!0});exports["default"]=void 0;var _extends2=global(require("module$node_modules$$babel$runtime$helpers$extends")),_map2=global(require("module$node_modules$lodash$map")),
_isNil2=global(require("module$node_modules$lodash$isNil")),_classnames=global(require("module$node_modules$classnames$index"));module=global(require("module$node_modules$prop_types$index"));var _react=global(require("module$node_modules$react$index")),_lib=require("module$node_modules$semantic_ui_react$dist$commonjs$lib$index"),_Button=global(require("module$node_modules$semantic_ui_react$dist$commonjs$elements$Button$Button"));ButtonGroup.handledProps="as attached basic buttons children className color compact content floated fluid icon inverted labeled negative positive primary secondary size toggle vertical widths".split(" ");
ButtonGroup.propTypes={as:module["default"].elementType,attached:module["default"].oneOfType([module["default"].bool,module["default"].oneOf(["left","right","top","bottom"])]),basic:module["default"].bool,buttons:_lib.customPropTypes.collectionShorthand,children:module["default"].node,className:module["default"].string,color:module["default"].oneOf(_lib.SUI.COLORS),compact:module["default"].bool,content:_lib.customPropTypes.contentShorthand,floated:module["default"].oneOf(_lib.SUI.FLOATS),fluid:module["default"].bool,
icon:module["default"].bool,inverted:module["default"].bool,labeled:module["default"].bool,negative:module["default"].bool,positive:module["default"].bool,primary:module["default"].bool,secondary:module["default"].bool,size:module["default"].oneOf(_lib.SUI.SIZES),toggle:module["default"].bool,vertical:module["default"].bool,widths:module["default"].oneOf(_lib.SUI.WIDTHS)};exports["default"]=ButtonGroup}
//# sourceMappingURL=module$node_modules$semantic_ui_react$dist$commonjs$elements$Button$ButtonGroup.js.map
