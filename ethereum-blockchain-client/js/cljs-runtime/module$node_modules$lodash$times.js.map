{
"version":3,
"file":"module$node_modules$lodash$times.js",
"lineCount":2,
"mappings":"AAAAA,cAAA,iCAAA,CAAqD,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAAA,IACzFC,UAAYH,OAAA,CAAQ,uCAAR,CAD6E,CAEzFI,aAAeJ,OAAA,CAAQ,0CAAR,CAF0E,CAGzFK,UAAYL,OAAA,CAAQ,sCAAR,CAH6E,CAYzFM,UAAYC,IAAAC,IAuChBP,OAAAC,QAAA,CAlBAO,QAAc,CAACC,CAAD,CAAIC,QAAJ,CAAc,CAC1BD,CAAA,CAAIL,SAAA,CAAUK,CAAV,CACJ,IAAQ,CAAR,CAAIA,CAAJ,EA7BqBE,gBA6BrB,CAAaF,CAAb,CACE,MAAO,EAHiB,KAKtBG,MA7BiBC,UAwBK,CAMtBC,OAAST,SAAA,CAAUI,CAAV,CA9BQI,UA8BR,CAEbH,SAAA,CAAWP,YAAA,CAAaO,QAAb,CACXD,EAAA,EAjCqBI,UAoCrB,KADIE,MACJ,CADab,SAAA,CAAUY,MAAV;AAAkBJ,QAAlB,CACb,CAAO,EAAEE,KAAT,CAAiBH,CAAjB,CAAA,CACEC,QAAA,CAASE,KAAT,CAEF,OAAOG,OAfmB,CAjCiE;",
"sources":["node_modules/lodash/times.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$lodash$times\"] = function(global,require,module,exports) {\nvar baseTimes = require('./_baseTimes'),\n    castFunction = require('./_castFunction'),\n    toInteger = require('./toInteger');\n\n/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/** Used as references for the maximum length and index of an array. */\nvar MAX_ARRAY_LENGTH = 4294967295;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMin = Math.min;\n\n/**\n * Invokes the iteratee `n` times, returning an array of the results of\n * each invocation. The iteratee is invoked with one argument; (index).\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Util\n * @param {number} n The number of times to invoke `iteratee`.\n * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n * @returns {Array} Returns the array of results.\n * @example\n *\n * _.times(3, String);\n * // => ['0', '1', '2']\n *\n *  _.times(4, _.constant(0));\n * // => [0, 0, 0, 0]\n */\nfunction times(n, iteratee) {\n  n = toInteger(n);\n  if (n < 1 || n > MAX_SAFE_INTEGER) {\n    return [];\n  }\n  var index = MAX_ARRAY_LENGTH,\n      length = nativeMin(n, MAX_ARRAY_LENGTH);\n\n  iteratee = castFunction(iteratee);\n  n -= MAX_ARRAY_LENGTH;\n\n  var result = baseTimes(length, iteratee);\n  while (++index < n) {\n    iteratee(index);\n  }\n  return result;\n}\n\nmodule.exports = times;\n\n};"],
"names":["shadow$provide","global","require","module","exports","baseTimes","castFunction","toInteger","nativeMin","Math","min","times","n","iteratee","MAX_SAFE_INTEGER","index","MAX_ARRAY_LENGTH","length","result"]
}
