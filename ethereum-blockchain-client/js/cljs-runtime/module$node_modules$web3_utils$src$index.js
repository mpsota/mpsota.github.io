shadow$provide.module$node_modules$web3_utils$src$index=function(global,require,module,exports){var _=require("module$node_modules$underscore$underscore"),ethjsUnit=require("module$node_modules$ethjs_unit$lib$index"),utils=require("module$node_modules$web3_utils$src$utils");global=require("module$node_modules$web3_utils$src$soliditySha3");var randombytes=require("module$node_modules$randombytes$browser"),_flattenTypes=function(includeTuple,puts){var types=[];puts.forEach(function(param){if("object"===
typeof param.components){if("tuple"!==param.type.substring(0,5))throw Error("components found but type is not tuple; report on GitHub");var suffix="",arrayBracket=param.type.indexOf("[");0<=arrayBracket&&(suffix=param.type.substring(arrayBracket));param=_flattenTypes(includeTuple,param.components);_.isArray(param)&&includeTuple?types.push("tuple("+param.join(",")+")"+suffix):includeTuple?types.push("("+param+")"):types.push("("+param.join(",")+")"+suffix)}else types.push(param.type)});return types};
require=function(hex){if(!utils.isHexStrict(hex))throw Error("The parameter must be a valid HEX string.");var str="",i=0,l=hex.length;for("0x"===hex.substring(0,2)&&(i=2);i<l;i+=2){var code=parseInt(hex.substr(i,2),16);str+=String.fromCharCode(code)}return str};exports=function(str){if(!str)return"0x00";for(var hex="",i=0;i<str.length;i++){var n=str.charCodeAt(i).toString(16);hex+=2>n.length?"0"+n:n}return"0x"+hex};var getUnitValue=function(unit){unit=unit?unit.toLowerCase():"ether";if(!ethjsUnit.unitMap[unit])throw Error('This unit "'+
unit+"\" doesn't exist, please use the one of the following units"+JSON.stringify(ethjsUnit.unitMap,null,2));return unit};module.exports={_fireError:function(error,emitter,reject,callback,optionalData){if(_.isObject(error)&&!(error instanceof Error)&&error.data){if(_.isObject(error.data)||_.isArray(error.data))error.data=JSON.stringify(error.data,null,2);error=error.message+"\n"+error.data}_.isString(error)&&(error=Error(error));_.isFunction(callback)&&callback(error,optionalData);_.isFunction(reject)&&
((emitter&&_.isFunction(emitter.listeners)&&emitter.listeners("error").length||_.isFunction(callback))&&emitter.catch(function(){}),setTimeout(function(){reject(error)},1));emitter&&_.isFunction(emitter.emit)&&setTimeout(function(){emitter.emit("error",error,optionalData);emitter.removeAllListeners()},1);return emitter},_jsonInterfaceMethodToString:function(json){return _.isObject(json)&&json.name&&-1!==json.name.indexOf("(")?json.name:json.name+"("+_flattenTypes(!1,json.inputs).join(",")+")"},_flattenTypes:_flattenTypes,
randomHex:function(size){return"0x"+randombytes(size).toString("hex")},_:_,BN:utils.BN,isBN:utils.isBN,isBigNumber:utils.isBigNumber,isHex:utils.isHex,isHexStrict:utils.isHexStrict,sha3:utils.sha3,sha3Raw:utils.sha3Raw,keccak256:utils.sha3,soliditySha3:global.soliditySha3,soliditySha3Raw:global.soliditySha3Raw,isAddress:utils.isAddress,checkAddressChecksum:utils.checkAddressChecksum,toChecksumAddress:function(address){if("undefined"===typeof address)return"";if(!/^(0x)?[0-9a-f]{40}$/i.test(address))throw Error('Given address "'+
address+'" is not a valid Ethereum address.');address=address.toLowerCase().replace(/^0x/i,"");for(var addressHash=utils.sha3(address).replace(/^0x/i,""),checksumAddress="0x",i=0;i<address.length;i++)checksumAddress=7<parseInt(addressHash[i],16)?checksumAddress+address[i].toUpperCase():checksumAddress+address[i];return checksumAddress},toHex:utils.toHex,toBN:utils.toBN,bytesToHex:utils.bytesToHex,hexToBytes:utils.hexToBytes,hexToNumberString:utils.hexToNumberString,hexToNumber:utils.hexToNumber,toDecimal:utils.hexToNumber,
numberToHex:utils.numberToHex,fromDecimal:utils.numberToHex,hexToUtf8:utils.hexToUtf8,hexToString:utils.hexToUtf8,toUtf8:utils.hexToUtf8,utf8ToHex:utils.utf8ToHex,stringToHex:utils.utf8ToHex,fromUtf8:utils.utf8ToHex,hexToAscii:require,toAscii:require,asciiToHex:exports,fromAscii:exports,unitMap:ethjsUnit.unitMap,toWei:function(number,unit){unit=getUnitValue(unit);if(!utils.isBN(number)&&!_.isString(number))throw Error("Please pass numbers as strings or BN objects to avoid precision errors.");return utils.isBN(number)?
ethjsUnit.toWei(number,unit):ethjsUnit.toWei(number,unit).toString(10)},fromWei:function(number,unit){unit=getUnitValue(unit);if(!utils.isBN(number)&&!_.isString(number))throw Error("Please pass numbers as strings or BN objects to avoid precision errors.");return utils.isBN(number)?ethjsUnit.fromWei(number,unit):ethjsUnit.fromWei(number,unit).toString(10)},padLeft:utils.leftPad,leftPad:utils.leftPad,padRight:utils.rightPad,rightPad:utils.rightPad,toTwosComplement:utils.toTwosComplement,isBloom:utils.isBloom,
isUserEthereumAddressInBloom:utils.isUserEthereumAddressInBloom,isContractAddressInBloom:utils.isContractAddressInBloom,isTopic:utils.isTopic,isTopicInBloom:utils.isTopicInBloom,isInBloom:utils.isInBloom}}
//# sourceMappingURL=module$node_modules$web3_utils$src$index.js.map
