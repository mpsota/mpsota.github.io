{
"version":3,
"file":"module$node_modules$eth_lib$lib$bytes.js",
"lineCount":7,
"mappings":"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",
"sources":["node_modules/eth-lib/lib/bytes.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$eth_lib$lib$bytes\"] = function(global,require,module,exports) {\nvar A = require(\"./array.js\");\n\nvar at = function at(bytes, index) {\n  return parseInt(bytes.slice(index * 2 + 2, index * 2 + 4), 16);\n};\n\nvar random = function random(bytes) {\n  var rnd = void 0;\n  if (typeof window !== \"undefined\" && window.crypto && window.crypto.getRandomValues) rnd = window.crypto.getRandomValues(new Uint8Array(bytes));else if (typeof require !== \"undefined\") rnd = require(\"c\" + \"rypto\").randomBytes(bytes);else throw \"Safe random numbers not available.\";\n  var hex = \"0x\";\n  for (var i = 0; i < bytes; ++i) {\n    hex += (\"00\" + rnd[i].toString(16)).slice(-2);\n  }return hex;\n};\n\nvar length = function length(a) {\n  return (a.length - 2) / 2;\n};\n\nvar flatten = function flatten(a) {\n  return \"0x\" + a.reduce(function (r, s) {\n    return r + s.slice(2);\n  }, \"\");\n};\n\nvar slice = function slice(i, j, bs) {\n  return \"0x\" + bs.slice(i * 2 + 2, j * 2 + 2);\n};\n\nvar reverse = function reverse(hex) {\n  var rev = \"0x\";\n  for (var i = 0, l = length(hex); i < l; ++i) {\n    rev += hex.slice((l - i) * 2, (l - i + 1) * 2);\n  }\n  return rev;\n};\n\nvar pad = function pad(l, hex) {\n  return hex.length === l * 2 + 2 ? hex : pad(l, \"0x\" + \"0\" + hex.slice(2));\n};\n\nvar padRight = function padRight(l, hex) {\n  return hex.length === l * 2 + 2 ? hex : padRight(l, hex + \"0\");\n};\n\nvar toArray = function toArray(hex) {\n  var arr = [];\n  for (var i = 2, l = hex.length; i < l; i += 2) {\n    arr.push(parseInt(hex.slice(i, i + 2), 16));\n  }return arr;\n};\n\nvar fromArray = function fromArray(arr) {\n  var hex = \"0x\";\n  for (var i = 0, l = arr.length; i < l; ++i) {\n    var b = arr[i];\n    hex += (b < 16 ? \"0\" : \"\") + b.toString(16);\n  }\n  return hex;\n};\n\nvar toUint8Array = function toUint8Array(hex) {\n  return new Uint8Array(toArray(hex));\n};\n\nvar fromUint8Array = function fromUint8Array(arr) {\n  return fromArray([].slice.call(arr, 0));\n};\n\nvar fromNumber = function fromNumber(num) {\n  var hex = num.toString(16);\n  return hex.length % 2 === 0 ? \"0x\" + hex : \"0x0\" + hex;\n};\n\nvar toNumber = function toNumber(hex) {\n  return parseInt(hex.slice(2), 16);\n};\n\nvar concat = function concat(a, b) {\n  return a.concat(b.slice(2));\n};\n\nvar fromNat = function fromNat(bn) {\n  return bn === \"0x0\" ? \"0x\" : bn.length % 2 === 0 ? bn : \"0x0\" + bn.slice(2);\n};\n\nvar toNat = function toNat(bn) {\n  return bn[2] === \"0\" ? \"0x\" + bn.slice(3) : bn;\n};\n\nvar fromAscii = function fromAscii(ascii) {\n  var hex = \"0x\";\n  for (var i = 0; i < ascii.length; ++i) {\n    hex += (\"00\" + ascii.charCodeAt(i).toString(16)).slice(-2);\n  }return hex;\n};\n\nvar toAscii = function toAscii(hex) {\n  var ascii = \"\";\n  for (var i = 2; i < hex.length; i += 2) {\n    ascii += String.fromCharCode(parseInt(hex.slice(i, i + 2), 16));\n  }return ascii;\n};\n\n// From https://gist.github.com/pascaldekloe/62546103a1576803dade9269ccf76330\nvar fromString = function fromString(s) {\n  var makeByte = function makeByte(uint8) {\n    var b = uint8.toString(16);\n    return b.length < 2 ? \"0\" + b : b;\n  };\n  var bytes = \"0x\";\n  for (var ci = 0; ci != s.length; ci++) {\n    var c = s.charCodeAt(ci);\n    if (c < 128) {\n      bytes += makeByte(c);\n      continue;\n    }\n    if (c < 2048) {\n      bytes += makeByte(c >> 6 | 192);\n    } else {\n      if (c > 0xd7ff && c < 0xdc00) {\n        if (++ci == s.length) return null;\n        var c2 = s.charCodeAt(ci);\n        if (c2 < 0xdc00 || c2 > 0xdfff) return null;\n        c = 0x10000 + ((c & 0x03ff) << 10) + (c2 & 0x03ff);\n        bytes += makeByte(c >> 18 | 240);\n        bytes += makeByte(c >> 12 & 63 | 128);\n      } else {\n        // c <= 0xffff\n        bytes += makeByte(c >> 12 | 224);\n      }\n      bytes += makeByte(c >> 6 & 63 | 128);\n    }\n    bytes += makeByte(c & 63 | 128);\n  }\n  return bytes;\n};\n\nvar toString = function toString(bytes) {\n  var s = '';\n  var i = 0;\n  var l = length(bytes);\n  while (i < l) {\n    var c = at(bytes, i++);\n    if (c > 127) {\n      if (c > 191 && c < 224) {\n        if (i >= l) return null;\n        c = (c & 31) << 6 | at(bytes, i) & 63;\n      } else if (c > 223 && c < 240) {\n        if (i + 1 >= l) return null;\n        c = (c & 15) << 12 | (at(bytes, i) & 63) << 6 | at(bytes, ++i) & 63;\n      } else if (c > 239 && c < 248) {\n        if (i + 2 >= l) return null;\n        c = (c & 7) << 18 | (at(bytes, i) & 63) << 12 | (at(bytes, ++i) & 63) << 6 | at(bytes, ++i) & 63;\n      } else return null;\n      ++i;\n    }\n    if (c <= 0xffff) s += String.fromCharCode(c);else if (c <= 0x10ffff) {\n      c -= 0x10000;\n      s += String.fromCharCode(c >> 10 | 0xd800);\n      s += String.fromCharCode(c & 0x3FF | 0xdc00);\n    } else return null;\n  }\n  return s;\n};\n\nmodule.exports = {\n  random: random,\n  length: length,\n  concat: concat,\n  flatten: flatten,\n  slice: slice,\n  reverse: reverse,\n  pad: pad,\n  padRight: padRight,\n  fromAscii: fromAscii,\n  toAscii: toAscii,\n  fromString: fromString,\n  toString: toString,\n  fromNumber: fromNumber,\n  toNumber: toNumber,\n  fromNat: fromNat,\n  toNat: toNat,\n  fromArray: fromArray,\n  toArray: toArray,\n  fromUint8Array: fromUint8Array,\n  toUint8Array: toUint8Array\n};\n};"],
"names":["shadow$provide","global","require","module","exports","at","bytes","index","parseInt","slice","length","a","toArray","hex","arr","i","l","push","fromArray","b","toString","random","window","crypto","getRandomValues","rnd","Uint8Array","randomBytes","concat","flatten","reduce","r","s","j","bs","reverse","rev","pad","padRight","fromAscii","ascii","charCodeAt","toAscii","String","fromCharCode","fromString","makeByte","uint8","ci","c","c2","fromNumber","num","toNumber","fromNat","bn","toNat","fromUint8Array","call","toUint8Array"]
}
