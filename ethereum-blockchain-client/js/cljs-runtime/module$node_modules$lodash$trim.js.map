{
"version":3,
"file":"module$node_modules$lodash$trim.js",
"lineCount":2,
"mappings":"AAAAA,cAAA,gCAAA,CAAoD,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAAA,IACxFC,aAAeH,OAAA,CAAQ,0CAAR,CADyE,CAExFI,UAAYJ,OAAA,CAAQ,uCAAR,CAF4E,CAGxFK,cAAgBL,OAAA,CAAQ,2CAAR,CAHwE,CAIxFM,gBAAkBN,OAAA,CAAQ,6CAAR,CAJsE,CAKxFO,cAAgBP,OAAA,CAAQ,2CAAR,CALwE,CAMxFQ,SAAWR,OAAA,CAAQ,qCAAR,CAN6E,CASxFS,OAAS,YAwCbR,OAAAC,QAAA;AAhBAQ,QAAa,CAACC,MAAD,CAASC,KAAT,CAAgBC,KAAhB,CAAuB,CAElC,IADAF,MACA,CADSH,QAAA,CAASG,MAAT,CACT,IAAeE,KAAf,EAAkCC,IAAAA,EAAlC,GAAwBF,KAAxB,EACE,MAAOD,OAAAI,QAAA,CAAeN,MAAf,CAAuB,EAAvB,CAET,IAAI,CAACE,MAAL,EAAe,EAAEC,KAAF,CAAUT,YAAA,CAAaS,KAAb,CAAV,CAAf,CACE,MAAOD,OAELK,OAAAA,CAAaT,aAAA,CAAcI,MAAd,CACbM,MAAAA,CAAaV,aAAA,CAAcK,KAAd,CACbM,MAAAA,CAAQZ,eAAA,CAAgBU,MAAhB,CAA4BC,KAA5B,CACRE,MAAAA,CAAMd,aAAA,CAAcW,MAAd,CAA0BC,KAA1B,CAANE,CAA8C,CAElD,OAAOf,UAAA,CAAUY,MAAV,CAAsBE,KAAtB,CAA6BC,KAA7B,CAAAC,KAAA,CAAuC,EAAvC,CAb2B,CAjCwD;",
"sources":["node_modules/lodash/trim.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$lodash$trim\"] = function(global,require,module,exports) {\nvar baseToString = require('./_baseToString'),\n    castSlice = require('./_castSlice'),\n    charsEndIndex = require('./_charsEndIndex'),\n    charsStartIndex = require('./_charsStartIndex'),\n    stringToArray = require('./_stringToArray'),\n    toString = require('./toString');\n\n/** Used to match leading and trailing whitespace. */\nvar reTrim = /^\\s+|\\s+$/g;\n\n/**\n * Removes leading and trailing whitespace or specified characters from `string`.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category String\n * @param {string} [string=''] The string to trim.\n * @param {string} [chars=whitespace] The characters to trim.\n * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n * @returns {string} Returns the trimmed string.\n * @example\n *\n * _.trim('  abc  ');\n * // => 'abc'\n *\n * _.trim('-_-abc-_-', '_-');\n * // => 'abc'\n *\n * _.map(['  foo  ', '  bar  '], _.trim);\n * // => ['foo', 'bar']\n */\nfunction trim(string, chars, guard) {\n  string = toString(string);\n  if (string && (guard || chars === undefined)) {\n    return string.replace(reTrim, '');\n  }\n  if (!string || !(chars = baseToString(chars))) {\n    return string;\n  }\n  var strSymbols = stringToArray(string),\n      chrSymbols = stringToArray(chars),\n      start = charsStartIndex(strSymbols, chrSymbols),\n      end = charsEndIndex(strSymbols, chrSymbols) + 1;\n\n  return castSlice(strSymbols, start, end).join('');\n}\n\nmodule.exports = trim;\n\n};"],
"names":["shadow$provide","global","require","module","exports","baseToString","castSlice","charsEndIndex","charsStartIndex","stringToArray","toString","reTrim","trim","string","chars","guard","undefined","replace","strSymbols","chrSymbols","start","end","join"]
}
