{
"version":3,
"file":"module$node_modules$xhr_request$index.js",
"lineCount":3,
"mappings":"AAAAA,cAAA,sCAAA,CAA0D,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAClG,IAAIC,YAAcH,OAAA,CAAQ,wCAAR,CAAlB,CACII,SAAWJ,OAAA,CAAQ,yCAAR,CADf,CAEIK,OAASL,OAAA,CAAQ,yCAAR,CAFb,CAGIM,aAAeN,OAAA,CAAQ,mDAAR,CAHnB,CAMIO,QAAUP,OAAA,CAAQ,qDAAR,CANd,CASIQ,KAAOA,QAAS,EAAG,EAEvBP,OAAAC,QAAA,CACAO,QAAoB,CAACC,GAAD,CAAMC,GAAN,CAAWC,EAAX,CAAe,CACjC,GAAI,CAACF,GAAL,EAA2B,QAA3B,GAAY,MAAOA,IAAnB,CACE,KAAM,KAAIG,SAAJ,CAAc,oBAAd,CAAN;AAEiB,UAAnB,GAAI,MAAOF,IAAX,GACEC,EACA,CADKD,GACL,CAAAA,GAAA,CAAM,EAFR,CAIA,IAAIC,EAAJ,EAAwB,UAAxB,GAAU,MAAOA,GAAjB,CACE,KAAM,KAAIC,SAAJ,CAAc,2CAAd,CAAN,CAGFD,EAAA,CAAKA,EAAL,EAAWJ,IACXG,IAAA,CAAMA,GAAN,EAAa,EAGbA,IAAA,CAAMN,MAAA,CAAO,CAAES,aADOH,GAAAI,KAAAC,CAAW,MAAXA,CAAoB,MAC7B,CAAP,CAA0CL,GAA1C,CAEN,KAAIM,QAAUN,GAAAM,QAAVA,EAAyB,EAA7B,CACIC,OAASC,CAACR,GAAAO,OAADC,EAAe,KAAfA,aAAA,EADb,CAEIC,MAAQT,GAAAS,MACRA,MAAJ,GACuB,QAGrB,GAHI,MAAOA,MAGX,GAFEA,KAEF,CAFUjB,WAAAkB,UAAA,CAAsBD,KAAtB,CAEV,EAAAV,GAAA,CAAMN,QAAA,CAASM,GAAT,CAAcU,KAAd,CAJR,CAQyB,OAAzB,GAAIT,GAAAG,aAAJ,EACER,YAAA,CAAaW,OAAb,CAAsB,QAAtB,CAlCeK,kBAkCf,CAIEX,IAAAI,KAAJ,EAA2B,KAA3B,GAAgBG,MAAhB,EAA+C,MAA/C;AAAoCA,MAApC,GACEZ,YAAA,CAAaW,OAAb,CAAsB,cAAtB,CAvCeK,kBAuCf,CACA,CAAAX,GAAAY,KAAA,CAAWC,IAAAH,UAAA,CAAeV,GAAAY,KAAf,CAFb,CAKAZ,IAAAO,OAAA,CAAaA,MACbP,IAAAD,IAAA,CAAUA,GACVC,IAAAM,QAAA,CAAcA,OACd,QAAON,GAAAS,MACP,QAAOT,GAAAI,KAEP,OAAOR,QAAA,CAAQI,GAAR,CAAaC,EAAb,CA7C0B,CAb+D;",
"sources":["node_modules/xhr-request/index.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$xhr_request$index\"] = function(global,require,module,exports) {\nvar queryString = require('query-string')\nvar setQuery = require('url-set-query')\nvar assign = require('object-assign')\nvar ensureHeader = require('./lib/ensure-header.js')\n\n// this is replaced in the browser\nvar request = require('./lib/request.js')\n\nvar mimeTypeJson = 'application/json'\nvar noop = function () {}\n\nmodule.exports = xhrRequest\nfunction xhrRequest (url, opt, cb) {\n  if (!url || typeof url !== 'string') {\n    throw new TypeError('must specify a URL')\n  }\n  if (typeof opt === 'function') {\n    cb = opt\n    opt = {}\n  }\n  if (cb && typeof cb !== 'function') {\n    throw new TypeError('expected cb to be undefined or a function')\n  }\n\n  cb = cb || noop\n  opt = opt || {}\n\n  var defaultResponse = opt.json ? 'json' : 'text'\n  opt = assign({ responseType: defaultResponse }, opt)\n\n  var headers = opt.headers || {}\n  var method = (opt.method || 'GET').toUpperCase()\n  var query = opt.query\n  if (query) {\n    if (typeof query !== 'string') {\n      query = queryString.stringify(query)\n    }\n    url = setQuery(url, query)\n  }\n\n  // allow json response\n  if (opt.responseType === 'json') {\n    ensureHeader(headers, 'Accept', mimeTypeJson)\n  }\n\n  // if body content is json\n  if (opt.json && method !== 'GET' && method !== 'HEAD') {\n    ensureHeader(headers, 'Content-Type', mimeTypeJson)\n    opt.body = JSON.stringify(opt.body)\n  }\n\n  opt.method = method\n  opt.url = url\n  opt.headers = headers\n  delete opt.query\n  delete opt.json\n\n  return request(opt, cb)\n}\n\n};"],
"names":["shadow$provide","global","require","module","exports","queryString","setQuery","assign","ensureHeader","request","noop","xhrRequest","url","opt","cb","TypeError","responseType","json","defaultResponse","headers","method","toUpperCase","query","stringify","mimeTypeJson","body","JSON"]
}
