{
"version":3,
"file":"module$node_modules$$stardust_ui$react_component_event_listener$dist$commonjs$useEventListener.js",
"lineCount":3,
"mappings":"AAAAA,cAAA,+FAAA,CAAmH,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAGvJC,MAAAA,CAA0BH,OAAA,CAAQ,mEAAR,CAE9BI,OAAAC,eAAA,CAAsBH,OAAtB,CAA+B,YAA/B,CAA6C,CAC3CI,MAAO,CAAA,CADoC,CAA7C,CAGAJ,QAAAK,QAAA,CAAkB,IAAK,EAEvB,KAAIC,MAAQL,MAAA,CAAwBH,OAAA,CAAQ,iCAAR,CAAxB,CAoCZE,QAAAK,QAAA,CA9BuBE,QAAyB,CAACC,OAAD,CAAU,CAAA,IACpDC,QAAUD,OAAAC,QAD0C,CAEpDC,SAAWF,OAAAE,SAFyC,CAGpDC,KAAOH,OAAAG,KAH6C,CAIpDC,UAAYJ,OAAAI,UAJwC;AAKpDC,eAAiBP,KAAAQ,OAAA,CAAaJ,QAAb,CACrBG,eAAAE,QAAA,CAAyBL,QACzB,KAAIM,aAAeV,KAAAW,YAAA,CAAkB,QAAS,CAACC,KAAD,CAAQ,CACpD,MAAOL,eAAAE,QAAA,CAAuBG,KAAvB,CAD6C,CAAnC,CAEhB,EAFgB,CAGnBZ,MAAAa,UAAA,CAAgB,QAAS,EAAG,CAC1B,GAAsBP,SAAtB,EAAsBA,SAdFG,QAcpB,EAAsBH,SAdqBG,QAAA,iBAc3C,CAEEH,SAAAG,QAAAK,iBAAA,CAAmCT,IAAnC,CAAyCK,YAAzC,CAAuDP,OAAvD,CAFF,KAIE,MAAUY,MAAJ,CAAU,+HAAV,CAAN,CAGF,MAAO,SAAS,EAAG,CACjB,GAAsBT,SAAtB,EAAsBA,SAtBJG,QAsBlB;AAAsBH,SAtBmBG,QAAA,oBAsBzC,CAEEH,SAAAG,QAAAO,oBAAA,CAAsCX,IAAtC,CAA4CK,YAA5C,CAA0DP,OAA1D,CAFF,KAIE,MAAUY,MAAJ,CAAU,kIAAV,CAAN,CALe,CARO,CAA5B,CAgBG,CAACZ,OAAD,CAAUG,SAAV,CAAqBD,IAArB,CAhBH,CAVwD,CAhBiG;",
"sources":["node_modules/@stardust-ui/react-component-event-listener/dist/commonjs/useEventListener.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$$stardust_ui$react_component_event_listener$dist$commonjs$useEventListener\"] = function(global,require,module,exports) {\n\"use strict\";\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar isActionSupported = function isActionSupported(targetRef, method) {\n  return targetRef && !!targetRef.current && !!targetRef.current[method];\n};\n\nvar useEventListener = function useEventListener(options) {\n  var capture = options.capture,\n      listener = options.listener,\n      type = options.type,\n      targetRef = options.targetRef;\n  var latestListener = React.useRef(listener);\n  latestListener.current = listener;\n  var eventHandler = React.useCallback(function (event) {\n    return latestListener.current(event);\n  }, []);\n  React.useEffect(function () {\n    if (isActionSupported(targetRef, 'addEventListener')) {\n      ;\n      targetRef.current.addEventListener(type, eventHandler, capture);\n    } else if (process.env.NODE_ENV !== 'production') {\n      throw new Error('@stardust-ui/react-component-event-listener: Passed `targetRef` is not valid or does not support `addEventListener()` method.');\n    }\n\n    return function () {\n      if (isActionSupported(targetRef, 'removeEventListener')) {\n        ;\n        targetRef.current.removeEventListener(type, eventHandler, capture);\n      } else if (process.env.NODE_ENV !== 'production') {\n        throw new Error('@stardust-ui/react-component-event-listener: Passed `targetRef` is not valid or does not support `removeEventListener()` method.');\n      }\n    };\n  }, [capture, targetRef, type]);\n};\n\nvar _default = useEventListener;\nexports.default = _default;\n};"],
"names":["shadow$provide","global","require","module","exports","_interopRequireWildcard","Object","defineProperty","value","default","React","useEventListener","options","capture","listener","type","targetRef","latestListener","useRef","current","eventHandler","useCallback","event","useEffect","addEventListener","Error","removeEventListener"]
}
