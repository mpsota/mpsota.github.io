{
"version":3,
"file":"module$node_modules$ethereumjs_tx$dist$transaction.js",
"lineCount":12,
"mappings":"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",
"sources":["node_modules/ethereumjs-tx/dist/transaction.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$ethereumjs_tx$dist$transaction\"] = function(global,require,module,exports) {\n\"use strict\";\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar ethereumjs_util_1 = require(\"ethereumjs-util\");\nvar ethereumjs_common_1 = require(\"ethereumjs-common\");\nvar buffer_1 = require(\"buffer\");\n// secp256k1n/2\nvar N_DIV_2 = new ethereumjs_util_1.BN('7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0', 16);\n/**\n * An Ethereum transaction.\n */\nvar Transaction = /** @class */ (function () {\n    /**\n     * Creates a new transaction from an object with its fields' values.\n     *\n     * @param data - A transaction can be initialized with its rlp representation, an array containing\n     * the value of its fields in order, or an object containing them by name.\n     *\n     * @param opts - The transaction's options, used to indicate the chain and hardfork the\n     * transactions belongs to.\n     *\n     * @note Transaction objects implement EIP155 by default. To disable it, use the constructor's\n     * second parameter to set a chain and hardfork before EIP155 activation (i.e. before Spurious\n     * Dragon.)\n     *\n     * @example\n     * ```js\n     * const txData = {\n     *   nonce: '0x00',\n     *   gasPrice: '0x09184e72a000',\n     *   gasLimit: '0x2710',\n     *   to: '0x0000000000000000000000000000000000000000',\n     *   value: '0x00',\n     *   data: '0x7f7465737432000000000000000000000000000000000000000000000000000000600057',\n     *   v: '0x1c',\n     *   r: '0x5e1d3a76fbf824220eafc8c79ad578ad2b67d01b0c2425eb1f1347e8f50882ab',\n     *   s: '0x5bd428537f05f9830e93792f90ea6a3e2d1ee84952dd96edbae9f658f831ab13'\n     * };\n     * const tx = new Transaction(txData);\n     * ```\n     */\n    function Transaction(data, opts) {\n        if (data === void 0) { data = {}; }\n        if (opts === void 0) { opts = {}; }\n        // instantiate Common class instance based on passed options\n        if (opts.common) {\n            if (opts.chain || opts.hardfork) {\n                throw new Error('Instantiation with both opts.common, and opts.chain and opts.hardfork parameter not allowed!');\n            }\n            this._common = opts.common;\n        }\n        else {\n            var chain = opts.chain ? opts.chain : 'mainnet';\n            var hardfork = opts.hardfork ? opts.hardfork : 'petersburg';\n            this._common = new ethereumjs_common_1.default(chain, hardfork);\n        }\n        // Define Properties\n        var fields = [\n            {\n                name: 'nonce',\n                length: 32,\n                allowLess: true,\n                default: new buffer_1.Buffer([]),\n            },\n            {\n                name: 'gasPrice',\n                length: 32,\n                allowLess: true,\n                default: new buffer_1.Buffer([]),\n            },\n            {\n                name: 'gasLimit',\n                alias: 'gas',\n                length: 32,\n                allowLess: true,\n                default: new buffer_1.Buffer([]),\n            },\n            {\n                name: 'to',\n                allowZero: true,\n                length: 20,\n                default: new buffer_1.Buffer([]),\n            },\n            {\n                name: 'value',\n                length: 32,\n                allowLess: true,\n                default: new buffer_1.Buffer([]),\n            },\n            {\n                name: 'data',\n                alias: 'input',\n                allowZero: true,\n                default: new buffer_1.Buffer([]),\n            },\n            {\n                name: 'v',\n                allowZero: true,\n                default: new buffer_1.Buffer([]),\n            },\n            {\n                name: 'r',\n                length: 32,\n                allowZero: true,\n                allowLess: true,\n                default: new buffer_1.Buffer([]),\n            },\n            {\n                name: 's',\n                length: 32,\n                allowZero: true,\n                allowLess: true,\n                default: new buffer_1.Buffer([]),\n            },\n        ];\n        // attached serialize\n        ethereumjs_util_1.defineProperties(this, fields, data);\n        /**\n         * @property {Buffer} from (read only) sender address of this transaction, mathematically derived from other parameters.\n         * @name from\n         * @memberof Transaction\n         */\n        Object.defineProperty(this, 'from', {\n            enumerable: true,\n            configurable: true,\n            get: this.getSenderAddress.bind(this),\n        });\n        this._validateV(this.v);\n        this._overrideVSetterWithValidation();\n    }\n    /**\n     * If the tx's `to` is to the creation address\n     */\n    Transaction.prototype.toCreationAddress = function () {\n        return this.to.toString('hex') === '';\n    };\n    /**\n     * Computes a sha3-256 hash of the serialized tx\n     * @param includeSignature - Whether or not to include the signature\n     */\n    Transaction.prototype.hash = function (includeSignature) {\n        if (includeSignature === void 0) { includeSignature = true; }\n        var items;\n        if (includeSignature) {\n            items = this.raw;\n        }\n        else {\n            if (this._implementsEIP155()) {\n                items = this.raw.slice(0, 6).concat([\n                    ethereumjs_util_1.toBuffer(this.getChainId()),\n                    // TODO: stripping zeros should probably be a responsibility of the rlp module\n                    ethereumjs_util_1.stripZeros(ethereumjs_util_1.toBuffer(0)),\n                    ethereumjs_util_1.stripZeros(ethereumjs_util_1.toBuffer(0)),\n                ]);\n            }\n            else {\n                items = this.raw.slice(0, 6);\n            }\n        }\n        // create hash\n        return ethereumjs_util_1.rlphash(items);\n    };\n    /**\n     * returns chain ID\n     */\n    Transaction.prototype.getChainId = function () {\n        return this._common.chainId();\n    };\n    /**\n     * returns the sender's address\n     */\n    Transaction.prototype.getSenderAddress = function () {\n        if (this._from) {\n            return this._from;\n        }\n        var pubkey = this.getSenderPublicKey();\n        this._from = ethereumjs_util_1.publicToAddress(pubkey);\n        return this._from;\n    };\n    /**\n     * returns the public key of the sender\n     */\n    Transaction.prototype.getSenderPublicKey = function () {\n        if (!this.verifySignature()) {\n            throw new Error('Invalid Signature');\n        }\n        // If the signature was verified successfully the _senderPubKey field is defined\n        return this._senderPubKey;\n    };\n    /**\n     * Determines if the signature is valid\n     */\n    Transaction.prototype.verifySignature = function () {\n        var msgHash = this.hash(false);\n        // All transaction signatures whose s-value is greater than secp256k1n/2 are considered invalid.\n        if (this._common.gteHardfork('homestead') && new ethereumjs_util_1.BN(this.s).cmp(N_DIV_2) === 1) {\n            return false;\n        }\n        try {\n            var v = ethereumjs_util_1.bufferToInt(this.v);\n            var useChainIdWhileRecoveringPubKey = v >= this.getChainId() * 2 + 35 && this._common.gteHardfork('spuriousDragon');\n            this._senderPubKey = ethereumjs_util_1.ecrecover(msgHash, v, this.r, this.s, useChainIdWhileRecoveringPubKey ? this.getChainId() : undefined);\n        }\n        catch (e) {\n            return false;\n        }\n        return !!this._senderPubKey;\n    };\n    /**\n     * sign a transaction with a given private key\n     * @param privateKey - Must be 32 bytes in length\n     */\n    Transaction.prototype.sign = function (privateKey) {\n        // We clear any previous signature before signing it. Otherwise, _implementsEIP155's can give\n        // different results if this tx was already signed.\n        this.v = new buffer_1.Buffer([]);\n        this.s = new buffer_1.Buffer([]);\n        this.r = new buffer_1.Buffer([]);\n        var msgHash = this.hash(false);\n        var sig = ethereumjs_util_1.ecsign(msgHash, privateKey);\n        if (this._implementsEIP155()) {\n            sig.v += this.getChainId() * 2 + 8;\n        }\n        Object.assign(this, sig);\n    };\n    /**\n     * The amount of gas paid for the data in this tx\n     */\n    Transaction.prototype.getDataFee = function () {\n        var data = this.raw[5];\n        var cost = new ethereumjs_util_1.BN(0);\n        for (var i = 0; i < data.length; i++) {\n            data[i] === 0\n                ? cost.iaddn(this._common.param('gasPrices', 'txDataZero'))\n                : cost.iaddn(this._common.param('gasPrices', 'txDataNonZero'));\n        }\n        return cost;\n    };\n    /**\n     * the minimum amount of gas the tx must have (DataFee + TxFee + Creation Fee)\n     */\n    Transaction.prototype.getBaseFee = function () {\n        var fee = this.getDataFee().iaddn(this._common.param('gasPrices', 'tx'));\n        if (this._common.gteHardfork('homestead') && this.toCreationAddress()) {\n            fee.iaddn(this._common.param('gasPrices', 'txCreation'));\n        }\n        return fee;\n    };\n    /**\n     * the up front amount that an account must have for this transaction to be valid\n     */\n    Transaction.prototype.getUpfrontCost = function () {\n        return new ethereumjs_util_1.BN(this.gasLimit).imul(new ethereumjs_util_1.BN(this.gasPrice)).iadd(new ethereumjs_util_1.BN(this.value));\n    };\n    Transaction.prototype.validate = function (stringError) {\n        if (stringError === void 0) { stringError = false; }\n        var errors = [];\n        if (!this.verifySignature()) {\n            errors.push('Invalid Signature');\n        }\n        if (this.getBaseFee().cmp(new ethereumjs_util_1.BN(this.gasLimit)) > 0) {\n            errors.push([\"gas limit is too low. Need at least \" + this.getBaseFee()]);\n        }\n        if (stringError === false) {\n            return errors.length === 0;\n        }\n        else {\n            return errors.join(' ');\n        }\n    };\n    /**\n     * Returns the rlp encoding of the transaction\n     */\n    Transaction.prototype.serialize = function () {\n        // Note: This never gets executed, defineProperties overwrites it.\n        return ethereumjs_util_1.rlp.encode(this.raw);\n    };\n    /**\n     * Returns the transaction in JSON format\n     * @see {@link https://github.com/ethereumjs/ethereumjs-util/blob/master/docs/index.md#defineproperties|ethereumjs-util}\n     */\n    Transaction.prototype.toJSON = function (labels) {\n        if (labels === void 0) { labels = false; }\n        // Note: This never gets executed, defineProperties overwrites it.\n        return {};\n    };\n    Transaction.prototype._validateV = function (v) {\n        if (v === undefined || v.length === 0) {\n            return;\n        }\n        if (!this._common.gteHardfork('spuriousDragon')) {\n            return;\n        }\n        var vInt = ethereumjs_util_1.bufferToInt(v);\n        if (vInt === 27 || vInt === 28) {\n            return;\n        }\n        var isValidEIP155V = vInt === this.getChainId() * 2 + 35 || vInt === this.getChainId() * 2 + 36;\n        if (!isValidEIP155V) {\n            throw new Error(\"Incompatible EIP155-based V \" + vInt + \" and chain id \" + this.getChainId() + \". See the second parameter of the Transaction constructor to set the chain id.\");\n        }\n    };\n    Transaction.prototype._isSigned = function () {\n        return this.v.length > 0 && this.r.length > 0 && this.s.length > 0;\n    };\n    Transaction.prototype._overrideVSetterWithValidation = function () {\n        var _this = this;\n        var vDescriptor = Object.getOwnPropertyDescriptor(this, 'v');\n        Object.defineProperty(this, 'v', __assign({}, vDescriptor, { set: function (v) {\n                if (v !== undefined) {\n                    _this._validateV(ethereumjs_util_1.toBuffer(v));\n                }\n                vDescriptor.set(v);\n            } }));\n    };\n    Transaction.prototype._implementsEIP155 = function () {\n        var onEIP155BlockOrLater = this._common.gteHardfork('spuriousDragon');\n        if (!this._isSigned()) {\n            // We sign with EIP155 all unsigned transactions after spuriousDragon\n            return onEIP155BlockOrLater;\n        }\n        // EIP155 spec:\n        // If block.number >= 2,675,000 and v = CHAIN_ID * 2 + 35 or v = CHAIN_ID * 2 + 36, then when computing\n        // the hash of a transaction for purposes of signing or recovering, instead of hashing only the first six\n        // elements (i.e. nonce, gasprice, startgas, to, value, data), hash nine elements, with v replaced by\n        // CHAIN_ID, r = 0 and s = 0.\n        var v = ethereumjs_util_1.bufferToInt(this.v);\n        var vAndChainIdMeetEIP155Conditions = v === this.getChainId() * 2 + 35 || v === this.getChainId() * 2 + 36;\n        return vAndChainIdMeetEIP155Conditions && onEIP155BlockOrLater;\n    };\n    return Transaction;\n}());\nexports.default = Transaction;\n//# sourceMappingURL=transaction.js.map\n};"],
"names":["shadow$provide","global","require","module","exports","__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","defineProperty","value","ethereumjs_util_1","ethereumjs_common_1","buffer_1","N_DIV_2","BN","Transaction","data","opts","common","chain","hardfork","Error","_common","default","fields","name","allowLess","Buffer","alias","allowZero","defineProperties","enumerable","configurable","get","getSenderAddress","bind","_validateV","v","_overrideVSetterWithValidation","toCreationAddress","Transaction.prototype.toCreationAddress","to","toString","hash","Transaction.prototype.hash","includeSignature","items","raw","_implementsEIP155","slice","concat","toBuffer","getChainId","stripZeros","rlphash","Transaction.prototype.getChainId","chainId","Transaction.prototype.getSenderAddress","_from","pubkey","getSenderPublicKey","publicToAddress","Transaction.prototype.getSenderPublicKey","verifySignature","_senderPubKey","Transaction.prototype.verifySignature","msgHash","gteHardfork","cmp","bufferToInt","useChainIdWhileRecoveringPubKey","ecrecover","r","undefined","e","sign","Transaction.prototype.sign","privateKey","sig","ecsign","getDataFee","Transaction.prototype.getDataFee","cost","iaddn","param","getBaseFee","Transaction.prototype.getBaseFee","fee","getUpfrontCost","Transaction.prototype.getUpfrontCost","imul","gasLimit","gasPrice","iadd","validate","Transaction.prototype.validate","stringError","errors","push","join","serialize","Transaction.prototype.serialize","rlp","encode","toJSON","Transaction.prototype.toJSON","labels","Transaction.prototype._validateV","vInt","isValidEIP155V","_isSigned","Transaction.prototype._isSigned","Transaction.prototype._overrideVSetterWithValidation","_this","vDescriptor","getOwnPropertyDescriptor","set","Transaction.prototype._implementsEIP155","onEIP155BlockOrLater"]
}
