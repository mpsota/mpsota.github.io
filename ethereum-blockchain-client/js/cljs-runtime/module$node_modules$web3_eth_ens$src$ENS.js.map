{
"version":3,
"file":"module$node_modules$web3_eth_ens$src$ENS.js",
"lineCount":5,
"mappings":"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",
"sources":["node_modules/web3-eth-ens/src/ENS.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$web3_eth_ens$src$ENS\"] = function(global,require,module,exports) {\n/*\n    This file is part of web3.js.\n    web3.js is free software: you can redistribute it and/or modify\n    it under the terms of the GNU Lesser General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n    web3.js is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU Lesser General Public License for more details.\n    You should have received a copy of the GNU Lesser General Public License\n    along with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n/**\n * @file ENS.js\n *\n * @author Samuel Furter <samuel@ethereum.org>\n * @date 2018\n */\n\n\"use strict\";\n\nvar config = require('./config');\nvar Registry = require('./contracts/Registry');\nvar ResolverMethodHandler = require('./lib/ResolverMethodHandler');\n\n/**\n * Constructs a new instance of ENS\n *\n * @method ENS\n * @param {Object} eth\n * @constructor\n */\nfunction ENS(eth) {\n    this.eth = eth;\n}\n\nObject.defineProperty(ENS.prototype, 'registry', {\n    get: function () {\n        return new Registry(this);\n    },\n    enumerable: true\n});\n\nObject.defineProperty(ENS.prototype, 'resolverMethodHandler', {\n    get: function () {\n        return new ResolverMethodHandler(this.registry);\n    },\n    enumerable: true\n});\n\n/**\n * @param {string} name\n * @returns {Promise<Contract>}\n */\nENS.prototype.resolver = function (name) {\n    return this.registry.resolver(name);\n};\n\n/**\n * Returns the address record associated with a name.\n *\n * @method getAddress\n * @param {string} name\n * @param {function} callback\n * @return {eventifiedPromise}\n */\nENS.prototype.getAddress = function (name, callback) {\n    return this.resolverMethodHandler.method(name, 'addr', []).call(callback);\n};\n\n/**\n * Sets a new address\n *\n * @method setAddress\n * @param {string} name\n * @param {string} address\n * @param {Object} sendOptions\n * @param {function} callback\n * @returns {eventifiedPromise}\n */\nENS.prototype.setAddress = function (name, address, sendOptions, callback) {\n    return this.resolverMethodHandler.method(name, 'setAddr', [address]).send(sendOptions, callback);\n};\n\n/**\n * Returns the public key\n *\n * @method getPubkey\n * @param {string} name\n * @param {function} callback\n * @returns {eventifiedPromise}\n */\nENS.prototype.getPubkey = function (name, callback) {\n    return this.resolverMethodHandler.method(name, 'pubkey', [], callback).call(callback);\n};\n\n/**\n * Set the new public key\n *\n * @method setPubkey\n * @param {string} name\n * @param {string} x\n * @param {string} y\n * @param {Object} sendOptions\n * @param {function} callback\n * @returns {eventifiedPromise}\n */\nENS.prototype.setPubkey = function (name, x, y, sendOptions, callback) {\n    return this.resolverMethodHandler.method(name, 'setPubkey', [x, y]).send(sendOptions, callback);\n};\n\n/**\n * Returns the content\n *\n * @method getContent\n * @param {string} name\n * @param {function} callback\n * @returns {eventifiedPromise}\n */\nENS.prototype.getContent = function (name, callback) {\n    return this.resolverMethodHandler.method(name, 'content', []).call(callback);\n};\n\n/**\n * Set the content\n *\n * @method setContent\n * @param {string} name\n * @param {string} hash\n * @param {function} callback\n * @param {Object} sendOptions\n * @returns {eventifiedPromise}\n */\nENS.prototype.setContent = function (name, hash, sendOptions, callback) {\n    return this.resolverMethodHandler.method(name, 'setContent', [hash]).send(sendOptions, callback);\n};\n\n/**\n * Get the multihash\n *\n * @method getMultihash\n * @param {string} name\n * @param {function} callback\n * @returns {eventifiedPromise}\n */\nENS.prototype.getMultihash = function (name, callback) {\n    return this.resolverMethodHandler.method(name, 'multihash', []).call(callback);\n};\n\n/**\n * Set the multihash\n *\n * @method setMultihash\n * @param {string} name\n * @param {string} hash\n * @param {Object} sendOptions\n * @param {function} callback\n * @returns {eventifiedPromise}\n */\nENS.prototype.setMultihash = function (name, hash, sendOptions, callback) {\n    return this.resolverMethodHandler.method(name, 'multihash', [hash]).send(sendOptions, callback);\n};\n\n/**\n * Checks if the current used network is synced and looks for ENS support there.\n * Throws an error if not.\n *\n * @returns {Promise<Block>}\n */\nENS.prototype.checkNetwork = function () {\n    var self = this;\n    return self.eth.getBlock('latest').then(function (block) {\n        var headAge = new Date() / 1000 - block.timestamp;\n        if (headAge > 3600) {\n            throw new Error(\"Network not synced; last block was \" + headAge + \" seconds ago\");\n        }\n        return self.eth.net.getNetworkType();\n    }).then(function (networkType) {\n        var addr = config.addresses[networkType];\n        if (typeof addr === 'undefined') {\n            throw new Error(\"ENS is not supported on network \" + networkType);\n        }\n\n        return addr;\n    });\n};\n\nmodule.exports = ENS;\n\n};"],
"names":["shadow$provide","global","require","module","exports","ENS","eth","config","Registry","ResolverMethodHandler","Object","defineProperty","prototype","get","enumerable","registry","resolver","ENS.prototype.resolver","name","getAddress","ENS.prototype.getAddress","callback","resolverMethodHandler","method","call","setAddress","ENS.prototype.setAddress","address","sendOptions","send","getPubkey","ENS.prototype.getPubkey","setPubkey","ENS.prototype.setPubkey","x","y","getContent","ENS.prototype.getContent","setContent","ENS.prototype.setContent","hash","getMultihash","ENS.prototype.getMultihash","setMultihash","ENS.prototype.setMultihash","checkNetwork","ENS.prototype.checkNetwork","self","getBlock","then","block","headAge","Date","timestamp","Error","net","getNetworkType","networkType","addr","addresses"]
}
