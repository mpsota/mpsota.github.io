{
"version":3,
"file":"module$node_modules$lodash$ary.js",
"lineCount":1,
"mappings":"AAAAA,cAAA,+BAAA,CAAmD,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAC3F,IAAIC,WAAaH,OAAA,CAAQ,wCAAR,CA4BjBC,OAAAC,QAAA,CANAE,QAAY,CAACC,IAAD,CAAOC,CAAP,CAAUC,KAAV,CAAiB,CAC3BD,CAAA,CAAIC,KAAA,CAAQC,IAAAA,EAAR,CAAoBF,CACxBA,EAAA,CAAKD,IAAD,EAAc,IAAd,EAASC,CAAT,CAAsBD,IAAAI,OAAtB,CAAoCH,CACxC,OAAOH,WAAA,CAAWE,IAAX,CAtBWK,GAsBX,CAAgCF,IAAAA,EAAhC,CAA2CA,IAAAA,EAA3C,CAAsDA,IAAAA,EAAtD,CAAiEA,IAAAA,EAAjE,CAA4EF,CAA5E,CAHoB,CAvB8D;",
"sources":["node_modules/lodash/ary.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$lodash$ary\"] = function(global,require,module,exports) {\nvar createWrap = require('./_createWrap');\n\n/** Used to compose bitmasks for function metadata. */\nvar WRAP_ARY_FLAG = 128;\n\n/**\n * Creates a function that invokes `func`, with up to `n` arguments,\n * ignoring any additional arguments.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Function\n * @param {Function} func The function to cap arguments for.\n * @param {number} [n=func.length] The arity cap.\n * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n * @returns {Function} Returns the new capped function.\n * @example\n *\n * _.map(['6', '8', '10'], _.ary(parseInt, 1));\n * // => [6, 8, 10]\n */\nfunction ary(func, n, guard) {\n  n = guard ? undefined : n;\n  n = (func && n == null) ? func.length : n;\n  return createWrap(func, WRAP_ARY_FLAG, undefined, undefined, undefined, undefined, n);\n}\n\nmodule.exports = ary;\n\n};"],
"names":["shadow$provide","global","require","module","exports","createWrap","ary","func","n","guard","undefined","length","WRAP_ARY_FLAG"]
}
