shadow$provide.module$node_modules$web3_eth$src$index=function(global,require,module,exports){var _=require("module$node_modules$underscore$underscore"),core=require("module$node_modules$web3_core$src$index");global=require("module$node_modules$web3_core_helpers$src$index");var Subscriptions=require("module$node_modules$web3_core_subscriptions$src$index").subscriptions,Method=require("module$node_modules$web3_core_method$src$index"),utils=require("module$node_modules$web3_utils$src$index"),Net=require("module$node_modules$web3_net$src$index"),
ENS=require("module$node_modules$web3_eth_ens$src$index"),Personal=require("module$node_modules$web3_eth_personal$src$index"),BaseContract=require("module$node_modules$web3_eth_contract$src$index"),Iban=require("module$node_modules$web3_eth_iban$src$index"),Accounts=require("module$node_modules$web3_eth_accounts$src$index"),abi=require("module$node_modules$web3_eth_abi$src$index"),getNetworkType=require("module$node_modules$web3_eth$src$getNetworkType"),formatter=global.formatters,blockCall=function(args){return _.isString(args[0])&&
0===args[0].indexOf("0x")?"eth_getBlockByHash":"eth_getBlockByNumber"},transactionFromBlockCall=function(args){return _.isString(args[0])&&0===args[0].indexOf("0x")?"eth_getTransactionByBlockHashAndIndex":"eth_getTransactionByBlockNumberAndIndex"},uncleCall=function(args){return _.isString(args[0])&&0===args[0].indexOf("0x")?"eth_getUncleByBlockHashAndIndex":"eth_getUncleByBlockNumberAndIndex"},getBlockTransactionCountCall=function(args){return _.isString(args[0])&&0===args[0].indexOf("0x")?"eth_getBlockTransactionCountByHash":
"eth_getBlockTransactionCountByNumber"},uncleCountCall=function(args){return _.isString(args[0])&&0===args[0].indexOf("0x")?"eth_getUncleCountByBlockHash":"eth_getUncleCountByBlockNumber"};require=function(){var _this$jscomp$0=this;core.packageInit(this,arguments);var setProvider=this.setProvider;this.setProvider=function(){setProvider.apply(_this$jscomp$0,arguments);_this$jscomp$0.net.setProvider.apply(_this$jscomp$0,arguments);_this$jscomp$0.personal.setProvider.apply(_this$jscomp$0,arguments);
_this$jscomp$0.accounts.setProvider.apply(_this$jscomp$0,arguments);_this$jscomp$0.Contract.setProvider(_this$jscomp$0.currentProvider,_this$jscomp$0.accounts)};var handleRevert=!1,defaultAccount=null,defaultBlock="latest",transactionBlockTimeout=50,transactionConfirmationBlocks=24,transactionPollingTimeout=750,defaultChain,defaultHardfork,defaultCommon;Object.defineProperty(this,"handleRevert",{get:function(){return handleRevert},set:function(val){handleRevert=val;_this$jscomp$0.Contract.handleRevert=
handleRevert;methods.forEach(function(method){method.handleRevert=handleRevert})},enumerable:!0});Object.defineProperty(this,"defaultCommon",{get:function(){return defaultCommon},set:function(val){defaultCommon=val;_this$jscomp$0.Contract.defaultCommon=defaultCommon;methods.forEach(function(method){method.defaultCommon=defaultCommon})},enumerable:!0});Object.defineProperty(this,"defaultHardfork",{get:function(){return defaultHardfork},set:function(val){defaultHardfork=val;_this$jscomp$0.Contract.defaultHardfork=
defaultHardfork;methods.forEach(function(method){method.defaultHardfork=defaultHardfork})},enumerable:!0});Object.defineProperty(this,"defaultChain",{get:function(){return defaultChain},set:function(val){defaultChain=val;_this$jscomp$0.Contract.defaultChain=defaultChain;methods.forEach(function(method){method.defaultChain=defaultChain})},enumerable:!0});Object.defineProperty(this,"transactionPollingTimeout",{get:function(){return transactionPollingTimeout},set:function(val){transactionPollingTimeout=
val;_this$jscomp$0.Contract.transactionPollingTimeout=transactionPollingTimeout;methods.forEach(function(method){method.transactionPollingTimeout=transactionPollingTimeout})},enumerable:!0});Object.defineProperty(this,"transactionConfirmationBlocks",{get:function(){return transactionConfirmationBlocks},set:function(val){transactionConfirmationBlocks=val;_this$jscomp$0.Contract.transactionConfirmationBlocks=transactionConfirmationBlocks;methods.forEach(function(method){method.transactionConfirmationBlocks=
transactionConfirmationBlocks})},enumerable:!0});Object.defineProperty(this,"transactionBlockTimeout",{get:function(){return transactionBlockTimeout},set:function(val){transactionBlockTimeout=val;_this$jscomp$0.Contract.transactionBlockTimeout=transactionBlockTimeout;methods.forEach(function(method){method.transactionBlockTimeout=transactionBlockTimeout})},enumerable:!0});Object.defineProperty(this,"defaultAccount",{get:function(){return defaultAccount},set:function(val){val&&(defaultAccount=utils.toChecksumAddress(formatter.inputAddressFormatter(val)));
_this$jscomp$0.Contract.defaultAccount=defaultAccount;_this$jscomp$0.personal.defaultAccount=defaultAccount;methods.forEach(function(method){method.defaultAccount=defaultAccount});return val},enumerable:!0});Object.defineProperty(this,"defaultBlock",{get:function(){return defaultBlock},set:function(val){defaultBlock=val;_this$jscomp$0.Contract.defaultBlock=defaultBlock;_this$jscomp$0.personal.defaultBlock=defaultBlock;methods.forEach(function(method){method.defaultBlock=defaultBlock});return val},
enumerable:!0});this.clearSubscriptions=_this$jscomp$0._requestManager.clearSubscriptions;this.net=new Net(this.currentProvider);this.net.getNetworkType=getNetworkType.bind(this);this.accounts=new Accounts(this.currentProvider);this.personal=new Personal(this.currentProvider);this.personal.defaultAccount=this.defaultAccount;var self=this,Contract=function(){BaseContract.apply(this,arguments);var _this=this,setProvider=self.setProvider;self.setProvider=function(){setProvider.apply(self,arguments);
core.packageInit(_this,[self.currentProvider])}};Contract.setProvider=function(){BaseContract.setProvider.apply(this,arguments)};Contract.prototype=Object.create(BaseContract.prototype);this.Contract=Contract.prototype.constructor=Contract;this.Contract.defaultAccount=this.defaultAccount;this.Contract.defaultBlock=this.defaultBlock;this.Contract.transactionBlockTimeout=this.transactionBlockTimeout;this.Contract.transactionConfirmationBlocks=this.transactionConfirmationBlocks;this.Contract.transactionPollingTimeout=
this.transactionPollingTimeout;this.Contract.handleRevert=this.handleRevert;this.Contract.setProvider(this.currentProvider,this.accounts);this.Iban=Iban;this.abi=abi;this.ens=new ENS(this);var methods=[new Method({name:"getNodeInfo",call:"web3_clientVersion"}),new Method({name:"getProtocolVersion",call:"eth_protocolVersion",params:0}),new Method({name:"getCoinbase",call:"eth_coinbase",params:0}),new Method({name:"isMining",call:"eth_mining",params:0}),new Method({name:"getHashrate",call:"eth_hashrate",
params:0,outputFormatter:utils.hexToNumber}),new Method({name:"isSyncing",call:"eth_syncing",params:0,outputFormatter:formatter.outputSyncingFormatter}),new Method({name:"getGasPrice",call:"eth_gasPrice",params:0,outputFormatter:formatter.outputBigNumberFormatter}),new Method({name:"getAccounts",call:"eth_accounts",params:0,outputFormatter:utils.toChecksumAddress}),new Method({name:"getBlockNumber",call:"eth_blockNumber",params:0,outputFormatter:utils.hexToNumber}),new Method({name:"getBalance",call:"eth_getBalance",
params:2,inputFormatter:[formatter.inputAddressFormatter,formatter.inputDefaultBlockNumberFormatter],outputFormatter:formatter.outputBigNumberFormatter}),new Method({name:"getStorageAt",call:"eth_getStorageAt",params:3,inputFormatter:[formatter.inputAddressFormatter,utils.numberToHex,formatter.inputDefaultBlockNumberFormatter]}),new Method({name:"getCode",call:"eth_getCode",params:2,inputFormatter:[formatter.inputAddressFormatter,formatter.inputDefaultBlockNumberFormatter]}),new Method({name:"getBlock",
call:blockCall,params:2,inputFormatter:[formatter.inputBlockNumberFormatter,function(val){return!!val}],outputFormatter:formatter.outputBlockFormatter}),new Method({name:"getUncle",call:uncleCall,params:2,inputFormatter:[formatter.inputBlockNumberFormatter,utils.numberToHex],outputFormatter:formatter.outputBlockFormatter}),new Method({name:"getBlockTransactionCount",call:getBlockTransactionCountCall,params:1,inputFormatter:[formatter.inputBlockNumberFormatter],outputFormatter:utils.hexToNumber}),
new Method({name:"getBlockUncleCount",call:uncleCountCall,params:1,inputFormatter:[formatter.inputBlockNumberFormatter],outputFormatter:utils.hexToNumber}),new Method({name:"getTransaction",call:"eth_getTransactionByHash",params:1,inputFormatter:[null],outputFormatter:formatter.outputTransactionFormatter}),new Method({name:"getTransactionFromBlock",call:transactionFromBlockCall,params:2,inputFormatter:[formatter.inputBlockNumberFormatter,utils.numberToHex],outputFormatter:formatter.outputTransactionFormatter}),
new Method({name:"getTransactionReceipt",call:"eth_getTransactionReceipt",params:1,inputFormatter:[null],outputFormatter:formatter.outputTransactionReceiptFormatter}),new Method({name:"getTransactionCount",call:"eth_getTransactionCount",params:2,inputFormatter:[formatter.inputAddressFormatter,formatter.inputDefaultBlockNumberFormatter],outputFormatter:utils.hexToNumber}),new Method({name:"sendSignedTransaction",call:"eth_sendRawTransaction",params:1,inputFormatter:[null]}),new Method({name:"signTransaction",
call:"eth_signTransaction",params:1,inputFormatter:[formatter.inputTransactionFormatter]}),new Method({name:"sendTransaction",call:"eth_sendTransaction",params:1,inputFormatter:[formatter.inputTransactionFormatter],abiCoder:abi}),new Method({name:"sign",call:"eth_sign",params:2,inputFormatter:[formatter.inputSignFormatter,formatter.inputAddressFormatter],transformPayload:function(payload){payload.params.reverse();return payload}}),new Method({name:"call",call:"eth_call",params:2,inputFormatter:[formatter.inputCallFormatter,
formatter.inputDefaultBlockNumberFormatter],abiCoder:abi}),new Method({name:"estimateGas",call:"eth_estimateGas",params:1,inputFormatter:[formatter.inputCallFormatter],outputFormatter:utils.hexToNumber}),new Method({name:"submitWork",call:"eth_submitWork",params:3}),new Method({name:"getWork",call:"eth_getWork",params:0}),new Method({name:"getPastLogs",call:"eth_getLogs",params:1,inputFormatter:[formatter.inputLogFormatter],outputFormatter:formatter.outputLogFormatter}),new Method({name:"getChainId",
call:"eth_chainId",params:0,outputFormatter:utils.hexToNumber}),new Method({name:"requestAccounts",call:"eth_requestAccounts",params:0,outputFormatter:utils.toChecksumAddress}),new Method({name:"getProof",call:"eth_getProof",params:3,inputFormatter:[formatter.inputAddressFormatter,formatter.inputStorageKeysFormatter,formatter.inputDefaultBlockNumberFormatter],outputFormatter:formatter.outputProofFormatter}),new Method({name:"getPendingTransactions",call:"eth_pendingTransactions",params:0,outputFormatter:formatter.outputTransactionFormatter}),
new Subscriptions({name:"subscribe",type:"eth",subscriptions:{newBlockHeaders:{subscriptionName:"newHeads",params:0,outputFormatter:formatter.outputBlockFormatter},pendingTransactions:{subscriptionName:"newPendingTransactions",params:0},logs:{params:1,inputFormatter:[formatter.inputLogFormatter],outputFormatter:formatter.outputLogFormatter,subscriptionHandler:function(output){output.removed?this.emit("changed",output):this.emit("data",output);_.isFunction(this.callback)&&this.callback(null,output,
this)}},syncing:{params:0,outputFormatter:formatter.outputSyncingFormatter,subscriptionHandler:function(output){var _this=this;!0!==this._isSyncing?(this._isSyncing=!0,this.emit("changed",_this._isSyncing),_.isFunction(this.callback)&&this.callback(null,_this._isSyncing,this),setTimeout(function(){_this.emit("data",output);_.isFunction(_this.callback)&&_this.callback(null,output,_this)},0)):(this.emit("data",output),_.isFunction(_this.callback)&&this.callback(null,output,this),clearTimeout(this._isSyncingTimeout),
this._isSyncingTimeout=setTimeout(function(){output.currentBlock>output.highestBlock-200&&(_this._isSyncing=!1,_this.emit("changed",_this._isSyncing),_.isFunction(_this.callback)&&_this.callback(null,_this._isSyncing,_this))},500))}}}})];methods.forEach(function(method){method.attachToObject(_this$jscomp$0);method.setRequestManager(_this$jscomp$0._requestManager,_this$jscomp$0.accounts);method.defaultBlock=_this$jscomp$0.defaultBlock;method.defaultAccount=_this$jscomp$0.defaultAccount;method.transactionBlockTimeout=
_this$jscomp$0.transactionBlockTimeout;method.transactionConfirmationBlocks=_this$jscomp$0.transactionConfirmationBlocks;method.transactionPollingTimeout=_this$jscomp$0.transactionPollingTimeout;method.handleRevert=_this$jscomp$0.handleRevert})};core.addProviders(require);module.exports=require}
//# sourceMappingURL=module$node_modules$web3_eth$src$index.js.map
