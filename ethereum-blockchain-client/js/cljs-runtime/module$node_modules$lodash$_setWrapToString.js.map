{
"version":3,
"file":"module$node_modules$lodash$_setWrapToString.js",
"lineCount":2,
"mappings":"AAAAA,cAAA,4CAAA,CAAgE,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAAA,IACpGC,eAAiBH,OAAA,CAAQ,4CAAR,CADmF,CAEpGI,kBAAoBJ,OAAA,CAAQ,+CAAR,CAFgF,CAGpGK,YAAcL,OAAA,CAAQ,yCAAR,CAHsF,CAIpGM,kBAAoBN,OAAA,CAAQ,+CAAR,CAiBxBC,OAAAC,QAAA,CALAK,QAAwB,CAACC,OAAD,CAAUC,SAAV,CAAqBC,OAArB,CAA8B,CACtCD,SAAVE,EAAsB,EAC1B,OAAON,YAAA,CAAYG,OAAZ,CAAqBJ,iBAAA,CAAkBO,SAAlB;AAA0BL,iBAAA,CAAkBH,cAAA,CAAeQ,SAAf,CAAlB,CAA0CD,OAA1C,CAA1B,CAArB,CAF6C,CAhBkD;",
"sources":["node_modules/lodash/_setWrapToString.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$lodash$_setWrapToString\"] = function(global,require,module,exports) {\nvar getWrapDetails = require('./_getWrapDetails'),\n    insertWrapDetails = require('./_insertWrapDetails'),\n    setToString = require('./_setToString'),\n    updateWrapDetails = require('./_updateWrapDetails');\n\n/**\n * Sets the `toString` method of `wrapper` to mimic the source of `reference`\n * with wrapper details in a comment at the top of the source body.\n *\n * @private\n * @param {Function} wrapper The function to modify.\n * @param {Function} reference The reference function.\n * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n * @returns {Function} Returns `wrapper`.\n */\nfunction setWrapToString(wrapper, reference, bitmask) {\n  var source = (reference + '');\n  return setToString(wrapper, insertWrapDetails(source, updateWrapDetails(getWrapDetails(source), bitmask)));\n}\n\nmodule.exports = setWrapToString;\n\n};"],
"names":["shadow$provide","global","require","module","exports","getWrapDetails","insertWrapDetails","setToString","updateWrapDetails","setWrapToString","wrapper","reference","bitmask","source"]
}
