{
"version":3,
"file":"module$node_modules$web3_eth$src$index.js",
"lineCount":25,
"mappings":"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",
"sources":["node_modules/web3-eth/src/index.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$web3_eth$src$index\"] = function(global,require,module,exports) {\n/*\n This file is part of web3.js.\n\n web3.js is free software: you can redistribute it and/or modify\n it under the terms of the GNU Lesser General Public License as published by\n the Free Software Foundation, either version 3 of the License, or\n (at your option) any later version.\n\n web3.js is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n GNU Lesser General Public License for more details.\n\n You should have received a copy of the GNU Lesser General Public License\n along with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n */\n/**\n * @file index.js\n * @author Fabian Vogelsteller <fabian@ethereum.org>\n * @date 2017\n */\n\n\"use strict\";\n\nvar _ = require('underscore');\nvar core = require('web3-core');\nvar helpers = require('web3-core-helpers');\nvar Subscriptions = require('web3-core-subscriptions').subscriptions;\nvar Method = require('web3-core-method');\nvar utils = require('web3-utils');\nvar Net = require('web3-net');\n\nvar ENS = require('web3-eth-ens');\nvar Personal = require('web3-eth-personal');\nvar BaseContract = require('web3-eth-contract');\nvar Iban = require('web3-eth-iban');\nvar Accounts = require('web3-eth-accounts');\nvar abi = require('web3-eth-abi');\n\nvar getNetworkType = require('./getNetworkType.js');\nvar formatter = helpers.formatters;\n\n\nvar blockCall = function (args) {\n    return (_.isString(args[0]) && args[0].indexOf('0x') === 0) ? \"eth_getBlockByHash\" : \"eth_getBlockByNumber\";\n};\n\nvar transactionFromBlockCall = function (args) {\n    return (_.isString(args[0]) && args[0].indexOf('0x') === 0) ? 'eth_getTransactionByBlockHashAndIndex' : 'eth_getTransactionByBlockNumberAndIndex';\n};\n\nvar uncleCall = function (args) {\n    return (_.isString(args[0]) && args[0].indexOf('0x') === 0) ? 'eth_getUncleByBlockHashAndIndex' : 'eth_getUncleByBlockNumberAndIndex';\n};\n\nvar getBlockTransactionCountCall = function (args) {\n    return (_.isString(args[0]) && args[0].indexOf('0x') === 0) ? 'eth_getBlockTransactionCountByHash' : 'eth_getBlockTransactionCountByNumber';\n};\n\nvar uncleCountCall = function (args) {\n    return (_.isString(args[0]) && args[0].indexOf('0x') === 0) ? 'eth_getUncleCountByBlockHash' : 'eth_getUncleCountByBlockNumber';\n};\n\n\nvar Eth = function Eth() {\n    var _this = this;\n\n    // sets _requestmanager\n    core.packageInit(this, arguments);\n\n    // overwrite setProvider\n    var setProvider = this.setProvider;\n    this.setProvider = function () {\n        setProvider.apply(_this, arguments);\n        _this.net.setProvider.apply(_this, arguments);\n        _this.personal.setProvider.apply(_this, arguments);\n        _this.accounts.setProvider.apply(_this, arguments);\n        _this.Contract.setProvider(_this.currentProvider, _this.accounts);\n    };\n\n\n    var handleRevert = false;\n    var defaultAccount = null;\n    var defaultBlock = 'latest';\n    var transactionBlockTimeout = 50;\n    var transactionConfirmationBlocks = 24;\n    var transactionPollingTimeout = 750;\n    var defaultChain, defaultHardfork, defaultCommon;\n\n    Object.defineProperty(this, 'handleRevert', {\n        get: function () {\n            return handleRevert;\n        },\n        set: function (val) {\n            handleRevert = val;\n\n            // also set on the Contract object\n            _this.Contract.handleRevert = handleRevert;\n\n            // update handleRevert\n            methods.forEach(function(method) {\n                method.handleRevert = handleRevert;\n            });\n        },\n        enumerable: true\n    });\n    Object.defineProperty(this, 'defaultCommon', {\n        get: function () {\n            return defaultCommon;\n        },\n        set: function (val) {\n            defaultCommon = val;\n\n            // also set on the Contract object\n            _this.Contract.defaultCommon = defaultCommon;\n\n            // update defaultBlock\n            methods.forEach(function(method) {\n                method.defaultCommon = defaultCommon;\n            });\n        },\n        enumerable: true\n    });\n    Object.defineProperty(this, 'defaultHardfork', {\n        get: function () {\n            return defaultHardfork;\n        },\n        set: function (val) {\n            defaultHardfork = val;\n\n            // also set on the Contract object\n            _this.Contract.defaultHardfork = defaultHardfork;\n\n            // update defaultBlock\n            methods.forEach(function(method) {\n                method.defaultHardfork = defaultHardfork;\n            });\n        },\n        enumerable: true\n    });\n    Object.defineProperty(this, 'defaultChain', {\n        get: function () {\n            return defaultChain;\n        },\n        set: function (val) {\n            defaultChain = val;\n\n            // also set on the Contract object\n            _this.Contract.defaultChain = defaultChain;\n\n            // update defaultBlock\n            methods.forEach(function(method) {\n                method.defaultChain = defaultChain;\n            });\n        },\n        enumerable: true\n    });\n    Object.defineProperty(this, 'transactionPollingTimeout', {\n        get: function () {\n            return transactionPollingTimeout;\n        },\n        set: function (val) {\n            transactionPollingTimeout = val;\n\n            // also set on the Contract object\n            _this.Contract.transactionPollingTimeout = transactionPollingTimeout;\n\n            // update defaultBlock\n            methods.forEach(function(method) {\n                method.transactionPollingTimeout = transactionPollingTimeout;\n            });\n        },\n        enumerable: true\n    });\n    Object.defineProperty(this, 'transactionConfirmationBlocks', {\n        get: function () {\n            return transactionConfirmationBlocks;\n        },\n        set: function (val) {\n            transactionConfirmationBlocks = val;\n\n            // also set on the Contract object\n            _this.Contract.transactionConfirmationBlocks = transactionConfirmationBlocks;\n\n            // update defaultBlock\n            methods.forEach(function(method) {\n                method.transactionConfirmationBlocks = transactionConfirmationBlocks;\n            });\n        },\n        enumerable: true\n    });\n    Object.defineProperty(this, 'transactionBlockTimeout', {\n        get: function () {\n            return transactionBlockTimeout;\n        },\n        set: function (val) {\n            transactionBlockTimeout = val;\n\n            // also set on the Contract object\n            _this.Contract.transactionBlockTimeout = transactionBlockTimeout;\n\n            // update defaultBlock\n            methods.forEach(function(method) {\n                method.transactionBlockTimeout = transactionBlockTimeout;\n            });\n        },\n        enumerable: true\n    });\n    Object.defineProperty(this, 'defaultAccount', {\n        get: function () {\n            return defaultAccount;\n        },\n        set: function (val) {\n            if(val) {\n                defaultAccount = utils.toChecksumAddress(formatter.inputAddressFormatter(val));\n            }\n\n            // also set on the Contract object\n            _this.Contract.defaultAccount = defaultAccount;\n            _this.personal.defaultAccount = defaultAccount;\n\n            // update defaultBlock\n            methods.forEach(function(method) {\n                method.defaultAccount = defaultAccount;\n            });\n\n            return val;\n        },\n        enumerable: true\n    });\n    Object.defineProperty(this, 'defaultBlock', {\n        get: function () {\n            return defaultBlock;\n        },\n        set: function (val) {\n            defaultBlock = val;\n            // also set on the Contract object\n            _this.Contract.defaultBlock = defaultBlock;\n            _this.personal.defaultBlock = defaultBlock;\n\n            // update defaultBlock\n            methods.forEach(function(method) {\n                method.defaultBlock = defaultBlock;\n            });\n\n            return val;\n        },\n        enumerable: true\n    });\n\n\n    this.clearSubscriptions = _this._requestManager.clearSubscriptions;\n\n    // add net\n    this.net = new Net(this.currentProvider);\n    // add chain detection\n    this.net.getNetworkType = getNetworkType.bind(this);\n\n    // add accounts\n    this.accounts = new Accounts(this.currentProvider);\n\n    // add personal\n    this.personal = new Personal(this.currentProvider);\n    this.personal.defaultAccount = this.defaultAccount;\n\n    // create a proxy Contract type for this instance, as a Contract's provider\n    // is stored as a class member rather than an instance variable. If we do\n    // not create this proxy type, changing the provider in one instance of\n    // web3-eth would subsequently change the provider for _all_ contract\n    // instances!\n    var self = this;\n    var Contract = function Contract() {\n        BaseContract.apply(this, arguments);\n\n        // when Eth.setProvider is called, call packageInit\n        // on all contract instances instantiated via this Eth\n        // instances. This will update the currentProvider for\n        // the contract instances\n        var _this = this;\n        var setProvider = self.setProvider;\n        self.setProvider = function() {\n          setProvider.apply(self, arguments);\n          core.packageInit(_this, [self.currentProvider]);\n        };\n    };\n\n    Contract.setProvider = function() {\n        BaseContract.setProvider.apply(this, arguments);\n    };\n\n    // make our proxy Contract inherit from web3-eth-contract so that it has all\n    // the right functionality and so that instanceof and friends work properly\n    Contract.prototype = Object.create(BaseContract.prototype);\n    Contract.prototype.constructor = Contract;\n\n    // add contract\n    this.Contract = Contract;\n    this.Contract.defaultAccount = this.defaultAccount;\n    this.Contract.defaultBlock = this.defaultBlock;\n    this.Contract.transactionBlockTimeout = this.transactionBlockTimeout;\n    this.Contract.transactionConfirmationBlocks = this.transactionConfirmationBlocks;\n    this.Contract.transactionPollingTimeout = this.transactionPollingTimeout;\n    this.Contract.handleRevert = this.handleRevert;\n    this.Contract.setProvider(this.currentProvider, this.accounts);\n\n    // add IBAN\n    this.Iban = Iban;\n\n    // add ABI\n    this.abi = abi;\n\n    // add ENS\n    this.ens = new ENS(this);\n\n    var methods = [\n        new Method({\n            name: 'getNodeInfo',\n            call: 'web3_clientVersion'\n        }),\n        new Method({\n            name: 'getProtocolVersion',\n            call: 'eth_protocolVersion',\n            params: 0\n        }),\n        new Method({\n            name: 'getCoinbase',\n            call: 'eth_coinbase',\n            params: 0\n        }),\n        new Method({\n            name: 'isMining',\n            call: 'eth_mining',\n            params: 0\n        }),\n        new Method({\n            name: 'getHashrate',\n            call: 'eth_hashrate',\n            params: 0,\n            outputFormatter: utils.hexToNumber\n        }),\n        new Method({\n            name: 'isSyncing',\n            call: 'eth_syncing',\n            params: 0,\n            outputFormatter: formatter.outputSyncingFormatter\n        }),\n        new Method({\n            name: 'getGasPrice',\n            call: 'eth_gasPrice',\n            params: 0,\n            outputFormatter: formatter.outputBigNumberFormatter\n        }),\n        new Method({\n            name: 'getAccounts',\n            call: 'eth_accounts',\n            params: 0,\n            outputFormatter: utils.toChecksumAddress\n        }),\n        new Method({\n            name: 'getBlockNumber',\n            call: 'eth_blockNumber',\n            params: 0,\n            outputFormatter: utils.hexToNumber\n        }),\n        new Method({\n            name: 'getBalance',\n            call: 'eth_getBalance',\n            params: 2,\n            inputFormatter: [formatter.inputAddressFormatter, formatter.inputDefaultBlockNumberFormatter],\n            outputFormatter: formatter.outputBigNumberFormatter\n        }),\n        new Method({\n            name: 'getStorageAt',\n            call: 'eth_getStorageAt',\n            params: 3,\n            inputFormatter: [formatter.inputAddressFormatter, utils.numberToHex, formatter.inputDefaultBlockNumberFormatter]\n        }),\n        new Method({\n            name: 'getCode',\n            call: 'eth_getCode',\n            params: 2,\n            inputFormatter: [formatter.inputAddressFormatter, formatter.inputDefaultBlockNumberFormatter]\n        }),\n        new Method({\n            name: 'getBlock',\n            call: blockCall,\n            params: 2,\n            inputFormatter: [formatter.inputBlockNumberFormatter, function (val) { return !!val; }],\n            outputFormatter: formatter.outputBlockFormatter\n        }),\n        new Method({\n            name: 'getUncle',\n            call: uncleCall,\n            params: 2,\n            inputFormatter: [formatter.inputBlockNumberFormatter, utils.numberToHex],\n            outputFormatter: formatter.outputBlockFormatter,\n\n        }),\n        new Method({\n            name: 'getBlockTransactionCount',\n            call: getBlockTransactionCountCall,\n            params: 1,\n            inputFormatter: [formatter.inputBlockNumberFormatter],\n            outputFormatter: utils.hexToNumber\n        }),\n        new Method({\n            name: 'getBlockUncleCount',\n            call: uncleCountCall,\n            params: 1,\n            inputFormatter: [formatter.inputBlockNumberFormatter],\n            outputFormatter: utils.hexToNumber\n        }),\n        new Method({\n            name: 'getTransaction',\n            call: 'eth_getTransactionByHash',\n            params: 1,\n            inputFormatter: [null],\n            outputFormatter: formatter.outputTransactionFormatter\n        }),\n        new Method({\n            name: 'getTransactionFromBlock',\n            call: transactionFromBlockCall,\n            params: 2,\n            inputFormatter: [formatter.inputBlockNumberFormatter, utils.numberToHex],\n            outputFormatter: formatter.outputTransactionFormatter\n        }),\n        new Method({\n            name: 'getTransactionReceipt',\n            call: 'eth_getTransactionReceipt',\n            params: 1,\n            inputFormatter: [null],\n            outputFormatter: formatter.outputTransactionReceiptFormatter\n        }),\n        new Method({\n            name: 'getTransactionCount',\n            call: 'eth_getTransactionCount',\n            params: 2,\n            inputFormatter: [formatter.inputAddressFormatter, formatter.inputDefaultBlockNumberFormatter],\n            outputFormatter: utils.hexToNumber\n        }),\n        new Method({\n            name: 'sendSignedTransaction',\n            call: 'eth_sendRawTransaction',\n            params: 1,\n            inputFormatter: [null]\n        }),\n        new Method({\n            name: 'signTransaction',\n            call: 'eth_signTransaction',\n            params: 1,\n            inputFormatter: [formatter.inputTransactionFormatter]\n        }),\n        new Method({\n            name: 'sendTransaction',\n            call: 'eth_sendTransaction',\n            params: 1,\n            inputFormatter: [formatter.inputTransactionFormatter],\n            abiCoder: abi\n        }),\n        new Method({\n            name: 'sign',\n            call: 'eth_sign',\n            params: 2,\n            inputFormatter: [formatter.inputSignFormatter, formatter.inputAddressFormatter],\n            transformPayload: function (payload) {\n                payload.params.reverse();\n                return payload;\n            }\n        }),\n        new Method({\n            name: 'call',\n            call: 'eth_call',\n            params: 2,\n            inputFormatter: [formatter.inputCallFormatter, formatter.inputDefaultBlockNumberFormatter],\n            abiCoder: abi\n        }),\n        new Method({\n            name: 'estimateGas',\n            call: 'eth_estimateGas',\n            params: 1,\n            inputFormatter: [formatter.inputCallFormatter],\n            outputFormatter: utils.hexToNumber\n        }),\n        new Method({\n            name: 'submitWork',\n            call: 'eth_submitWork',\n            params: 3\n        }),\n        new Method({\n            name: 'getWork',\n            call: 'eth_getWork',\n            params: 0\n        }),\n        new Method({\n            name: 'getPastLogs',\n            call: 'eth_getLogs',\n            params: 1,\n            inputFormatter: [formatter.inputLogFormatter],\n            outputFormatter: formatter.outputLogFormatter\n        }),\n        new Method({\n            name: 'getChainId',\n            call: 'eth_chainId',\n            params: 0,\n            outputFormatter: utils.hexToNumber\n        }),\n        new Method({\n            name: 'requestAccounts',\n            call: 'eth_requestAccounts',\n            params: 0,\n            outputFormatter: utils.toChecksumAddress\n        }),\n        new Method({\n            name: 'getProof',\n            call: 'eth_getProof',\n            params: 3,\n            inputFormatter: [formatter.inputAddressFormatter, formatter.inputStorageKeysFormatter, formatter.inputDefaultBlockNumberFormatter],\n            outputFormatter: formatter.outputProofFormatter\n        }),\n        new Method({\n            name: 'getPendingTransactions',\n            call: 'eth_pendingTransactions',\n            params: 0,\n            outputFormatter: formatter.outputTransactionFormatter\n        }),\n\n        // subscriptions\n        new Subscriptions({\n            name: 'subscribe',\n            type: 'eth',\n            subscriptions: {\n                'newBlockHeaders': {\n                    // TODO rename on RPC side?\n                    subscriptionName: 'newHeads', // replace subscription with this name\n                    params: 0,\n                    outputFormatter: formatter.outputBlockFormatter\n                },\n                'pendingTransactions': {\n                    subscriptionName: 'newPendingTransactions', // replace subscription with this name\n                    params: 0\n                },\n                'logs': {\n                    params: 1,\n                    inputFormatter: [formatter.inputLogFormatter],\n                    outputFormatter: formatter.outputLogFormatter,\n                    // DUBLICATE, also in web3-eth-contract\n                    subscriptionHandler: function (output) {\n                        if(output.removed) {\n                            this.emit('changed', output);\n                        } else {\n                            this.emit('data', output);\n                        }\n\n                        if (_.isFunction(this.callback)) {\n                            this.callback(null, output, this);\n                        }\n                    }\n                },\n                'syncing': {\n                    params: 0,\n                    outputFormatter: formatter.outputSyncingFormatter,\n                    subscriptionHandler: function (output) {\n                        var _this = this;\n\n                        // fire TRUE at start\n                        if(this._isSyncing !== true) {\n                            this._isSyncing = true;\n                            this.emit('changed', _this._isSyncing);\n\n                            if (_.isFunction(this.callback)) {\n                                this.callback(null, _this._isSyncing, this);\n                            }\n\n                            setTimeout(function () {\n                                _this.emit('data', output);\n\n                                if (_.isFunction(_this.callback)) {\n                                    _this.callback(null, output, _this);\n                                }\n                            }, 0);\n\n                            // fire sync status\n                        } else {\n                            this.emit('data', output);\n                            if (_.isFunction(_this.callback)) {\n                                this.callback(null, output, this);\n                            }\n\n                            // wait for some time before fireing the FALSE\n                            clearTimeout(this._isSyncingTimeout);\n                            this._isSyncingTimeout = setTimeout(function () {\n                                if(output.currentBlock > output.highestBlock - 200) {\n                                    _this._isSyncing = false;\n                                    _this.emit('changed', _this._isSyncing);\n\n                                    if (_.isFunction(_this.callback)) {\n                                        _this.callback(null, _this._isSyncing, _this);\n                                    }\n                                }\n                            }, 500);\n                        }\n                    }\n                }\n            }\n        })\n    ];\n\n    methods.forEach(function(method) {\n        method.attachToObject(_this);\n        method.setRequestManager(_this._requestManager, _this.accounts); // second param means is eth.accounts (necessary for wallet signing)\n        method.defaultBlock = _this.defaultBlock;\n        method.defaultAccount = _this.defaultAccount;\n        method.transactionBlockTimeout = _this.transactionBlockTimeout;\n        method.transactionConfirmationBlocks = _this.transactionConfirmationBlocks;\n        method.transactionPollingTimeout = _this.transactionPollingTimeout;\n        method.handleRevert = _this.handleRevert;\n    });\n\n};\n\ncore.addProviders(Eth);\n\n\nmodule.exports = Eth;\n\n\n};"],
"names":["shadow$provide","global","require","module","exports","_","core","helpers","Subscriptions","subscriptions","Method","utils","Net","ENS","Personal","BaseContract","Iban","Accounts","abi","getNetworkType","formatter","formatters","blockCall","args","isString","indexOf","transactionFromBlockCall","uncleCall","getBlockTransactionCountCall","uncleCountCall","Eth","_this","packageInit","arguments","setProvider","this.setProvider","apply","net","personal","accounts","Contract","currentProvider","handleRevert","defaultAccount","defaultBlock","transactionBlockTimeout","transactionConfirmationBlocks","transactionPollingTimeout","defaultChain","defaultHardfork","defaultCommon","Object","defineProperty","get","set","val","methods","forEach","method","enumerable","toChecksumAddress","inputAddressFormatter","clearSubscriptions","_requestManager","bind","self","self.setProvider","Contract.setProvider","prototype","create","constructor","ens","name","call","params","outputFormatter","hexToNumber","outputSyncingFormatter","outputBigNumberFormatter","inputFormatter","inputDefaultBlockNumberFormatter","numberToHex","inputBlockNumberFormatter","outputBlockFormatter","outputTransactionFormatter","outputTransactionReceiptFormatter","inputTransactionFormatter","abiCoder","inputSignFormatter","transformPayload","payload","reverse","inputCallFormatter","inputLogFormatter","outputLogFormatter","inputStorageKeysFormatter","outputProofFormatter","type","subscriptionName","subscriptionHandler","output","removed","emit","isFunction","callback","_isSyncing","setTimeout","clearTimeout","_isSyncingTimeout","currentBlock","highestBlock","attachToObject","setRequestManager","addProviders"]
}
