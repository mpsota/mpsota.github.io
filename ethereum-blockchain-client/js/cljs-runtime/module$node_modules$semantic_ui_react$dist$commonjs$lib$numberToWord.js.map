{
"version":3,
"file":"module$node_modules$semantic_ui_react$dist$commonjs$lib$numberToWord.js",
"lineCount":2,
"mappings":"AAAAA,cAAA,qEAAA,CAAyF,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAG7HC,MAAAA,CAAyBH,OAAA,CAAQ,kEAAR,CAE7BI,OAAAC,eAAA,CAAsBH,OAAtB,CAA+B,YAA/B,CAA6C,CAC3CI,MAAO,CAAA,CADoC,CAA7C,CAGAJ,QAAAK,aAAA,CAiCAA,QAAqB,CAACD,KAAD,CAAQ,CAC3B,IAAIE,KAAO,CAAC,CAAA,CAAGC,QAAA,CAAS,SAAT,CAAJ,EAAyBH,KAAzB,CAEX,OAAa,QAAb,GAAIE,IAAJ,EAAkC,QAAlC,GAAyBA,IAAzB,CACSE,eAAA,CAAgBJ,KAAhB,CADT,EACmCA,KADnC,CAIO,EAPoB,CAhC7BJ,QAAAQ,gBAAA,CAA0B,IAAK,EAE/B,KAAID,SAAWN,MAAA,CAAuBH,OAAA,CAAQ,mDAAR,CAAvB,CAAf;AAEIU,gBAAkB,CACpB,EAAG,KADiB,CAEpB,EAAG,KAFiB,CAGpB,EAAG,OAHiB,CAIpB,EAAG,MAJiB,CAKpB,EAAG,MALiB,CAMpB,EAAG,KANiB,CAOpB,EAAG,OAPiB,CAQpB,EAAG,OARiB,CASpB,EAAG,MATiB,CAUpB,GAAI,KAVgB,CAWpB,GAAI,QAXgB,CAYpB,GAAI,QAZgB,CAapB,GAAI,UAbgB,CAcpB,GAAI,UAdgB,CAepB,GAAI,SAfgB,CAgBpB,GAAI,SAhBgB,CA0BtBR,QAAAQ,gBAAA,CAA0BA,eAvCuG;",
"sources":["node_modules/semantic-ui-react/dist/commonjs/lib/numberToWord.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$semantic_ui_react$dist$commonjs$lib$numberToWord\"] = function(global,require,module,exports) {\n\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.numberToWord = numberToWord;\nexports.numberToWordMap = void 0;\n\nvar _typeof2 = _interopRequireDefault(require(\"@babel/runtime/helpers/typeof\"));\n\nvar numberToWordMap = {\n  1: 'one',\n  2: 'two',\n  3: 'three',\n  4: 'four',\n  5: 'five',\n  6: 'six',\n  7: 'seven',\n  8: 'eight',\n  9: 'nine',\n  10: 'ten',\n  11: 'eleven',\n  12: 'twelve',\n  13: 'thirteen',\n  14: 'fourteen',\n  15: 'fifteen',\n  16: 'sixteen'\n  /**\n   * Return the number word for numbers 1-16.\n   * Returns strings or numbers as is if there is no corresponding word.\n   * Returns an empty string if value is not a string or number.\n   * @param {string|number} value The value to convert to a word.\n   * @returns {string}\n   */\n\n};\nexports.numberToWordMap = numberToWordMap;\n\nfunction numberToWord(value) {\n  var type = (0, _typeof2[\"default\"])(value);\n\n  if (type === 'string' || type === 'number') {\n    return numberToWordMap[value] || value;\n  }\n\n  return '';\n}\n};"],
"names":["shadow$provide","global","require","module","exports","_interopRequireDefault","Object","defineProperty","value","numberToWord","type","_typeof2","numberToWordMap"]
}
