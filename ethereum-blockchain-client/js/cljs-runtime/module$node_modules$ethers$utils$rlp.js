shadow$provide.module$node_modules$ethers$utils$rlp=function(global,require,module,exports){function arrayifyInteger(value){for(var result=[];value;)result.unshift(value&255),value>>=8;return result}function unarrayifyInteger(data,offset,length){for(var result=0,i=0;i<length;i++)result=256*result+data[offset+i];return result}function _encode(object){if(Array.isArray(object)){var payload=[];object.forEach(function(child){payload=payload.concat(_encode(child))});if(55>=payload.length)return payload.unshift(192+
payload.length),payload;object=arrayifyInteger(payload.length);object.unshift(247+object.length);return object.concat(payload)}var data=Array.prototype.slice.call(bytes_1.arrayify(object));if(1===data.length&&127>=data[0])return data;if(55>=data.length)return data.unshift(128+data.length),data;object=arrayifyInteger(data.length);object.unshift(183+object.length);return object.concat(data)}function _decodeChildren(data,offset,childOffset,length){for(var result=[];childOffset<offset+1+length;){var decoded=
_decode(data,childOffset);result.push(decoded.result);childOffset+=decoded.consumed;if(childOffset>offset+1+length)throw Error("invalid rlp");}return{consumed:1+length,result:result}}function _decode(data,offset){if(0===data.length)throw Error("invalid rlp data");if(248<=data[offset]){var lengthLength=data[offset]-247;if(offset+1+lengthLength>data.length)throw Error("too short");var length=unarrayifyInteger(data,offset+1,lengthLength);if(offset+1+lengthLength+length>data.length)throw Error("to short");
return _decodeChildren(data,offset,offset+1+lengthLength,lengthLength+length)}if(192<=data[offset]){length=data[offset]-192;if(offset+1+length>data.length)throw Error("invalid rlp data");return _decodeChildren(data,offset,offset+1,length)}if(184<=data[offset]){lengthLength=data[offset]-183;if(offset+1+lengthLength>data.length)throw Error("invalid rlp data");length=unarrayifyInteger(data,offset+1,lengthLength);if(offset+1+lengthLength+length>data.length)throw Error("invalid rlp data");data=bytes_1.hexlify(data.slice(offset+
1+lengthLength,offset+1+lengthLength+length));return{consumed:1+lengthLength+length,result:data}}if(128<=data[offset]){length=data[offset]-128;if(offset+1+length>data.length)throw Error("invalid rlp data");data=bytes_1.hexlify(data.slice(offset+1,offset+1+length));return{consumed:1+length,result:data}}return{consumed:1,result:bytes_1.hexlify(data[offset])}}Object.defineProperty(exports,"__esModule",{value:!0});var bytes_1=require("module$node_modules$ethers$utils$bytes");exports.encode=function(object){return bytes_1.hexlify(_encode(object))};
exports.decode=function(data){data=bytes_1.arrayify(data);var decoded=_decode(data,0);if(decoded.consumed!==data.length)throw Error("invalid rlp data");return decoded.result}}
//# sourceMappingURL=module$node_modules$ethers$utils$rlp.js.map
