{
"version":3,
"file":"module$node_modules$lodash$curry.js",
"lineCount":1,
"mappings":"AAAAA,cAAA,iCAAA,CAAqD,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CA+C7FC,QAASA,MAAK,CAACC,IAAD,CAAOC,KAAP,CAAcC,KAAd,CAAqB,CAE7BC,IAAAA,CAASC,UAAA,CAAWJ,IAAX,CA7COK,CA6CP,CAAkCC,IAAAA,EAAlC,CAA6CA,IAAAA,EAA7C,CAAwDA,IAAAA,EAAxD,CAAmEA,IAAAA,EAAnE,CAA8EA,IAAAA,EAA9E,CADLJ,KAAAD,CAAQK,IAAAA,EAARL,CAAoBA,KACf,CACbE,KAAAI,YAAA,CAAqBR,KAAAQ,YACrB,OAAOJ,KAJ0B,CA9CnC,IAAIC,WAAaR,OAAA,CAAQ,wCAAR,CAsDjBG,MAAAQ,YAAA,CAAoB,EAEpBV,OAAAC,QAAA,CAAiBC,KAzD4E;",
"sources":["node_modules/lodash/curry.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$lodash$curry\"] = function(global,require,module,exports) {\nvar createWrap = require('./_createWrap');\n\n/** Used to compose bitmasks for function metadata. */\nvar WRAP_CURRY_FLAG = 8;\n\n/**\n * Creates a function that accepts arguments of `func` and either invokes\n * `func` returning its result, if at least `arity` number of arguments have\n * been provided, or returns a function that accepts the remaining `func`\n * arguments, and so on. The arity of `func` may be specified if `func.length`\n * is not sufficient.\n *\n * The `_.curry.placeholder` value, which defaults to `_` in monolithic builds,\n * may be used as a placeholder for provided arguments.\n *\n * **Note:** This method doesn't set the \"length\" property of curried functions.\n *\n * @static\n * @memberOf _\n * @since 2.0.0\n * @category Function\n * @param {Function} func The function to curry.\n * @param {number} [arity=func.length] The arity of `func`.\n * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n * @returns {Function} Returns the new curried function.\n * @example\n *\n * var abc = function(a, b, c) {\n *   return [a, b, c];\n * };\n *\n * var curried = _.curry(abc);\n *\n * curried(1)(2)(3);\n * // => [1, 2, 3]\n *\n * curried(1, 2)(3);\n * // => [1, 2, 3]\n *\n * curried(1, 2, 3);\n * // => [1, 2, 3]\n *\n * // Curried with placeholders.\n * curried(1)(_, 3)(2);\n * // => [1, 2, 3]\n */\nfunction curry(func, arity, guard) {\n  arity = guard ? undefined : arity;\n  var result = createWrap(func, WRAP_CURRY_FLAG, undefined, undefined, undefined, undefined, undefined, arity);\n  result.placeholder = curry.placeholder;\n  return result;\n}\n\n// Assign default placeholders.\ncurry.placeholder = {};\n\nmodule.exports = curry;\n\n};"],
"names":["shadow$provide","global","require","module","exports","curry","func","arity","guard","result","createWrap","WRAP_CURRY_FLAG","undefined","placeholder"]
}
