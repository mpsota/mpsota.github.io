shadow$provide.module$node_modules$web3_core_requestmanager$src$givenProvider=function(global,require,module,exports){require=null;try{global=Function("return this")()}catch(e){global=window}"undefined"!==typeof global.ethereumProvider?require=global.ethereumProvider:"undefined"!==typeof global.web3&&global.web3.currentProvider&&(global.web3.currentProvider.sendAsync&&(global.web3.currentProvider.send=global.web3.currentProvider.sendAsync,delete global.web3.currentProvider.sendAsync),!global.web3.currentProvider.on&&
global.web3.currentProvider.connection&&"ipcProviderWrapper"===global.web3.currentProvider.connection.constructor.name&&(global.web3.currentProvider.on=function(type,callback){if("function"!==typeof callback)throw Error("The second parameter callback must be a function.");switch(type){case "data":this.connection.on("data",function(data){var result="";data=data.toString();try{result=JSON.parse(data)}catch(e$13){return callback(Error("Couldn't parse response data"+data))}result.id||-1===result.method.indexOf("_subscription")||
callback(null,result)});break;default:this.connection.on(type,callback)}}),require=global.web3.currentProvider);module.exports=require}
//# sourceMappingURL=module$node_modules$web3_core_requestmanager$src$givenProvider.js.map
