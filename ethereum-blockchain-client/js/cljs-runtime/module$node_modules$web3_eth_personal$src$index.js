shadow$provide.module$node_modules$web3_eth_personal$src$index=function(global,require,module,exports){var core=require("module$node_modules$web3_core$src$index"),Method=require("module$node_modules$web3_core_method$src$index"),utils=require("module$node_modules$web3_utils$src$index"),Net=require("module$node_modules$web3_net$src$index"),formatters=require("module$node_modules$web3_core_helpers$src$index").formatters;global=function(){var _this=this;core.packageInit(this,arguments);this.net=new Net(this.currentProvider);
var defaultAccount=null,defaultBlock="latest";Object.defineProperty(this,"defaultAccount",{get:function(){return defaultAccount},set:function(val){val&&(defaultAccount=utils.toChecksumAddress(formatters.inputAddressFormatter(val)));methods.forEach(function(method){method.defaultAccount=defaultAccount});return val},enumerable:!0});Object.defineProperty(this,"defaultBlock",{get:function(){return defaultBlock},set:function(val){defaultBlock=val;methods.forEach(function(method){method.defaultBlock=defaultBlock});
return val},enumerable:!0});var methods=[new Method({name:"getAccounts",call:"personal_listAccounts",params:0,outputFormatter:utils.toChecksumAddress}),new Method({name:"newAccount",call:"personal_newAccount",params:1,inputFormatter:[null],outputFormatter:utils.toChecksumAddress}),new Method({name:"unlockAccount",call:"personal_unlockAccount",params:3,inputFormatter:[formatters.inputAddressFormatter,null,null]}),new Method({name:"lockAccount",call:"personal_lockAccount",params:1,inputFormatter:[formatters.inputAddressFormatter]}),
new Method({name:"importRawKey",call:"personal_importRawKey",params:2}),new Method({name:"sendTransaction",call:"personal_sendTransaction",params:2,inputFormatter:[formatters.inputTransactionFormatter,null]}),new Method({name:"signTransaction",call:"personal_signTransaction",params:2,inputFormatter:[formatters.inputTransactionFormatter,null]}),new Method({name:"sign",call:"personal_sign",params:3,inputFormatter:[formatters.inputSignFormatter,formatters.inputAddressFormatter,null]}),new Method({name:"ecRecover",
call:"personal_ecRecover",params:2,inputFormatter:[formatters.inputSignFormatter,null]})];methods.forEach(function(method){method.attachToObject(_this);method.setRequestManager(_this._requestManager);method.defaultBlock=_this.defaultBlock;method.defaultAccount=_this.defaultAccount})};core.addProviders(global);module.exports=global}
//# sourceMappingURL=module$node_modules$web3_eth_personal$src$index.js.map
