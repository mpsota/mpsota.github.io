{
"version":3,
"file":"module$node_modules$ethereumjs_common$dist$index.js",
"lineCount":14,
"mappings":"AAAAA,cAAA,iDAAA,CAAqE,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAE7G,IAAIC,SAAY,IAAZA,EAAoB,IAAAA,SAApBA,EAAsC,QAAS,EAAG,CAClDA,QAAA,CAAWC,MAAAC,OAAX,EAA4B,QAAQ,CAACC,CAAD,CAAI,CACpC,IADoC,IAC3BC,CAD2B,CACxBC,EAAI,CADoB,CACjBC,EAAIC,SAAAC,OAAvB,CAAyCH,CAAzC,CAA6CC,CAA7C,CAAgDD,CAAA,EAAhD,CAAqD,CACjDD,CAAA,CAAIG,SAAA,CAAUF,CAAV,CACJ,KAAKI,IAAIA,CAAT,GAAcL,EAAd,CAAqBH,MAAAS,UAAAC,eAAAC,KAAA,CAAqCR,CAArC,CAAwCK,CAAxC,CAAJ,GACbN,CAAA,CAAEM,CAAF,CADa,CACNL,CAAA,CAAEK,CAAF,CADM,CAFgC,CAKrD,MAAON,EAN6B,CAQxC,OAAOH,SAAAa,MAAA,CAAe,IAAf,CAAqBN,SAArB,CAT2C,CAWtDN,OAAAa,eAAA,CAAsBf,OAAtB,CAA+B,YAA/B,CAA6C,CAAEgB,MAAO,CAAA,CAAT,CAA7C,CACA,KAAIC,SAAWnB,OAAA,CAAQ,yDAAR,CAAf,CACIoB;AAAcpB,OAAA,CAAQ,4DAAR,CAIdqB,OAAAA,CAAwB,QAAS,EAAG,CAOpCA,QAASA,OAAM,CAACC,KAAD,CAAQC,QAAR,CAAkBC,kBAAlB,CAAsC,CACjD,IAAAC,aAAA,CAAoB,IAAAC,SAAA,CAAcJ,KAAd,CACpB,KAAAK,UAAA,CAAiB,IACjB,KAAAC,oBAAA,CAAkDC,IAAAA,EAAvB,GAAAL,kBAAA,CAAmC,EAAnC,CAAwCA,kBAC/DD,SAAJ,EACI,IAAAO,YAAA,CAAiBP,QAAjB,CAL6C,CAkBrDF,MAAAU,eAAA,CAAwBC,QAAS,CAACC,SAAD,CAAYC,iBAAZ,CAA+BX,QAA/B,CAAyCC,kBAAzC,CAA6D,CACtFW,SAAAA,CAAsBd,MAAAe,gBAAA,CAAuBH,SAAvB,CAC1B,OAAO,KAAIZ,MAAJ,CAAWlB,QAAA,CAAS,EAAT,CAAagC,SAAb,CAAkCD,iBAAlC,CAAX;AAAiEX,QAAjE,CAA2EC,kBAA3E,CAFmF,CAI9FH,OAAAe,gBAAA,CAAyBC,QAAS,CAACf,KAAD,CAAQ,CACtC,GAAqB,QAArB,GAAI,MAAOA,MAAX,CAA+B,CAC3B,GAAIH,QAAAmB,OAAA,MAAA,CAAyBhB,KAAzB,CAAJ,CACI,MAAOH,SAAAmB,OAAA,CAAgBnB,QAAAmB,OAAA,MAAA,CAAyBhB,KAAzB,CAAhB,CAEX,MAAUiB,MAAJ,CAAU,gBAAV,CAA6BjB,KAA7B,CAAqC,gBAArC,CAAN,CAJ2B,CAM/B,GAAIH,QAAAmB,OAAA,CAAgBhB,KAAhB,CAAJ,CACI,MAAOH,SAAAmB,OAAA,CAAgBhB,KAAhB,CAEX,MAAUiB,MAAJ,CAAU,kBAAV,CAA+BjB,KAA/B,CAAuC,gBAAvC,CAAN,CAVsC,CAkB1CD,OAAAR,UAAAa,SAAA,CAA4Bc,QAAS,CAAClB,KAAD,CAAQ,CACzC,GAAqB,QAArB,GAAI,MAAOA,MAAX,EAAkD,QAAlD,GAAiC,MAAOA,MAAxC,CACI,IAAAG,aAAA,CAAoBJ,MAAAe,gBAAA,CAAuBd,KAAvB,CADxB,KAGK,IAAqB,QAArB;AAAI,MAAOA,MAAX,CAA+B,CAEhC,IAFgC,IAEvBmB,GAAK,CAFkB,CAEfC,WADFC,CAAC,WAADA,CAAc,SAAdA,CAAyB,WAAzBA,CAAsC,gBAAtCA,CACf,CAAwCF,EAAxC,CAA6CC,UAAA/B,OAA7C,CAAgE8B,EAAA,EAAhE,CAAsE,CAClE,IAAIG,MAAQF,UAAA,CAAWD,EAAX,CACZ,IAAqBZ,IAAAA,EAArB,GAAIP,KAAA,CAAMsB,KAAN,CAAJ,CACI,KAAUL,MAAJ,CAAU,oCAAV,CAAiDK,KAAjD,CAAN,CAH8D,CAMtE,IAAAnB,aAAA,CAAoBH,KARY,CAA/B,IAWD,MAAUiB,MAAJ,CAAU,oBAAV,CAAN,CAEJ,MAAO,KAAAd,aAjBkC,CAuB7CJ,OAAAR,UAAAiB,YAAA,CAA+Be,QAAS,CAACtB,QAAD,CAAW,CAC/C,GAAI,CAAC,IAAAuB,qBAAA,CAA0BvB,QAA1B,CAAL,CACI,KAAUgB,MAAJ,CAAU,WAAV,CAAwBhB,QAAxB,CAAmC,6CAAnC,CAAN,CAGJ,IADA,IAAIwB,QAAU,CAAA,CAAd;AACSN,GAAK,CADd,CACiBO,kBAAoB5B,WAAA6B,UAArC,CAA4DR,EAA5D,CAAiEO,iBAAArC,OAAjE,CAA2F8B,EAAA,EAA3F,CACoBO,iBAAAE,CAAkBT,EAAlBS,CACZ,CAAU,CAAV,CAAJ,GAAqB3B,QAArB,GACI,IAAAI,UACA,CADiBJ,QACjB,CAAAwB,OAAA,CAAU,CAAA,CAFd,CAKJ,IAAI,CAACA,OAAL,CACI,KAAUR,MAAJ,CAAU,qBAAV,CAAkChB,QAAlC,CAA6C,gBAA7C,CAAN,CAb2C,CAqBnDF,OAAAR,UAAAsC,gBAAA,CAAmCC,QAAS,CAAC7B,QAAD,CAAW8B,aAAX,CAA0B,CAElE,GAAI,CAAC9B,QAAL,CACI,GAAK,IAAAI,UAAL,CAIIJ,QAAA,CAAW,IAAAI,UAJf,KACI,MAAUY,MAAJ,CAAU,iEAAV,CAAN,CAFR,IAQK,KAT6BV,IAAAA,EAS7B,GATWwB,aASX,EATgDA,aAShD,GAAqB,CAAC,IAAAP,qBAAA,CAA0BvB,QAA1B,CAAtB,CACD,KAAUgB,MAAJ,CAAU,WAAV;AAAwBhB,QAAxB,CAAmC,6CAAnC,CAAN,CAEJ,MAAOA,SAb2D,CAoBtEF,OAAAR,UAAAyC,aAAA,CAAgCC,QAAS,CAAChC,QAAD,CAAW,CAEhD,IAFgD,IAEvCkB,GAAK,CAFkC,CAE/Be,MADP,IAAAP,UAAAQ,EACV,CAA8BhB,EAA9B,CAAmCe,KAAA7C,OAAnC,CAAiD8B,EAAA,EAAjD,CAAuD,CACnD,IAAIiB,GAAKF,KAAA,CAAMf,EAAN,CACT,IAAIiB,EAAA,KAAJ,GAAmBnC,QAAnB,CACI,MAAOmC,GAHwC,CAKvD,KAAUnB,MAAJ,CAAU,WAAV,CAAwBhB,QAAxB,CAAmC,yBAAnC,CAA+D,IAAAoC,UAAA,EAA/D,CAAN,CAPgD,CAcpDtC,OAAAR,UAAAiC,qBAAA,CAAwCc,QAAS,CAACrC,QAAD,CAAW,CACxD,GAAsC,CAAtC,CAAI,IAAAK,oBAAAjB,OAAJ,CACI,IADqC,IAC5B8B,GAAK,CADuB,CACpBoB,GAAK,IAAAjC,oBAAtB,CAAgDa,EAAhD,CAAqDoB,EAAAlD,OAArD,CAAgE8B,EAAA,EAAhE,CAEI,IAAIlB,QAAJ,GADkBsC,EAAAC,CAAGrB,EAAHqB,CAClB,CACI,MAAO,CAAA,CADX,CAHR,IAQI,OAAO,CAAA,CAEX;MAAO,CAAA,CAXiD,CAmB5DzC,OAAAR,UAAA+B,MAAA,CAAyBmB,QAAS,CAACC,KAAD,CAAQC,IAAR,CAAc1C,QAAd,CAAwB,CACtDA,QAAA,CAAW,IAAA4B,gBAAA,CAAqB5B,QAArB,CAEX,KADA,IAAIL,KAAJ,CACSuB,GAAK,CADd,CACiByB,kBAAoB9C,WAAA6B,UAArC,CAA4DR,EAA5D,CAAiEyB,iBAAAvD,OAAjE,CAA2F8B,EAAA,EAA3F,CAAiG,CAC7F,IAAIS,UAAYgB,iBAAA,CAAkBzB,EAAlB,CAChB,IAAI,CAACS,SAAA,CAAU,CAAV,CAAA,CAAac,KAAb,CAAL,CACI,KAAUzB,MAAJ,CAAU,QAAV,CAAqByB,KAArB,CAA6B,cAA7B,CAAN,CAE8BnC,IAAAA,EAAlC,GAAIqB,SAAA,CAAU,CAAV,CAAA,CAAac,KAAb,CAAA,CAAoBC,IAApB,CAAJ,GACI/C,KADJ,CACYgC,SAAA,CAAU,CAAV,CAAA,CAAac,KAAb,CAAA,CAAoBC,IAApB,CAAAE,EADZ,CAGA,IAAIjB,SAAA,CAAU,CAAV,CAAJ,GAAqB3B,QAArB,CACI,KATyF,CAWjG,GAAcM,IAAAA,EAAd,GAAIX,KAAJ,CACI,KAAUqB,MAAJ,CAAUyB,KAAV,CAAkB,aAAlB,CAAkCC,IAAlC,CAAyC,YAAzC,CAAN,CAEJ,MAAO/C,MAjB+C,CAyB1DG,OAAAR,UAAAuD,aAAA;AAAgCC,QAAS,CAACL,KAAD,CAAQC,IAAR,CAAcK,WAAd,CAA2B,CAC5DC,WAAAA,CAAY,IAAAC,gBAAA,CAAqBF,WAArB,CAEhB,OAAO,KAAA1B,MAAA,CAAWoB,KAAX,CAAkBC,IAAlB,CADQM,WAAA,CAAUA,WAAA5D,OAAV,CAA6B,CAA7B,CAAAY,KACR,CAHyD,CAYpEF,OAAAR,UAAA4D,wBAAA,CAA2CC,QAAS,CAACnD,QAAD,CAAW+C,WAAX,CAAwBK,IAAxB,CAA8B,CAC9EA,IAAA,CAAgB9C,IAAAA,EAAT,GAAA8C,IAAA,CAAqBA,IAArB,CAA4B,EAEnCpD,SAAA,CAAW,IAAA4B,gBAAA,CAAqB5B,QAArB,CADgCM,IAAAA,EAAvBwB,GAAAsB,IAAAtB,cAAAA,CAAmC,CAAA,CAAnCA,CAA2CsB,IAAAtB,cACpD,CACPuB,SAAAA,CAAU,IAAAC,cAAA,CAAmBtD,QAAnB,CACd,OAAgB,KAAhB,GAAIqD,QAAJ,EAAwBN,WAAxB,EAAuCM,QAAvC,CACW,CAAA,CADX,CAEO,CAAA,CAPuE,CAelFvD,OAAAR,UAAAiE,cAAA,CAAiCC,QAAS,CAACT,WAAD,CAAcK,IAAd,CAAoB,CAC1D,MAAO,KAAAF,wBAAA,CAA6B,IAA7B;AAAmCH,WAAnC,CAAgDK,IAAhD,CADmD,CAU9DtD,OAAAR,UAAAmE,oBAAA,CAAuCC,QAAS,CAACC,SAAD,CAAYC,SAAZ,CAAuBR,IAAvB,CAA6B,CACzEA,IAAA,CAAgB9C,IAAAA,EAAT,GAAA8C,IAAA,CAAqBA,IAArB,CAA4B,EACnC,KAAIS,WAAiCvD,IAAAA,EAApB,GAAA8C,IAAAS,WAAA,CAAgC,CAAA,CAAhC,CAAwCT,IAAAS,WACzDF,UAAA,CAAY,IAAA/B,gBAAA,CAAqB+B,SAArB,CAAgCP,IAAAtB,cAAhC,CAH6D,KAWrEgC,OAAU,EAX2D,CAWxDC,OAAU,EAX8C,CAYrEC,MAAQ,CAZ6D,CAahE9C,GAAK,CAAd,KAAiB+C,IAAjB,CARIJ,UAAJnC,CACgB,IAAAuB,gBAAA,CAAqB,IAArB,CAA2BG,IAA3B,CADhB1B,CAIgB,IAAAA,UAAA,EAIhB,CAA0CR,EAA1C,CAA+C+C,IAAA7E,OAA/C,CAAmE8B,EAAA,EAAnE,CACQiB,UAKJ,CALS8B,IAAA,CAAY/C,EAAZ,CAKT,CAJIiB,UAAA,KAIJ,GAJmBwB,SAInB,GAHIG,MAGJ,CAHaE,KAGb,EAFI7B,UAAA,KAEJ,GAFmByB,SAEnB,GADIG,MACJ,CADaC,KACb,EAAAA,KAAA,EAAS,CAEb,OAAOF,OAAP,EAAiBC,MArBwD,CA6B7EjE;MAAAR,UAAA4E,YAAA,CAA+BC,QAAS,CAACnE,QAAD,CAAWoD,IAAX,CAAiB,CACrD,MAAO,KAAAK,oBAAA,CAAyB,IAAzB,CAA+BzD,QAA/B,CAAyCoD,IAAzC,CAD8C,CASzDtD,OAAAR,UAAA8E,wBAAA,CAA2CC,QAAS,CAACrE,QAAD,CAAWoD,IAAX,CAAiB,CACjEA,IAAA,CAAgB9C,IAAAA,EAAT,GAAA8C,IAAA,CAAqBA,IAArB,CAA4B,EAEnCpD,SAAA,CAAW,IAAA4B,gBAAA,CAAqB5B,QAArB,CADgCM,IAAAA,EAAvBwB,GAAAsB,IAAAtB,cAAAA,CAAmC,CAAA,CAAnCA,CAA2CsB,IAAAtB,cACpD,CACFZ,KAAAA,CAAK,CAAd,KAAK,IAAYoB,GAAK,IAAAZ,UAAA,EAAtB,CAAwCR,IAAxC,CAA6CoB,EAAAlD,OAA7C,CAAwD8B,IAAA,EAAxD,CAA8D,CAC1D,IAAIiB,GAAKG,EAAA,CAAGpB,IAAH,CACT,IAAIiB,EAAA,KAAJ,GAAmBnC,QAAnB,EAA+C,IAA/C,GAA+BmC,EAAA,MAA/B,CACI,MAAO,CAAA,CAH+C,CAK9D,MAAO,CAAA,CAT0D,CAiBrErC,OAAAR,UAAA2D,gBAAA,CAAmCqB,QAAS,CAACvB,WAAD,CAAcK,IAAd,CAAoB,CAC5DA,IAAA,CAAgB9C,IAAAA,EAAT,GAAA8C,IAAA,CAAqBA,IAArB;AAA4B,EAGnC,KAFA,IAAIH,gBAAkB,EAAtB,CAES/B,GAAK,CAFd,CAEiBqD,MADP,IAAA7C,UAAAQ,EACV,CAA8BhB,EAA9B,CAAmCqD,KAAAnF,OAAnC,CAAiD8B,EAAA,EAAjD,CAAuD,CACnD,IAAIiB,GAAKoC,KAAA,CAAMrD,EAAN,CACT,IAAoB,IAApB,GAAIiB,EAAA,MAAJ,CAAA,CAEA,GAAoB7B,IAAAA,EAApB,GAAIyC,WAAJ,EAAiD,IAAjD,GAAiCA,WAAjC,EAAyDA,WAAzD,CAAuEZ,EAAA,MAAvE,CACI,KACAiB,KAAAtB,cAAJ,EAA2B,CAAA,IAAAP,qBAAA,CAA0BY,EAAA,KAA1B,CAA3B,EAEAc,eAAAuB,KAAA,CAAqBrC,EAArB,CANA,CAFmD,CAUvD,MAAOc,gBAdqD,CAsBhEnD,OAAAR,UAAAmF,eAAA,CAAkCC,QAAS,CAAC3B,WAAD,CAAcK,IAAd,CAAoB,CAC3DA,IAAA,CAAgB9C,IAAAA,EAAT,GAAA8C,IAAA,CAAqBA,IAArB,CAA4B,EAC/BH,YAAAA,CAAkB,IAAAA,gBAAA,CAAqBF,WAArB,CAAkCK,IAAlC,CACtB,IAA6B,CAA7B,CAAIH,WAAA7D,OAAJ,CACI,MAAO6D,YAAA,CAAgBA,WAAA7D,OAAhB,CAAyC,CAAzC,CAAA,KAGP;KAAU4B,MAAJ,CAAU,sCAAV,CAAN,CAPuD,CAe/DlB,OAAAR,UAAAgE,cAAA,CAAiCqB,QAAS,CAAC3E,QAAD,CAAW,CACjDA,QAAA,CAAW,IAAA4B,gBAAA,CAAqB5B,QAArB,CAA+B,CAAA,CAA/B,CACX,OAAO,KAAA+B,aAAA,CAAkB/B,QAAlB,CAAA,MAF0C,CAUrDF,OAAAR,UAAAsF,gBAAA,CAAmCC,QAAS,CAAC9B,WAAD,CAAc/C,QAAd,CAAwB,CAChEA,QAAA,CAAW,IAAA4B,gBAAA,CAAqB5B,QAArB,CAA+B,CAAA,CAA/B,CACX,OAAI,KAAAsD,cAAA,CAAmBtD,QAAnB,CAAJ,GAAqC+C,WAArC,CACW,CAAA,CADX,CAIW,CAAA,CANqD,CAcpEjD,OAAAR,UAAAwF,UAAA,CAA6BC,QAAS,CAAC/E,QAAD,CAAW,CAC7CA,QAAA,CAAW,IAAA4B,gBAAA,CAAqB5B,QAArB,CACX,OAAO,KAAA+B,aAAA,CAAkB/B,QAAlB,CAAA,UAFsC,CASjDF,OAAAR,UAAA0F,SAAA;AAA4BC,QAAS,CAACjF,QAAD,CAAW,CAC5CA,QAAA,CAAW,IAAA4B,gBAAA,CAAqB5B,QAArB,CACX,OAAO,KAAA+B,aAAA,CAAkB/B,QAAlB,CAAA,SAFqC,CAQhDF,OAAAR,UAAA4F,QAAA,CAA2BC,QAAS,EAAG,CACnC,MAAO,KAAAjF,aAAA,QAD4B,CAOvCJ,OAAAR,UAAAoC,UAAA,CAA6B0D,QAAS,EAAG,CACrC,MAAO,KAAAlF,aAAA,UAD8B,CAOzCJ,OAAAR,UAAA+F,eAAA,CAAkCC,QAAS,EAAG,CAC1C,MAAO,KAAApF,aAAA,eADmC,CAO9CJ,OAAAR,UAAAU,SAAA,CAA4BuF,QAAS,EAAG,CACpC,MAAO,KAAAnF,UAD6B,CAOxCN,OAAAR,UAAAkG,QAAA,CAA2BC,QAAS,EAAG,CACnC,MAAO,KAAAvF,aAAA,QAD4B,CAOvCJ,OAAAR,UAAA8C,UAAA,CAA6BsD,QAAS,EAAG,CACrC,MAAO9F,SAAAmB,OAAA,MAAA,CAAyB,IAAAyE,QAAA,EAAzB,CAAP;AAAmD,IAAAtF,aAAA,KADd,CAOzCJ,OAAAR,UAAAqG,UAAA,CAA6BC,QAAS,EAAG,CACrC,MAAO,KAAA1F,aAAA,UAD8B,CAGzC,OAAOJ,OAhY6B,CAAZ,EAkY5BnB,QAAAkH,QAAA,CAAkB/F,MArZ2F;",
"sources":["node_modules/ethereumjs-common/dist/index.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$ethereumjs_common$dist$index\"] = function(global,require,module,exports) {\n\"use strict\";\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar chains_1 = require(\"./chains\");\nvar hardforks_1 = require(\"./hardforks\");\n/**\n * Common class to access chain and hardfork parameters\n */\nvar Common = /** @class */ (function () {\n    /**\n     * @constructor\n     * @param chain String ('mainnet') or Number (1) chain\n     * @param hardfork String identifier ('byzantium') for hardfork (optional)\n     * @param supportedHardforks Limit parameter returns to the given hardforks (optional)\n     */\n    function Common(chain, hardfork, supportedHardforks) {\n        this._chainParams = this.setChain(chain);\n        this._hardfork = null;\n        this._supportedHardforks = supportedHardforks === undefined ? [] : supportedHardforks;\n        if (hardfork) {\n            this.setHardfork(hardfork);\n        }\n    }\n    /**\n     * Creates a Common object for a custom chain, based on a standard one. It uses all the [[Chain]]\n     * params from [[baseChain]] except the ones overridden in [[customChainParams]].\n     *\n     * @param baseChain The name (`mainnet`) or id (`1`) of a standard chain used to base the custom\n     * chain params on.\n     * @param customChainParams The custom parameters of the chain.\n     * @param hardfork String identifier ('byzantium') for hardfork (optional)\n     * @param supportedHardforks Limit parameter returns to the given hardforks (optional)\n     */\n    Common.forCustomChain = function (baseChain, customChainParams, hardfork, supportedHardforks) {\n        var standardChainParams = Common._getChainParams(baseChain);\n        return new Common(__assign({}, standardChainParams, customChainParams), hardfork, supportedHardforks);\n    };\n    Common._getChainParams = function (chain) {\n        if (typeof chain === 'number') {\n            if (chains_1.chains['names'][chain]) {\n                return chains_1.chains[chains_1.chains['names'][chain]];\n            }\n            throw new Error(\"Chain with ID \" + chain + \" not supported\");\n        }\n        if (chains_1.chains[chain]) {\n            return chains_1.chains[chain];\n        }\n        throw new Error(\"Chain with name \" + chain + \" not supported\");\n    };\n    /**\n     * Sets the chain\n     * @param chain String ('mainnet') or Number (1) chain\n     *     representation. Or, a Dictionary of chain parameters for a private network.\n     * @returns The dictionary with parameters set as chain\n     */\n    Common.prototype.setChain = function (chain) {\n        if (typeof chain === 'number' || typeof chain === 'string') {\n            this._chainParams = Common._getChainParams(chain);\n        }\n        else if (typeof chain === 'object') {\n            var required = ['networkId', 'genesis', 'hardforks', 'bootstrapNodes'];\n            for (var _i = 0, required_1 = required; _i < required_1.length; _i++) {\n                var param = required_1[_i];\n                if (chain[param] === undefined) {\n                    throw new Error(\"Missing required chain parameter: \" + param);\n                }\n            }\n            this._chainParams = chain;\n        }\n        else {\n            throw new Error('Wrong input format');\n        }\n        return this._chainParams;\n    };\n    /**\n     * Sets the hardfork to get params for\n     * @param hardfork String identifier ('byzantium')\n     */\n    Common.prototype.setHardfork = function (hardfork) {\n        if (!this._isSupportedHardfork(hardfork)) {\n            throw new Error(\"Hardfork \" + hardfork + \" not set as supported in supportedHardforks\");\n        }\n        var changed = false;\n        for (var _i = 0, hardforkChanges_1 = hardforks_1.hardforks; _i < hardforkChanges_1.length; _i++) {\n            var hfChanges = hardforkChanges_1[_i];\n            if (hfChanges[0] === hardfork) {\n                this._hardfork = hardfork;\n                changed = true;\n            }\n        }\n        if (!changed) {\n            throw new Error(\"Hardfork with name \" + hardfork + \" not supported\");\n        }\n    };\n    /**\n     * Internal helper function to choose between hardfork set and hardfork provided as param\n     * @param hardfork Hardfork given to function as a parameter\n     * @returns Hardfork chosen to be used\n     */\n    Common.prototype._chooseHardfork = function (hardfork, onlySupported) {\n        onlySupported = onlySupported === undefined ? true : onlySupported;\n        if (!hardfork) {\n            if (!this._hardfork) {\n                throw new Error('Method called with neither a hardfork set nor provided by param');\n            }\n            else {\n                hardfork = this._hardfork;\n            }\n        }\n        else if (onlySupported && !this._isSupportedHardfork(hardfork)) {\n            throw new Error(\"Hardfork \" + hardfork + \" not set as supported in supportedHardforks\");\n        }\n        return hardfork;\n    };\n    /**\n     * Internal helper function, returns the params for the given hardfork for the chain set\n     * @param hardfork Hardfork name\n     * @returns Dictionary with hardfork params\n     */\n    Common.prototype._getHardfork = function (hardfork) {\n        var hfs = this.hardforks();\n        for (var _i = 0, hfs_1 = hfs; _i < hfs_1.length; _i++) {\n            var hf = hfs_1[_i];\n            if (hf['name'] === hardfork)\n                return hf;\n        }\n        throw new Error(\"Hardfork \" + hardfork + \" not defined for chain \" + this.chainName());\n    };\n    /**\n     * Internal helper function to check if a hardfork is set to be supported by the library\n     * @param hardfork Hardfork name\n     * @returns True if hardfork is supported\n     */\n    Common.prototype._isSupportedHardfork = function (hardfork) {\n        if (this._supportedHardforks.length > 0) {\n            for (var _i = 0, _a = this._supportedHardforks; _i < _a.length; _i++) {\n                var supportedHf = _a[_i];\n                if (hardfork === supportedHf)\n                    return true;\n            }\n        }\n        else {\n            return true;\n        }\n        return false;\n    };\n    /**\n     * Returns the parameter corresponding to a hardfork\n     * @param topic Parameter topic ('gasConfig', 'gasPrices', 'vm', 'pow', 'casper', 'sharding')\n     * @param name Parameter name (e.g. 'minGasLimit' for 'gasConfig' topic)\n     * @param hardfork Hardfork name, optional if hardfork set\n     */\n    Common.prototype.param = function (topic, name, hardfork) {\n        hardfork = this._chooseHardfork(hardfork);\n        var value;\n        for (var _i = 0, hardforkChanges_2 = hardforks_1.hardforks; _i < hardforkChanges_2.length; _i++) {\n            var hfChanges = hardforkChanges_2[_i];\n            if (!hfChanges[1][topic]) {\n                throw new Error(\"Topic \" + topic + \" not defined\");\n            }\n            if (hfChanges[1][topic][name] !== undefined) {\n                value = hfChanges[1][topic][name].v;\n            }\n            if (hfChanges[0] === hardfork)\n                break;\n        }\n        if (value === undefined) {\n            throw new Error(topic + \" value for \" + name + \" not found\");\n        }\n        return value;\n    };\n    /**\n     * Returns a parameter for the hardfork active on block number\n     * @param topic Parameter topic\n     * @param name Parameter name\n     * @param blockNumber Block number\n     */\n    Common.prototype.paramByBlock = function (topic, name, blockNumber) {\n        var activeHfs = this.activeHardforks(blockNumber);\n        var hardfork = activeHfs[activeHfs.length - 1]['name'];\n        return this.param(topic, name, hardfork);\n    };\n    /**\n     * Checks if set or provided hardfork is active on block number\n     * @param hardfork Hardfork name or null (for HF set)\n     * @param blockNumber\n     * @param opts Hardfork options (onlyActive unused)\n     * @returns True if HF is active on block number\n     */\n    Common.prototype.hardforkIsActiveOnBlock = function (hardfork, blockNumber, opts) {\n        opts = opts !== undefined ? opts : {};\n        var onlySupported = opts.onlySupported === undefined ? false : opts.onlySupported;\n        hardfork = this._chooseHardfork(hardfork, onlySupported);\n        var hfBlock = this.hardforkBlock(hardfork);\n        if (hfBlock !== null && blockNumber >= hfBlock)\n            return true;\n        return false;\n    };\n    /**\n     * Alias to hardforkIsActiveOnBlock when hardfork is set\n     * @param blockNumber\n     * @param opts Hardfork options (onlyActive unused)\n     * @returns True if HF is active on block number\n     */\n    Common.prototype.activeOnBlock = function (blockNumber, opts) {\n        return this.hardforkIsActiveOnBlock(null, blockNumber, opts);\n    };\n    /**\n     * Sequence based check if given or set HF1 is greater than or equal HF2\n     * @param hardfork1 Hardfork name or null (if set)\n     * @param hardfork2 Hardfork name\n     * @param opts Hardfork options\n     * @returns True if HF1 gte HF2\n     */\n    Common.prototype.hardforkGteHardfork = function (hardfork1, hardfork2, opts) {\n        opts = opts !== undefined ? opts : {};\n        var onlyActive = opts.onlyActive === undefined ? false : opts.onlyActive;\n        hardfork1 = this._chooseHardfork(hardfork1, opts.onlySupported);\n        var hardforks;\n        if (onlyActive) {\n            hardforks = this.activeHardforks(null, opts);\n        }\n        else {\n            hardforks = this.hardforks();\n        }\n        var posHf1 = -1, posHf2 = -1;\n        var index = 0;\n        for (var _i = 0, hardforks_2 = hardforks; _i < hardforks_2.length; _i++) {\n            var hf = hardforks_2[_i];\n            if (hf['name'] === hardfork1)\n                posHf1 = index;\n            if (hf['name'] === hardfork2)\n                posHf2 = index;\n            index += 1;\n        }\n        return posHf1 >= posHf2;\n    };\n    /**\n     * Alias to hardforkGteHardfork when hardfork is set\n     * @param hardfork Hardfork name\n     * @param opts Hardfork options\n     * @returns True if hardfork set is greater than hardfork provided\n     */\n    Common.prototype.gteHardfork = function (hardfork, opts) {\n        return this.hardforkGteHardfork(null, hardfork, opts);\n    };\n    /**\n     * Checks if given or set hardfork is active on the chain\n     * @param hardfork Hardfork name, optional if HF set\n     * @param opts Hardfork options (onlyActive unused)\n     * @returns True if hardfork is active on the chain\n     */\n    Common.prototype.hardforkIsActiveOnChain = function (hardfork, opts) {\n        opts = opts !== undefined ? opts : {};\n        var onlySupported = opts.onlySupported === undefined ? false : opts.onlySupported;\n        hardfork = this._chooseHardfork(hardfork, onlySupported);\n        for (var _i = 0, _a = this.hardforks(); _i < _a.length; _i++) {\n            var hf = _a[_i];\n            if (hf['name'] === hardfork && hf['block'] !== null)\n                return true;\n        }\n        return false;\n    };\n    /**\n     * Returns the active hardfork switches for the current chain\n     * @param blockNumber up to block if provided, otherwise for the whole chain\n     * @param opts Hardfork options (onlyActive unused)\n     * @return Array with hardfork arrays\n     */\n    Common.prototype.activeHardforks = function (blockNumber, opts) {\n        opts = opts !== undefined ? opts : {};\n        var activeHardforks = [];\n        var hfs = this.hardforks();\n        for (var _i = 0, hfs_2 = hfs; _i < hfs_2.length; _i++) {\n            var hf = hfs_2[_i];\n            if (hf['block'] === null)\n                continue;\n            if (blockNumber !== undefined && blockNumber !== null && blockNumber < hf['block'])\n                break;\n            if (opts.onlySupported && !this._isSupportedHardfork(hf['name']))\n                continue;\n            activeHardforks.push(hf);\n        }\n        return activeHardforks;\n    };\n    /**\n     * Returns the latest active hardfork name for chain or block or throws if unavailable\n     * @param blockNumber up to block if provided, otherwise for the whole chain\n     * @param opts Hardfork options (onlyActive unused)\n     * @return Hardfork name\n     */\n    Common.prototype.activeHardfork = function (blockNumber, opts) {\n        opts = opts !== undefined ? opts : {};\n        var activeHardforks = this.activeHardforks(blockNumber, opts);\n        if (activeHardforks.length > 0) {\n            return activeHardforks[activeHardforks.length - 1]['name'];\n        }\n        else {\n            throw new Error(\"No (supported) active hardfork found\");\n        }\n    };\n    /**\n     * Returns the hardfork change block for hardfork provided or set\n     * @param hardfork Hardfork name, optional if HF set\n     * @returns Block number\n     */\n    Common.prototype.hardforkBlock = function (hardfork) {\n        hardfork = this._chooseHardfork(hardfork, false);\n        return this._getHardfork(hardfork)['block'];\n    };\n    /**\n     * True if block number provided is the hardfork (given or set) change block of the current chain\n     * @param blockNumber Number of the block to check\n     * @param hardfork Hardfork name, optional if HF set\n     * @returns True if blockNumber is HF block\n     */\n    Common.prototype.isHardforkBlock = function (blockNumber, hardfork) {\n        hardfork = this._chooseHardfork(hardfork, false);\n        if (this.hardforkBlock(hardfork) === blockNumber) {\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    /**\n     * Provide the consensus type for the hardfork set or provided as param\n     * @param hardfork Hardfork name, optional if hardfork set\n     * @returns Consensus type (e.g. 'pow', 'poa')\n     */\n    Common.prototype.consensus = function (hardfork) {\n        hardfork = this._chooseHardfork(hardfork);\n        return this._getHardfork(hardfork)['consensus'];\n    };\n    /**\n     * Provide the finality type for the hardfork set or provided as param\n     * @param {String} hardfork Hardfork name, optional if hardfork set\n     * @returns {String} Finality type (e.g. 'pos', null of no finality)\n     */\n    Common.prototype.finality = function (hardfork) {\n        hardfork = this._chooseHardfork(hardfork);\n        return this._getHardfork(hardfork)['finality'];\n    };\n    /**\n     * Returns the Genesis parameters of current chain\n     * @returns Genesis dictionary\n     */\n    Common.prototype.genesis = function () {\n        return this._chainParams['genesis'];\n    };\n    /**\n     * Returns the hardforks for current chain\n     * @returns {Array} Array with arrays of hardforks\n     */\n    Common.prototype.hardforks = function () {\n        return this._chainParams['hardforks'];\n    };\n    /**\n     * Returns bootstrap nodes for the current chain\n     * @returns {Dictionary} Dict with bootstrap nodes\n     */\n    Common.prototype.bootstrapNodes = function () {\n        return this._chainParams['bootstrapNodes'];\n    };\n    /**\n     * Returns the hardfork set\n     * @returns Hardfork name\n     */\n    Common.prototype.hardfork = function () {\n        return this._hardfork;\n    };\n    /**\n     * Returns the Id of current chain\n     * @returns chain Id\n     */\n    Common.prototype.chainId = function () {\n        return this._chainParams['chainId'];\n    };\n    /**\n     * Returns the name of current chain\n     * @returns chain name (lower case)\n     */\n    Common.prototype.chainName = function () {\n        return chains_1.chains['names'][this.chainId()] || this._chainParams['name'];\n    };\n    /**\n     * Returns the Id of current network\n     * @returns network Id\n     */\n    Common.prototype.networkId = function () {\n        return this._chainParams['networkId'];\n    };\n    return Common;\n}());\nexports.default = Common;\n//# sourceMappingURL=index.js.map\n};"],
"names":["shadow$provide","global","require","module","exports","__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","defineProperty","value","chains_1","hardforks_1","Common","chain","hardfork","supportedHardforks","_chainParams","setChain","_hardfork","_supportedHardforks","undefined","setHardfork","forCustomChain","Common.forCustomChain","baseChain","customChainParams","standardChainParams","_getChainParams","Common._getChainParams","chains","Error","Common.prototype.setChain","_i","required_1","required","param","Common.prototype.setHardfork","_isSupportedHardfork","changed","hardforkChanges_1","hardforks","hfChanges","_chooseHardfork","Common.prototype._chooseHardfork","onlySupported","_getHardfork","Common.prototype._getHardfork","hfs_1","hfs","hf","chainName","Common.prototype._isSupportedHardfork","_a","supportedHf","Common.prototype.param","topic","name","hardforkChanges_2","v","paramByBlock","Common.prototype.paramByBlock","blockNumber","activeHfs","activeHardforks","hardforkIsActiveOnBlock","Common.prototype.hardforkIsActiveOnBlock","opts","hfBlock","hardforkBlock","activeOnBlock","Common.prototype.activeOnBlock","hardforkGteHardfork","Common.prototype.hardforkGteHardfork","hardfork1","hardfork2","onlyActive","posHf1","posHf2","index","hardforks_2","gteHardfork","Common.prototype.gteHardfork","hardforkIsActiveOnChain","Common.prototype.hardforkIsActiveOnChain","Common.prototype.activeHardforks","hfs_2","push","activeHardfork","Common.prototype.activeHardfork","Common.prototype.hardforkBlock","isHardforkBlock","Common.prototype.isHardforkBlock","consensus","Common.prototype.consensus","finality","Common.prototype.finality","genesis","Common.prototype.genesis","Common.prototype.hardforks","bootstrapNodes","Common.prototype.bootstrapNodes","Common.prototype.hardfork","chainId","Common.prototype.chainId","Common.prototype.chainName","networkId","Common.prototype.networkId","default"]
}
