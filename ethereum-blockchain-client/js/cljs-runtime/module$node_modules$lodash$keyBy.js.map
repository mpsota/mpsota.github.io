{
"version":3,
"file":"module$node_modules$lodash$keyBy.js",
"lineCount":1,
"mappings":"AAAAA,cAAA,iCAAA,CAAqD,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAAA,IACzFC,gBAAkBH,OAAA,CAAQ,6CAAR,CA+BlBI,OAAAA,CA9BmBJ,OAAAK,CAAQ,8CAARA,CA8BX,CAAiB,QAAQ,CAACC,MAAD,CAASC,KAAT,CAAgBC,GAAhB,CAAqB,CACxDL,eAAA,CAAgBG,MAAhB,CAAwBE,GAAxB,CAA6BD,KAA7B,CADwD,CAA9C,CAIZN,OAAAC,QAAA,CAAiBE,MApC4E;",
"sources":["node_modules/lodash/keyBy.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$lodash$keyBy\"] = function(global,require,module,exports) {\nvar baseAssignValue = require('./_baseAssignValue'),\n    createAggregator = require('./_createAggregator');\n\n/**\n * Creates an object composed of keys generated from the results of running\n * each element of `collection` thru `iteratee`. The corresponding value of\n * each key is the last element responsible for generating the key. The\n * iteratee is invoked with one argument: (value).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [iteratee=_.identity] The iteratee to transform keys.\n * @returns {Object} Returns the composed aggregate object.\n * @example\n *\n * var array = [\n *   { 'dir': 'left', 'code': 97 },\n *   { 'dir': 'right', 'code': 100 }\n * ];\n *\n * _.keyBy(array, function(o) {\n *   return String.fromCharCode(o.code);\n * });\n * // => { 'a': { 'dir': 'left', 'code': 97 }, 'd': { 'dir': 'right', 'code': 100 } }\n *\n * _.keyBy(array, 'dir');\n * // => { 'left': { 'dir': 'left', 'code': 97 }, 'right': { 'dir': 'right', 'code': 100 } }\n */\nvar keyBy = createAggregator(function(result, value, key) {\n  baseAssignValue(result, key, value);\n});\n\nmodule.exports = keyBy;\n\n};"],
"names":["shadow$provide","global","require","module","exports","baseAssignValue","keyBy","createAggregator","result","value","key"]
}
