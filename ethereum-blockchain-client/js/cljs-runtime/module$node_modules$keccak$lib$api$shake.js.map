{
"version":3,
"file":"module$node_modules$keccak$lib$api$shake.js",
"lineCount":4,
"mappings":"AAAAA,cAAA,yCAAA,CAA6D,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAErG,IAAMC,OAASH,OAAA,CAAQ,uCAAR,CAAAG,OAAf,CACMC,UAAYJ,OAAA,CAAQ,6CAAR,CAAAI,UADlB,CAEMC,SAAWL,OAAA,CAAQ,+CAAR,CAEjBC,OAAAC,QAAA,CAAiBI,QAAS,CAACC,WAAD,CAAc,CACtCC,QAASA,MAAM,CAACC,IAAD,CAAOC,QAAP,CAAiBC,eAAjB,CAAkCC,OAAlC,CAA2C,CACxDR,SAAAS,KAAA,CAAe,IAAf,CAAqBD,OAArB,CAEA,KAAAE,MAAA,CAAaL,IACb,KAAAM,UAAA,CAAiBL,QACjB,KAAAM,iBAAA,CAAwBL,eACxB;IAAAM,SAAA,CAAgBL,OAEhB,KAAAM,OAAA,CAAc,IAAIX,WAClB,KAAAW,OAAAC,WAAA,CAAuBV,IAAvB,CAA6BC,QAA7B,CACA,KAAAU,WAAA,CAAkB,CAAA,CAVsC,CAa1Df,QAAA,CAASG,KAAT,CAAgBJ,SAAhB,CAEAI,MAAAa,UAAAC,WAAA,CAA6BC,QAAS,CAACC,KAAD,CAAQC,QAAR,CAAkBC,QAAlB,CAA4B,CAChE,IAAIC,MAAQ,IACZ,IAAI,CACF,IAAAC,OAAA,CAAYJ,KAAZ,CAAmBC,QAAnB,CADE,CAEF,MAAOI,GAAP,CAAY,CACZF,KAAA,CAAQE,GADI,CAIdH,QAAA,CAASC,KAAT,CARgE,CAWlEnB,MAAAa,UAAAS,OAAA,CAAyBC,QAAS,EAAG,EAErCvB,MAAAa,UAAAW,MAAA,CAAwBC,QAAS,CAACC,IAAD,CAAO,CACtC,IAAAC,KAAA,CAAU,IAAAC,QAAA,CAAaF,IAAb,CAAV,CADsC,CAIxC1B,MAAAa,UAAAO,OAAA,CAAyBS,QAAS,CAACC,IAAD,CAAOb,QAAP,CAAiB,CACjD,GAAI,CAACtB,MAAAoC,SAAA,CAAgBD,IAAhB,CAAL,EAA8C,QAA9C,GAA8B,MAAOA,KAArC,CAAwD,KAAM,KAAIE,SAAJ,CAAc,mCAAd,CAAN;AACxD,GAAI,IAAApB,WAAJ,CAAqB,KAAUqB,MAAJ,CAAU,wBAAV,CAAN,CAChBtC,MAAAoC,SAAA,CAAgBD,IAAhB,CAAL,GAA4BA,IAA5B,CAAmCnC,MAAAuC,KAAA,CAAYJ,IAAZ,CAAkBb,QAAlB,CAAnC,CAEA,KAAAP,OAAAyB,OAAA,CAAmBL,IAAnB,CAEA,OAAO,KAP0C,CAUnD9B,MAAAa,UAAAe,QAAA,CAA0BQ,QAAS,CAACC,cAAD,CAAiBpB,QAAjB,CAA2B,CACvD,IAAAL,WAAL,GACE,IAAAA,WACA,CADkB,CAAA,CAClB,CAAA,IAAAF,OAAA4B,kBAAA,CAA8B,IAAA9B,iBAA9B,CAFF,CAKIsB,eAAAA,CAAO,IAAApB,OAAAkB,QAAA,CAAoBS,cAApB,CACME,KAAAA,EAAjB,GAAItB,QAAJ,GAA4Ba,cAA5B,CAAmCA,cAAAU,SAAA,CAAcvB,QAAd,CAAnC,CAEA,OAAOa,eATqD,CAY9D9B,MAAAa,UAAA4B,YAAA,CAA8BC,QAAS,EAAG,CACxC,IAAAhC,OAAAC,WAAA,CAAuB,IAAAL,MAAvB;AAAmC,IAAAC,UAAnC,CACA,OAAO,KAFiC,CAK1CP,MAAAa,UAAA8B,OAAA,CAAyBC,QAAS,EAAG,CACnC,IAAMC,MAAQ,IAAI7C,KAAJ,CAAU,IAAAM,MAAV,CAAsB,IAAAC,UAAtB,CAAsC,IAAAC,iBAAtC,CAA6D,IAAAC,SAA7D,CACd,KAAAC,OAAAoC,KAAA,CAAiBD,KAAAnC,OAAjB,CACAmC,MAAAjC,WAAA,CAAmB,IAAAA,WAEnB,OAAOiC,MAL4B,CAQrC,OAAO7C,MApE+B,CAN6D;",
"sources":["node_modules/keccak/lib/api/shake.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$keccak$lib$api$shake\"] = function(global,require,module,exports) {\n'use strict'\nconst Buffer = require('safe-buffer').Buffer\nconst Transform = require('stream').Transform\nconst inherits = require('inherits')\n\nmodule.exports = function (KeccakState) {\n  function Shake (rate, capacity, delimitedSuffix, options) {\n    Transform.call(this, options)\n\n    this._rate = rate\n    this._capacity = capacity\n    this._delimitedSuffix = delimitedSuffix\n    this._options = options\n\n    this._state = new KeccakState()\n    this._state.initialize(rate, capacity)\n    this._finalized = false\n  }\n\n  inherits(Shake, Transform)\n\n  Shake.prototype._transform = function (chunk, encoding, callback) {\n    let error = null\n    try {\n      this.update(chunk, encoding)\n    } catch (err) {\n      error = err\n    }\n\n    callback(error)\n  }\n\n  Shake.prototype._flush = function () {}\n\n  Shake.prototype._read = function (size) {\n    this.push(this.squeeze(size))\n  }\n\n  Shake.prototype.update = function (data, encoding) {\n    if (!Buffer.isBuffer(data) && typeof data !== 'string') throw new TypeError('Data must be a string or a buffer')\n    if (this._finalized) throw new Error('Squeeze already called')\n    if (!Buffer.isBuffer(data)) data = Buffer.from(data, encoding)\n\n    this._state.absorb(data)\n\n    return this\n  }\n\n  Shake.prototype.squeeze = function (dataByteLength, encoding) {\n    if (!this._finalized) {\n      this._finalized = true\n      this._state.absorbLastFewBits(this._delimitedSuffix)\n    }\n\n    let data = this._state.squeeze(dataByteLength)\n    if (encoding !== undefined) data = data.toString(encoding)\n\n    return data\n  }\n\n  Shake.prototype._resetState = function () {\n    this._state.initialize(this._rate, this._capacity)\n    return this\n  }\n\n  Shake.prototype._clone = function () {\n    const clone = new Shake(this._rate, this._capacity, this._delimitedSuffix, this._options)\n    this._state.copy(clone._state)\n    clone._finalized = this._finalized\n\n    return clone\n  }\n\n  return Shake\n}\n\n};"],
"names":["shadow$provide","global","require","module","exports","Buffer","Transform","inherits","module.exports","KeccakState","Shake","rate","capacity","delimitedSuffix","options","call","_rate","_capacity","_delimitedSuffix","_options","_state","initialize","_finalized","prototype","_transform","Shake.prototype._transform","chunk","encoding","callback","error","update","err","_flush","Shake.prototype._flush","_read","Shake.prototype._read","size","push","squeeze","Shake.prototype.update","data","isBuffer","TypeError","Error","from","absorb","Shake.prototype.squeeze","dataByteLength","absorbLastFewBits","undefined","toString","_resetState","Shake.prototype._resetState","_clone","Shake.prototype._clone","clone","copy"]
}
