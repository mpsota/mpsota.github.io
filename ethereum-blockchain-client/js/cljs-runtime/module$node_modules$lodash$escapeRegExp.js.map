{
"version":3,
"file":"module$node_modules$lodash$escapeRegExp.js",
"lineCount":1,
"mappings":"AAAAA,cAAA,wCAAA,CAA4D,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CACpG,IAAIC,SAAWH,OAAA,CAAQ,qCAAR,CAAf,CAMII,aAAe,qBANnB,CAOIC,gBAAkBC,MAAA,CAAOF,YAAAG,OAAP,CAwBtBN,OAAAC,QAAA,CAPAM,QAAqB,CAACC,MAAD,CAAS,CAE5B,MAAO,CADPA,MACO,CADEN,QAAA,CAASM,MAAT,CACF,GAAWJ,eAAAK,KAAA,CAAqBD,MAArB,CAAX,CACHA,MAAAE,QAAA,CAAeP,YAAf,CAA6B,SAA7B,CADG,CAEHK,MAJwB,CAzBsE;",
"sources":["node_modules/lodash/escapeRegExp.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$lodash$escapeRegExp\"] = function(global,require,module,exports) {\nvar toString = require('./toString');\n\n/**\n * Used to match `RegExp`\n * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n */\nvar reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g,\n    reHasRegExpChar = RegExp(reRegExpChar.source);\n\n/**\n * Escapes the `RegExp` special characters \"^\", \"$\", \"\\\", \".\", \"*\", \"+\",\n * \"?\", \"(\", \")\", \"[\", \"]\", \"{\", \"}\", and \"|\" in `string`.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category String\n * @param {string} [string=''] The string to escape.\n * @returns {string} Returns the escaped string.\n * @example\n *\n * _.escapeRegExp('[lodash](https://lodash.com/)');\n * // => '\\[lodash\\]\\(https://lodash\\.com/\\)'\n */\nfunction escapeRegExp(string) {\n  string = toString(string);\n  return (string && reHasRegExpChar.test(string))\n    ? string.replace(reRegExpChar, '\\\\$&')\n    : string;\n}\n\nmodule.exports = escapeRegExp;\n\n};"],
"names":["shadow$provide","global","require","module","exports","toString","reRegExpChar","reHasRegExpChar","RegExp","source","escapeRegExp","string","test","replace"]
}
