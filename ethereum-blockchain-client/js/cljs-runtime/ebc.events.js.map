{"version":3,"sources":["ebc/events.cljs"],"mappings":"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","names":["re_frame.core.reg_event_db","p__28179","vec__28180","cljs.core.nth","db","_","G__28183","re-frame.core/dispatch","ebc.web3-client/connect","re_frame.core.reg_event_fx","p__28184","p__28185","map__28186","cljs.core/PROTOCOL_SENTINEL","cljs.core.apply","cljs.core/hash-map","cljs.core.get","vec__28187","web3","cljs.core.assoc","G__28193","G__28194","re-frame.core/reg-fx","p__28195","vec__28196","p1__28192#","p2__28191#","G__28199","p__28200","vec__28201","accounts","p__28204","vec__28205","form-name","field-name","new-value","js/console.log","cljs.core/assoc-in","p__28208","vec__28209","p__28214","p__28215","map__28217","vec__28218","G__28222","cljs.core/Keyword","js/Error","G__28223","G__28224","p__28225","vec__28226","sender","receiver","amount","ebc.web3-client/send-transaction","G__28232","G__28233","p__28234","vec__28235","gas-limit","p1__28229#","p1__28230#","p1__28231#","transaction-hash-fn","G__28238","error-fn","G__28239","receipt-fn","ebc.contract/approve-dai-sablier-contract","G__28243","G__28244","p__28245","vec__28246","deposit","time-since-now","duration","p1__28240#","p1__28241#","p1__28242#","G__28249","G__28250","ebc.contract/create-sablier-stream","p__28251","p__28252","map__28253","vec__28254","account","G__28258","G__28259","value","e","v","G__28260","G__28261","ebc.contract/get-dai-balance","balance","G__28262","G__28263","G__28264","ebc.web3-client/set-default-address","p__28265","vec__28266","p__28270","vec__28271","error","p1__28269#","cljs.core.update_in","cljs.core.conj"],"sourcesContent":["(ns ebc.events\n  (:require [ebc.db :as db]\n            [re-frame.core :as rf]\n            [ebc.web3-client :as client]\n            [ebc.contract :as contract]))\n\n(rf/reg-event-db\n  :connect-web3\n  (fn [db [_ _]]\n      (rf/dispatch [:set-web3 (client/connect)])\n      db))\n\n(rf/reg-event-fx\n  :set-web3\n  (fn [{:keys [db]} [_ web3]]\n      {:get-accounts [web3]\n       :db (assoc db :web3 web3)}))\n\n(rf/reg-fx\n  :get-accounts\n  (fn [[web3]]\n      (.getAccounts (.-eth web3) #(rf/dispatch [:set-accounts %2]))))\n\n(rf/reg-event-db\n  :set-accounts\n  (fn [db [_ accounts]]\n      (assoc db :accounts accounts)))\n\n(rf/reg-event-db\n  :set-field-value\n  (fn [db [_ form-name field-name new-value]]\n      (js/console.log new-value)\n      (assoc-in db [form-name field-name] new-value)))\n\n(rf/reg-event-db\n  :set-db-value\n  (fn [db [_ field-name new-value]]\n      (assoc-in db [field-name] new-value)))\n\n(rf/reg-event-fx\n  :send-form\n  (fn [{:keys [db]} [_ form-name]]\n      (case form-name\n            :send-directly-form {:send-money [(:web3 db)\n                                              (:current-account db)\n                                              (:receiver db)\n                                              (:amount (get db form-name))]\n                                 :db db}\n            :approve-sablier-contract-form {:approve-sablier-contract [(:web3 db)\n                                                                       (:current-account db)\n                                                                       (:allowed-amount (get db form-name))\n                                                                       (:gas-limit db)]}\n            :create-sablier-stream-form {:create-sablier-stream [(:web3 db)\n                                                                 (:current-account db)\n                                                                 (:receiver db)\n                                                                 (:deposit (get db form-name))\n                                                                 (:time-since-now (get db form-name))\n                                                                 (:duration (get db form-name))]})))\n\n(rf/reg-fx\n  :send-money\n  (fn [[web3 sender receiver amount]]\n      (js/console.log \"Send\" web3 receiver amount)\n      (client/send-transaction web3 sender receiver amount)))\n\n(rf/reg-fx\n  :approve-sablier-contract\n  (fn [[web3 sender amount gas-limit]]\n      (js/console.log \"Approve sablier contract\" web3 sender amount gas-limit)\n      (let [transaction-hash-fn #(rf/dispatch [:set-db-value :approve-transaction-hash %1])\n            error-fn #(rf/dispatch [:add-error %1])\n            receipt-fn #(js/console.log \"Receipt:\" %1)]\n      (contract/approve-dai-sablier-contract web3 sender amount gas-limit transaction-hash-fn\n                                             receipt-fn error-fn)\n\n      )))\n\n(rf/reg-fx\n  :create-sablier-stream\n  (fn [[web3 sender receiver deposit time-since-now duration]]\n      (js/console.log web3 sender receiver deposit time-since-now duration)\n      (let [transaction-hash-fn #(rf/dispatch [:set-db-value :stream-transaction-hash %1])\n            error-fn #(rf/dispatch [:add-error %1])\n            receipt-fn #(js/console.log \"Receipt:\" %1)]\n           (contract/create-sablier-stream web3 sender receiver deposit time-since-now duration transaction-hash-fn receipt-fn error-fn))))\n\n(rf/reg-event-fx\n  :set-current-account\n  (fn [{:keys [db]} [_ account]]\n      {:set-default-address {:web3 (:web3 db)\n                             :account account}\n       :get-balance-fx {:web3 (:web3 db)\n                        :account account}\n       :db (assoc db :current-account account)}))\n\n(rf/reg-fx\n  :get-balance-fx\n  (fn [value] ;; add spec\n      ;; set dai balance\n      (let [error-fn (fn [e v]\n                         (js/console.log e)\n                         (when e\n                               (rf/dispatch [:add-error e]))\n                         (when v\n                               (rf/dispatch [:set-db-value :dai-balance v])))]\n           (contract/get-dai-balance (:web3 value) (:account value) (:gas-limit value) error-fn))\n      ;; set eth balance\n      (.getBalance (.-eth (:web3 value)) (:account value)\n                   (fn [e v]\n                       (let [balance (.fromWei (.-utils (:web3 value)) v)]\n                            (rf/dispatch [:get-balance balance])\n                            (js/console.log balance))))))\n\n(rf/reg-fx\n  :set-default-address\n  (fn [value]\n      (client/set-default-address (:web3 value) (:account value))))\n\n(rf/reg-event-db\n  :get-balance\n  (fn [db [_ balance]]\n      (assoc db :balance balance)))\n\n(rf/reg-event-db\n  :add-error\n  (fn [db [_ error]]\n      (js/console.log \"Add error:\" error)\n      (update-in db [:errors] #(conj %1 error))))"]}