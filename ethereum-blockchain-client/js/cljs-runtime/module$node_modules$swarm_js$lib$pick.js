shadow$provide.module$node_modules$swarm_js$lib$pick=function(global,require,module,exports){global=function(type){return function(){return new Promise(function(resolve,reject){var fileLoader=function(e$jscomp$0){var directory={},totalFiles=e$jscomp$0.target.files.length,loadedFiles=0;[].map.call(e$jscomp$0.target.files,function(file){var reader=new FileReader;reader.onload=function(e){e=new Uint8Array(e.target.result);if("directory"===type){var path=file.webkitRelativePath;directory[path.slice(path.indexOf("/")+
1)]={type:"text/plain",data:e};++loadedFiles===totalFiles&&resolve(directory)}else"file"===type?resolve({type:mimetype.lookup(file.webkitRelativePath),data:e}):resolve(e)};reader.readAsArrayBuffer(file)})};"directory"===type?(reject=document.createElement("input"),reject.addEventListener("change",fileLoader),reject.type="file",reject.webkitdirectory=!0,reject.mozdirectory=!0,reject.msdirectory=!0,reject.odirectory=!0,reject.directory=!0):(reject=document.createElement("input"),reject.addEventListener("change",
fileLoader),reject.type="file");fileLoader=document.createEvent("MouseEvents");fileLoader.initEvent("click",!0,!1);reject.dispatchEvent(fileLoader)})}};module.exports={data:global("data"),file:global("file"),directory:global("directory")}}
//# sourceMappingURL=module$node_modules$swarm_js$lib$pick.js.map
