{
"version":3,
"file":"module$node_modules$lodash$_baseSome.js",
"lineCount":1,
"mappings":"AAAAA,cAAA,qCAAA,CAAyD,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CACjG,IAAIC,SAAWH,OAAA,CAAQ,sCAAR,CAqBfC,OAAAC,QAAA,CAVAE,QAAiB,CAACC,mBAAD,CAAaC,SAAb,CAAwB,CACvC,IAAIC,MAEJJ,SAAA,CAASE,mBAAT,CAAqB,QAAQ,CAACG,KAAD,CAAQC,KAAR,CAAeJ,UAAf,CAA2B,CACtDE,MAAA,CAASD,SAAA,CAAUE,KAAV,CAAiBC,KAAjB,CAAwBJ,UAAxB,CACT,OAAO,CAACE,MAF8C,CAAxD,CAIA,OAAO,CAAC,CAACA,MAP8B,CAZwD;",
"sources":["node_modules/lodash/_baseSome.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$lodash$_baseSome\"] = function(global,require,module,exports) {\nvar baseEach = require('./_baseEach');\n\n/**\n * The base implementation of `_.some` without support for iteratee shorthands.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {boolean} Returns `true` if any element passes the predicate check,\n *  else `false`.\n */\nfunction baseSome(collection, predicate) {\n  var result;\n\n  baseEach(collection, function(value, index, collection) {\n    result = predicate(value, index, collection);\n    return !result;\n  });\n  return !!result;\n}\n\nmodule.exports = baseSome;\n\n};"],
"names":["shadow$provide","global","require","module","exports","baseEach","baseSome","collection","predicate","result","value","index"]
}
