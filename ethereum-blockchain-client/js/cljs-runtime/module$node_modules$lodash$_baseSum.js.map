{
"version":3,
"file":"module$node_modules$lodash$_baseSum.js",
"lineCount":1,
"mappings":"AAAAA,cAAA,oCAAA,CAAwD,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAwBhGD,MAAAC,QAAA,CAdAC,QAAgB,CAACC,KAAD,CAAQC,QAAR,CAAkB,CAKhC,IALgC,IAC5BC,MAD4B,CAE5BC,MAAS,EAFmB,CAG5BC,OAASJ,KAAAI,OAEb,CAAO,EAAED,KAAT,CAAiBC,MAAjB,CAAA,CAAyB,CACvB,IAAIC,QAAUJ,QAAA,CAASD,KAAA,CAAMG,KAAN,CAAT,CACEG,KAAAA,EAAhB,GAAID,OAAJ,GACEH,MADF,CACsBI,IAAAA,EAAX,GAAAJ,MAAA,CAAuBG,OAAvB,CAAkCH,MAAlC,CAA2CG,OADtD,CAFuB,CAMzB,MAAOH,OAXyB,CAV8D;",
"sources":["node_modules/lodash/_baseSum.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$lodash$_baseSum\"] = function(global,require,module,exports) {\n/**\n * The base implementation of `_.sum` and `_.sumBy` without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} array The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {number} Returns the sum.\n */\nfunction baseSum(array, iteratee) {\n  var result,\n      index = -1,\n      length = array.length;\n\n  while (++index < length) {\n    var current = iteratee(array[index]);\n    if (current !== undefined) {\n      result = result === undefined ? current : (result + current);\n    }\n  }\n  return result;\n}\n\nmodule.exports = baseSum;\n\n};"],
"names":["shadow$provide","global","require","module","exports","baseSum","array","iteratee","result","index","length","current","undefined"]
}
