shadow$provide.module$node_modules$web3_core_method$src$index=function(global,require,module,exports){var _=require("module$node_modules$underscore$underscore"),errors=require("module$node_modules$web3_core_helpers$src$index").errors,formatters=require("module$node_modules$web3_core_helpers$src$index").formatters,utils=require("module$node_modules$web3_utils$src$index"),promiEvent=require("module$node_modules$web3_core_promievent$src$index"),Subscriptions=require("module$node_modules$web3_core_subscriptions$src$index").subscriptions,
Method=function(options){if(!options.call||!options.name)throw Error('When creating a method you need to provide at least the "name" and "call" property.');this.name=options.name;this.call=options.call;this.params=options.params||0;this.inputFormatter=options.inputFormatter;this.outputFormatter=options.outputFormatter;this.transformPayload=options.transformPayload;this.extraFormatters=options.extraFormatters;this.abiCoder=options.abiCoder;this.requestManager=options.requestManager;this.accounts=options.accounts;
this.defaultBlock=options.defaultBlock||"latest";this.defaultAccount=options.defaultAccount||null;this.transactionBlockTimeout=options.transactionBlockTimeout||50;this.transactionConfirmationBlocks=options.transactionConfirmationBlocks||24;this.transactionPollingTimeout=options.transactionPollingTimeout||750;this.defaultCommon=options.defaultCommon;this.defaultChain=options.defaultChain;this.defaultHardfork=options.defaultHardfork;this.handleRevert=options.handleRevert};Method.prototype.setRequestManager=
function(requestManager,accounts){this.requestManager=requestManager;accounts&&(this.accounts=accounts)};Method.prototype.createFunction=function(requestManager,accounts){var func=this.buildCall();func.call=this.call;this.setRequestManager(requestManager||this.requestManager,accounts||this.accounts);return func};Method.prototype.attachToObject=function(obj){var func=this.buildCall();func.call=this.call;var name=this.name.split(".");1<name.length?(obj[name[0]]=obj[name[0]]||{},obj[name[0]][name[1]]=
func):obj[name[0]]=func};Method.prototype.getCall=function(args){return _.isFunction(this.call)?this.call(args):this.call};Method.prototype.extractCallback=function(args){if(_.isFunction(args[args.length-1]))return args.pop()};Method.prototype.validateArgs=function(args){if(args.length!==this.params)throw errors.InvalidNumberOfParams(args.length,this.params,this.name);};Method.prototype.formatInput=function(args){var _this=this;return this.inputFormatter?this.inputFormatter.map(function(formatter,
index){return formatter?formatter.call(_this,args[index]):args[index]}):args};Method.prototype.formatOutput=function(result){var _this=this;return _.isArray(result)?result.map(function(res){return _this.outputFormatter&&res?_this.outputFormatter(res):res}):this.outputFormatter&&result?this.outputFormatter(result):result};Method.prototype.toPayload=function(args){var call=this.getCall(args),callback=this.extractCallback(args);args=this.formatInput(args);this.validateArgs(args);call={method:call,params:args,
callback:callback};this.transformPayload&&(call=this.transformPayload(call));return call};Method.prototype._confirmTransaction=function(defer,result,payload){var method=this,promiseResolved=!1,canUnsubscribe=!0,timeoutCount=0,confirmationCount=0,intervalId=null,lastBlock=null,gasProvided=_.isObject(payload.params[0])&&payload.params[0].gas?payload.params[0].gas:null,isContractDeployment=_.isObject(payload.params[0])&&payload.params[0].data&&payload.params[0].from&&!payload.params[0].to,hasBytecode=
isContractDeployment&&2<payload.params[0].data.length,_ethereumCalls=[new Method({name:"getBlockByNumber",call:"eth_getBlockByNumber",params:2,inputFormatter:[formatters.inputBlockNumberFormatter,function(val){return!!val}],outputFormatter:formatters.outputBlockFormatter}),new Method({name:"getTransactionReceipt",call:"eth_getTransactionReceipt",params:1,inputFormatter:[null],outputFormatter:formatters.outputTransactionReceiptFormatter}),new Method({name:"getCode",call:"eth_getCode",params:2,inputFormatter:[formatters.inputAddressFormatter,
formatters.inputDefaultBlockNumberFormatter]}),new Subscriptions({name:"subscribe",type:"eth",subscriptions:{newBlockHeaders:{subscriptionName:"newHeads",params:0,outputFormatter:formatters.outputBlockFormatter}}})],_ethereumCall={};_.each(_ethereumCalls,function(mthd){mthd.attachToObject(_ethereumCall);mthd.requestManager=method.requestManager});var checkConfirmation=function(existingReceipt,isPolling,err$jscomp$0,blockHeader,sub){if(err$jscomp$0)sub.unsubscribe(),promiseResolved=!0,utils._fireError({message:"Failed to subscribe to new newBlockHeaders to confirm the transaction receipts.",
data:err$jscomp$0},defer.eventEmitter,defer.reject);else return sub||(sub={unsubscribe:function(){clearInterval(intervalId)}}),(existingReceipt?promiEvent.resolve(existingReceipt):_ethereumCall.getTransactionReceipt(result)).catch(function(err){sub.unsubscribe();promiseResolved=!0;utils._fireError({message:"Failed to check for transaction receipt:",data:err},defer.eventEmitter,defer.reject)}).then(function(receipt){var block;return $jscomp.asyncExecutePromiseGeneratorProgram(function($jscomp$generator$context){switch($jscomp$generator$context.nextAddress){case 1:if(!receipt||
!receipt.blockHash)throw Error("Receipt missing or blockHash null");method.extraFormatters&&method.extraFormatters.receiptFormatter&&(receipt=method.extraFormatters.receiptFormatter(receipt));if(!(0<defer.eventEmitter.listeners("confirmation").length)){$jscomp$generator$context.jumpTo(2);break}if(void 0!==existingReceipt&&0===confirmationCount){$jscomp$generator$context.jumpTo(3);break}if(!isPolling){defer.eventEmitter.emit("confirmation",confirmationCount,receipt);$jscomp$generator$context.jumpTo(3);
break}return lastBlock?$jscomp$generator$context.yield(_ethereumCall.getBlockByNumber(lastBlock.number+1),8):$jscomp$generator$context.yield(_ethereumCall.getBlockByNumber(receipt.blockNumber),7);case 7:lastBlock=block=$jscomp$generator$context.yieldResult;defer.eventEmitter.emit("confirmation",confirmationCount,receipt);$jscomp$generator$context.jumpTo(3);break;case 8:if(block=$jscomp$generator$context.yieldResult)lastBlock=block,defer.eventEmitter.emit("confirmation",confirmationCount,receipt);
case 3:(isPolling&&block||!isPolling)&&confirmationCount++,canUnsubscribe=!1,confirmationCount===method.transactionConfirmationBlocks+1&&(sub.unsubscribe(),defer.eventEmitter.removeAllListeners());case 2:return $jscomp$generator$context.return(receipt)}})}).then(function(receipt){var code,deploymentSuccess;return $jscomp.asyncExecutePromiseGeneratorProgram(function($jscomp$generator$context){switch($jscomp$generator$context.nextAddress){case 1:if(!isContractDeployment||promiseResolved){$jscomp$generator$context.jumpTo(2);
break}if(!receipt.contractAddress)return canUnsubscribe&&(sub.unsubscribe(),promiseResolved=!0),utils._fireError(errors.NoContractAddressFoundError(receipt),defer.eventEmitter,defer.reject,null,receipt),$jscomp$generator$context.return();$jscomp$generator$context.setCatchFinallyBlocks(3);return $jscomp$generator$context.yield(_ethereumCall.getCode(receipt.contractAddress),5);case 5:code=$jscomp$generator$context.yieldResult;$jscomp$generator$context.leaveTryBlock(4);break;case 3:$jscomp$generator$context.enterCatchBlock();
case 4:if(!code)return $jscomp$generator$context.return();(deploymentSuccess=!0===receipt.status&&hasBytecode)||2<code.length?(defer.eventEmitter.emit("receipt",receipt),method.extraFormatters&&method.extraFormatters.contractDeployFormatter?defer.resolve(method.extraFormatters.contractDeployFormatter(receipt)):defer.resolve(receipt),canUnsubscribe&&defer.eventEmitter.removeAllListeners()):utils._fireError(errors.ContractCodeNotStoredError(receipt),defer.eventEmitter,defer.reject,null,receipt);canUnsubscribe&&
sub.unsubscribe();promiseResolved=!0;case 2:return $jscomp$generator$context.return(receipt)}})}).then(function(receipt){var revertMessage;return $jscomp.asyncExecutePromiseGeneratorProgram(function($jscomp$generator$context){switch($jscomp$generator$context.nextAddress){case 1:if(isContractDeployment||promiseResolved){$jscomp$generator$context.jumpTo(0);break}if(!(receipt.outOfGas||gasProvided&&gasProvided===receipt.gasUsed||!0!==receipt.status&&"0x1"!==receipt.status&&"undefined"!==typeof receipt.status)){defer.eventEmitter.emit("receipt",
receipt);defer.resolve(receipt);canUnsubscribe&&defer.eventEmitter.removeAllListeners();$jscomp$generator$context.jumpTo(3);break}JSON.stringify(receipt,null,2);if(!1!==receipt.status&&"0x0"!==receipt.status){utils._fireError(errors.TransactionOutOfGasError(receipt),defer.eventEmitter,defer.reject,null,receipt);$jscomp$generator$context.jumpTo(3);break}$jscomp$generator$context.setCatchFinallyBlocks(5);revertMessage=null;if(!method.handleRevert||"eth_sendTransaction"!==method.call)throw!1;return $jscomp$generator$context.yield(method.getRevertReason(payload.params[0],
receipt.blockNumber),8);case 8:if(revertMessage=$jscomp$generator$context.yieldResult)utils._fireError(errors.TransactionRevertInstructionError(revertMessage.reason,revertMessage.signature,receipt),defer.eventEmitter,defer.reject,null,receipt);else throw!1;case 7:$jscomp$generator$context.leaveTryBlock(3);break;case 5:$jscomp$generator$context.enterCatchBlock(),utils._fireError(errors.TransactionRevertedWithoutReasonError(receipt),defer.eventEmitter,defer.reject,null,receipt);case 3:canUnsubscribe&&
sub.unsubscribe(),promiseResolved=!0,$jscomp$generator$context.jumpToEnd()}})}).catch(function(){timeoutCount++;isPolling?timeoutCount-1>=method.transactionPollingTimeout&&(sub.unsubscribe(),promiseResolved=!0,utils._fireError(errors.TransactionError("Transaction was not mined within "+method.transactionPollingTimeout+" seconds, please make sure your transaction was properly sent. Be aware that it might still be mined!"),defer.eventEmitter,defer.reject)):timeoutCount-1>=method.transactionBlockTimeout&&
(sub.unsubscribe(),promiseResolved=!0,utils._fireError(errors.TransactionError("Transaction was not mined within "+method.transactionBlockTimeout+" blocks, please make sure your transaction was properly sent. Be aware that it might still be mined!"),defer.eventEmitter,defer.reject))})},startWatching=function(existingReceipt){_.isFunction(this.requestManager.provider.on)?_ethereumCall.subscribe("newBlockHeaders",checkConfirmation.bind(null,existingReceipt,!1)):intervalId=setInterval(checkConfirmation.bind(null,
existingReceipt,!0),1E3)}.bind(this);_ethereumCall.getTransactionReceipt(result).then(function(receipt){receipt&&receipt.blockHash?(0<defer.eventEmitter.listeners("confirmation").length&&startWatching(receipt),checkConfirmation(receipt,!1)):promiseResolved||startWatching()}).catch(function(){promiseResolved||startWatching()})};var getWallet=function(from,accounts){return _.isNumber(from)?accounts.wallet[from]:_.isObject(from)&&from.address&&from.privateKey?from:accounts.wallet[from.toLowerCase()]};
Method.prototype.buildCall=function(){var method$jscomp$0=this,isSendTx="eth_sendTransaction"===method$jscomp$0.call||"eth_sendRawTransaction"===method$jscomp$0.call,isCall="eth_call"===method$jscomp$0.call,send=function(){var defer=promiEvent(!isSendTx),payload$jscomp$0=method$jscomp$0.toPayload(Array.prototype.slice.call(arguments)),sendTxCallback=function(err,result){if(method$jscomp$0.handleRevert&&!err&&isCall&&method$jscomp$0.isRevertReasonString(result)&&method$jscomp$0.abiCoder)err=method$jscomp$0.abiCoder.decodeParameter("string",
"0x"+result.substring(10)),utils._fireError(errors.RevertInstructionError(err,"Error(String)"),defer.eventEmitter,defer.reject,payload$jscomp$0.callback,{reason:err,signature:"Error(String)"});else{try{result=method$jscomp$0.formatOutput(result)}catch(e){err=e}result instanceof Error&&(err=result);if(err)return err.error&&(err=err.error),utils._fireError(err,defer.eventEmitter,defer.reject,payload$jscomp$0.callback);payload$jscomp$0.callback&&payload$jscomp$0.callback(null,result);isSendTx?(defer.eventEmitter.emit("transactionHash",
result),method$jscomp$0._confirmTransaction(defer,result,payload$jscomp$0)):err||defer.resolve(result)}},sendSignedTx=function(sign){sign=_.extend({},payload$jscomp$0,{method:"eth_sendRawTransaction",params:[sign.rawTransaction]});method$jscomp$0.requestManager.send(sign,sendTxCallback)},sendRequest=function(payload,method){if(method&&method.accounts&&method.accounts.wallet&&method.accounts.wallet.length){var wallet;if("eth_sendTransaction"===payload.method){var tx=payload.params[0];if((wallet=getWallet(_.isObject(tx)?
tx.from:null,method.accounts))&&wallet.privateKey)return payload=_.omit(tx,"from"),method.defaultChain&&!payload.chain&&(payload.chain=method.defaultChain),method.defaultHardfork&&!payload.hardfork&&(payload.hardfork=method.defaultHardfork),method.defaultCommon&&!payload.common&&(payload.common=method.defaultCommon),method.accounts.signTransaction(payload,wallet.privateKey).then(sendSignedTx).catch(function(err){_.isFunction(defer.eventEmitter.listeners)&&defer.eventEmitter.listeners("error").length&&
(defer.eventEmitter.emit("error",err),defer.eventEmitter.removeAllListeners(),defer.eventEmitter.catch(function(){}));defer.reject(err)})}else if("eth_sign"===payload.method&&(tx=payload.params[1],(wallet=getWallet(payload.params[0],method.accounts))&&wallet.privateKey)){method=method.accounts.sign(tx,wallet.privateKey);payload.callback&&payload.callback(null,method.signature);defer.resolve(method.signature);return}}return method.requestManager.send(payload,sendTxCallback)};isSendTx&&_.isObject(payload$jscomp$0.params[0])&&
"undefined"===typeof payload$jscomp$0.params[0].gasPrice?(new Method({name:"getGasPrice",call:"eth_gasPrice",params:0})).createFunction(method$jscomp$0.requestManager)(function(err,gasPrice){gasPrice&&(payload$jscomp$0.params[0].gasPrice=gasPrice);sendRequest(payload$jscomp$0,method$jscomp$0)}):sendRequest(payload$jscomp$0,method$jscomp$0);return defer.eventEmitter};send.method=method$jscomp$0;send.request=this.request.bind(this);return send};Method.prototype.getRevertReason=function(txOptions,blockNumber){var self=
this;return new Promise(function(resolve,reject){(new Method({name:"call",call:"eth_call",params:2,abiCoder:self.abiCoder,handleRevert:!0})).createFunction(self.requestManager)(txOptions,utils.numberToHex(blockNumber)).then(function(){resolve(!1)}).catch(function(error){error.reason?resolve({reason:error.reason,signature:error.signature}):reject(error)})})};Method.prototype.isRevertReasonString=function(data){return _.isString(data)&&4===(data.length-2)/2%32&&"0x08c379a0"===data.substring(0,10)};
Method.prototype.request=function(){var payload=this.toPayload(Array.prototype.slice.call(arguments));payload.format=this.formatOutput.bind(this);return payload};module.exports=Method}
//# sourceMappingURL=module$node_modules$web3_core_method$src$index.js.map
