shadow$provide.module$node_modules$web3_eth_ens$src$contracts$Registry=function(global,require,module,exports){function Registry(ens){var self=this;this.ens=ens;this.contract=ens.checkNetwork().then(function(address){address=new Contract(REGISTRY_ABI,address);address.setProvider(self.ens.eth.currentProvider);return address})}var _=require("module$node_modules$underscore$underscore"),Contract=require("module$node_modules$web3_eth_contract$src$index"),namehash=require("module$node_modules$eth_ens_namehash$index"),
PromiEvent=require("module$node_modules$web3_core_promievent$src$index"),REGISTRY_ABI=require("module$node_modules$web3_eth_ens$src$ressources$ABI$Registry"),RESOLVER_ABI=require("module$node_modules$web3_eth_ens$src$ressources$ABI$Resolver");Registry.prototype.owner=function(name,callback){var promiEvent=new PromiEvent(!0);this.contract.then(function(contract){contract.methods.owner(namehash.hash(name)).call().then(function(receipt){promiEvent.resolve(receipt);_.isFunction(callback)&&callback(receipt)}).catch(function(error){promiEvent.reject(error);
_.isFunction(callback)&&callback(error)})});return promiEvent.eventEmitter};Registry.prototype.resolver=function(name){var self=this;return this.contract.then(function(contract){return contract.methods.resolver(namehash.hash(name)).call()}).then(function(address){address=new Contract(RESOLVER_ABI,address);address.setProvider(self.ens.eth.currentProvider);return address})};module.exports=Registry}
//# sourceMappingURL=module$node_modules$web3_eth_ens$src$contracts$Registry.js.map
