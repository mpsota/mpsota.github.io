shadow$provide.module$node_modules$react_popper$lib$cjs$Reference=function(global,require,module,exports){global=require("module$node_modules$$babel$runtime$helpers$interopRequireWildcard");module=require("module$node_modules$$babel$runtime$helpers$interopRequireDefault");Object.defineProperty(exports,"__esModule",{value:!0});exports.default=function(props){return React.createElement(_Manager.ManagerReferenceNodeSetterContext.Consumer,null,function(setReferenceNode){return React.createElement(InnerReference,
(0,_extends2.default)({setReferenceNode:setReferenceNode},props))})};var _extends2=module(require("module$node_modules$$babel$runtime$helpers$extends")),_assertThisInitialized2=module(require("module$node_modules$$babel$runtime$helpers$assertThisInitialized")),_inheritsLoose2=module(require("module$node_modules$$babel$runtime$helpers$inheritsLoose")),_defineProperty2=module(require("module$node_modules$$babel$runtime$helpers$defineProperty")),React=global(require("module$node_modules$react$index")),
_warning=module(require("module$node_modules$warning$warning")),_Manager=require("module$node_modules$react_popper$lib$cjs$Manager"),_utils=require("module$node_modules$react_popper$lib$cjs$utils"),InnerReference=function(_React$Component){function InnerReference(){for(var _this,_len=arguments.length,args=Array(_len),_key=0;_key<_len;_key++)args[_key]=arguments[_key];_this=_React$Component.call.apply(_React$Component,[this].concat(args))||this;(0,_defineProperty2.default)((0,_assertThisInitialized2.default)(_this),
"refHandler",function(node){(0,_utils.setRef)(_this.props.innerRef,node);(0,_utils.safeInvoke)(_this.props.setReferenceNode,node)});return _this}(0,_inheritsLoose2.default)(InnerReference,_React$Component);var _proto=InnerReference.prototype;_proto.componentWillUnmount=function(){(0,_utils.setRef)(this.props.innerRef,null)};_proto.render=function(){(0,_warning.default)(!!this.props.setReferenceNode,"`Reference` should not be used outside of a `Manager` component.");return(0,_utils.unwrapArray)(this.props.children)({ref:this.refHandler})};
return InnerReference}(React.Component)}
//# sourceMappingURL=module$node_modules$react_popper$lib$cjs$Reference.js.map
