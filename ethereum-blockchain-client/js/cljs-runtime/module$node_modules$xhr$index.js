shadow$provide.module$node_modules$xhr$index=function(global,require,module,exports){function isEmpty(obj){for(var i in obj)if(obj.hasOwnProperty(i))return!1;return!0}function initParams(uri,options,callback){var params=uri;isFunction(options)?(callback=options,"string"===typeof uri&&(params={uri:uri})):params=xtend(options,{uri:uri});params.callback=callback;return params}function createXHR(uri,options,callback){options=initParams(uri,options,callback);return _createXHR(options)}function _createXHR(options){function errorFunc(evt){clearTimeout(timeoutTimer);
evt instanceof Error||(evt=Error(""+(evt||"Unknown XMLHttpRequest Error")));evt.statusCode=0;var response=failureResponse;called||(called=!0,options.callback(evt,response,void 0))}function loadFunc(){if(!aborted){clearTimeout(timeoutTimer);var status=options.useXDR&&void 0===xhr.status?200:1223===xhr.status?204:xhr.status;var response=failureResponse,err=null;if(0!==status){if(xhr.response)response=xhr.response;else if(!(response=xhr.responseText))a:{try{if("document"===xhr.responseType){response=
xhr.responseXML;break a}var firefoxBugTakenEffect=xhr.responseXML&&"parsererror"===xhr.responseXML.documentElement.nodeName;if(""===xhr.responseType&&!firefoxBugTakenEffect){response=xhr.responseXML;break a}}catch(e){}response=null}if(isJson)try{response=JSON.parse(response)}catch(e){}response={body:response,statusCode:status,method:method,headers:{},url:uri,rawRequest:xhr};xhr.getAllResponseHeaders&&(response.headers=parseHeaders(xhr.getAllResponseHeaders()))}else err=Error("Internal XMLHttpRequest Error");
status=response.body;called||(called=!0,options.callback(err,response,status))}}if("undefined"===typeof options.callback)throw Error("callback argument missing");var called=!1,xhr=options.xhr||null;xhr||(xhr=options.cors||options.useXDR?new createXHR.XDomainRequest:new createXHR.XMLHttpRequest);var key,aborted,uri=xhr.url=options.uri||options.url,method=xhr.method=options.method||"GET",body=options.body||options.data,headers=xhr.headers=options.headers||{},sync=!!options.sync,isJson=!1,timeoutTimer,
failureResponse={body:void 0,headers:{},statusCode:0,method:method,url:uri,rawRequest:xhr};"json"in options&&!1!==options.json&&(isJson=!0,headers.accept||headers.Accept||(headers.Accept="application/json"),"GET"!==method&&"HEAD"!==method&&(headers["content-type"]||headers["Content-Type"]||(headers["Content-Type"]="application/json"),body=JSON.stringify(!0===options.json?body:options.json)));xhr.onreadystatechange=function(){4===xhr.readyState&&setTimeout(loadFunc,0)};xhr.onload=loadFunc;xhr.onerror=
errorFunc;xhr.onprogress=function(){};xhr.onabort=function(){aborted=!0};xhr.ontimeout=errorFunc;xhr.open(method,uri,!sync,options.username,options.password);sync||(xhr.withCredentials=!!options.withCredentials);!sync&&0<options.timeout&&(timeoutTimer=setTimeout(function(){if(!aborted){aborted=!0;xhr.abort("timeout");var e=Error("XMLHttpRequest timeout");e.code="ETIMEDOUT";errorFunc(e)}},options.timeout));if(xhr.setRequestHeader)for(key in headers)headers.hasOwnProperty(key)&&xhr.setRequestHeader(key,
headers[key]);else if(options.headers&&!isEmpty(options.headers))throw Error("Headers cannot be set on an XDomainRequest object");"responseType"in options&&(xhr.responseType=options.responseType);"beforeSend"in options&&"function"===typeof options.beforeSend&&options.beforeSend(xhr);xhr.send(body||null);return xhr}function noop(){}global=require("module$node_modules$global$window");var isFunction=require("module$node_modules$is_function$index"),parseHeaders=require("module$node_modules$parse_headers$parse_headers"),
xtend=require("module$node_modules$xtend$immutable");module.exports=createXHR;module.exports.default=createXHR;createXHR.XMLHttpRequest=global.XMLHttpRequest||noop;createXHR.XDomainRequest="withCredentials"in new createXHR.XMLHttpRequest?createXHR.XMLHttpRequest:global.XDomainRequest;(function(array,iterator){for(var i=0;i<array.length;i++)iterator(array[i])})("get put post patch head delete".split(" "),function(method){createXHR["delete"===method?"del":method]=function(uri,options,callback){options=
initParams(uri,options,callback);options.method=method.toUpperCase();return _createXHR(options)}})}
//# sourceMappingURL=module$node_modules$xhr$index.js.map
