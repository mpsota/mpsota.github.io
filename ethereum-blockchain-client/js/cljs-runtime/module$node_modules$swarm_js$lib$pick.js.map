{
"version":3,
"file":"module$node_modules$swarm_js$lib$pick.js",
"lineCount":3,
"mappings":"AAAAA,cAAA,sCAAA,CAA0D,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAC9FC,MAAAA,CAASA,QAAe,CAACC,IAAD,CAAO,CACjC,MAAO,SAAS,EAAG,CACjB,MAAO,KAAIC,OAAJ,CAAY,QAAS,CAACC,OAAD,CAAUC,MAAV,CAAkB,CAC5C,IAAIC,WAAaA,QAAmB,CAACC,UAAD,CAAI,CACtC,IAAIC,UAAY,EAAhB,CACIC,WAAaF,UAAAG,OAAAC,MAAAC,OADjB,CAEIC,YAAc,CAClB,GAAAC,IAAAC,KAAA,CAAYR,UAAAG,OAAAC,MAAZ,CAA4B,QAAS,CAACK,IAAD,CAAO,CAC1C,IAAIC,OAAS,IAAIC,UAEjBD,OAAAE,OAAA,CAAgBC,QAAS,CAACb,CAAD,CAAI,CACvBc,CAAAA,CAAO,IAAIC,UAAJ,CAAef,CAAAG,OAAAa,OAAf,CAEX,IAAa,WAAb,GAAIrB,IAAJ,CAA0B,CACxB,IAAIsB,KAAOR,IAAAS,mBACXjB,UAAA,CAAUgB,IAAAE,MAAA,CAAWF,IAAAG,QAAA,CAAa,GAAb,CAAX;AAA+B,CAA/B,CAAV,CAAA,CAA+C,CAC7CzB,KAAM,YADuC,CAE7CmB,KAAMA,CAFuC,CAI3C,GAAER,WAAN,GAAsBJ,UAAtB,EAAkCL,OAAA,CAAQI,SAAR,CANV,CAA1B,IAOoB,MAAb,GAAIN,IAAJ,CAELE,OAAA,CAAQ,CACN,KAAQwB,QAAAC,OAAA,CAFEb,IAAAS,mBAEF,CADF,CAEN,KAAQJ,CAFF,CAAR,CAFK,CAOLjB,OAAA,CAAQiB,CAAR,CAjByB,CAqB7BJ,OAAAa,kBAAA,CAAyBd,IAAzB,CAxB0C,CAA5C,CAJsC,CAkC3B,YAAb,GAAId,IAAJ,EACE6B,MAOA,CAPYC,QAAAC,cAAA,CAAuB,OAAvB,CAOZ,CANAF,MAAAG,iBAAA,CAA2B,QAA3B,CAAqC5B,UAArC,CAMA,CALAyB,MAAA7B,KAKA,CALiB,MAKjB,CAJA6B,MAAAI,gBAIA,CAJ4B,CAAA,CAI5B,CAHAJ,MAAAK,aAGA,CAHyB,CAAA,CAGzB,CAFAL,MAAAM,YAEA,CAFwB,CAAA,CAExB,CADAN,MAAAO,WACA,CADuB,CAAA,CACvB,CAAAP,MAAAvB,UAAA,CAAsB,CAAA,CARxB,GAUEuB,MAEA,CAFYC,QAAAC,cAAA,CAAuB,OAAvB,CAEZ,CADAF,MAAAG,iBAAA,CAA2B,QAA3B;AAAqC5B,UAArC,CACA,CAAAyB,MAAA7B,KAAA,CAAiB,MAZnB,CAgBIqC,WAAAA,CAAaP,QAAAQ,YAAA,CAAqB,aAArB,CACjBD,WAAAE,UAAA,CAAqB,OAArB,CAA8B,CAAA,CAA9B,CAAoC,CAAA,CAApC,CACAV,OAAAW,cAAA,CAAwBH,UAAxB,CArD4C,CAAvC,CADU,CADc,CA4DnCxC,OAAAC,QAAA,CAAiB,CACfqB,KAAMpB,MAAA,CAAO,MAAP,CADS,CAEfe,KAAMf,MAAA,CAAO,MAAP,CAFS,CAGfO,UAAWP,MAAA,CAAO,WAAP,CAHI,CA7DiF;",
"sources":["node_modules/swarm-js/lib/pick.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$swarm_js$lib$pick\"] = function(global,require,module,exports) {\nvar picker = function picker(type) {\n  return function () {\n    return new Promise(function (resolve, reject) {\n      var fileLoader = function fileLoader(e) {\n        var directory = {};\n        var totalFiles = e.target.files.length;\n        var loadedFiles = 0;\n        [].map.call(e.target.files, function (file) {\n          var reader = new FileReader();\n\n          reader.onload = function (e) {\n            var data = new Uint8Array(e.target.result);\n\n            if (type === \"directory\") {\n              var path = file.webkitRelativePath;\n              directory[path.slice(path.indexOf(\"/\") + 1)] = {\n                type: \"text/plain\",\n                data: data\n              };\n              if (++loadedFiles === totalFiles) resolve(directory);\n            } else if (type === \"file\") {\n              var _path = file.webkitRelativePath;\n              resolve({\n                \"type\": mimetype.lookup(_path),\n                \"data\": data\n              });\n            } else {\n              resolve(data);\n            }\n          };\n\n          reader.readAsArrayBuffer(file);\n        });\n      };\n\n      var fileInput;\n\n      if (type === \"directory\") {\n        fileInput = document.createElement(\"input\");\n        fileInput.addEventListener(\"change\", fileLoader);\n        fileInput.type = \"file\";\n        fileInput.webkitdirectory = true;\n        fileInput.mozdirectory = true;\n        fileInput.msdirectory = true;\n        fileInput.odirectory = true;\n        fileInput.directory = true;\n      } else {\n        fileInput = document.createElement(\"input\");\n        fileInput.addEventListener(\"change\", fileLoader);\n        fileInput.type = \"file\";\n      }\n\n      ;\n      var mouseEvent = document.createEvent(\"MouseEvents\");\n      mouseEvent.initEvent(\"click\", true, false);\n      fileInput.dispatchEvent(mouseEvent);\n    });\n  };\n};\n\nmodule.exports = {\n  data: picker(\"data\"),\n  file: picker(\"file\"),\n  directory: picker(\"directory\")\n};\n};"],
"names":["shadow$provide","global","require","module","exports","picker","type","Promise","resolve","reject","fileLoader","e","directory","totalFiles","target","files","length","loadedFiles","map","call","file","reader","FileReader","onload","reader.onload","data","Uint8Array","result","path","webkitRelativePath","slice","indexOf","mimetype","lookup","readAsArrayBuffer","fileInput","document","createElement","addEventListener","webkitdirectory","mozdirectory","msdirectory","odirectory","mouseEvent","createEvent","initEvent","dispatchEvent"]
}
