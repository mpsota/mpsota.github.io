{
"version":3,
"file":"module$node_modules$lodash$startsWith.js",
"lineCount":2,
"mappings":"AAAAA,cAAA,sCAAA,CAA0D,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAAA,IAC9FC,UAAYH,OAAA,CAAQ,uCAAR,CADkF,CAE9FI,aAAeJ,OAAA,CAAQ,0CAAR,CAF+E,CAG9FK,UAAYL,OAAA,CAAQ,sCAAR,CAHkF,CAI9FM,SAAWN,OAAA,CAAQ,qCAAR,CAmCfC,OAAAC,QAAA,CAVAK,QAAmB,CAACC,MAAD,CAASC,MAAT,CAAiBC,QAAjB,CAA2B,CAC5CF,MAAA,CAASF,QAAA,CAASE,MAAT,CACTE,SAAA,CAAuB,IAAZ,EAAAA,QAAA,CACP,CADO,CAEPP,SAAA,CAAUE,SAAA,CAAUK,QAAV,CAAV,CAA+B,CAA/B,CAAkCF,MAAAG,OAAlC,CAEJF,OAAA,CAASL,YAAA,CAAaK,MAAb,CACT;MAAOD,OAAAI,MAAA,CAAaF,QAAb,CAAuBA,QAAvB,CAAkCD,MAAAE,OAAlC,CAAP,EAA2DF,MAPf,CA7BoD;",
"sources":["node_modules/lodash/startsWith.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$lodash$startsWith\"] = function(global,require,module,exports) {\nvar baseClamp = require('./_baseClamp'),\n    baseToString = require('./_baseToString'),\n    toInteger = require('./toInteger'),\n    toString = require('./toString');\n\n/**\n * Checks if `string` starts with the given target string.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category String\n * @param {string} [string=''] The string to inspect.\n * @param {string} [target] The string to search for.\n * @param {number} [position=0] The position to search from.\n * @returns {boolean} Returns `true` if `string` starts with `target`,\n *  else `false`.\n * @example\n *\n * _.startsWith('abc', 'a');\n * // => true\n *\n * _.startsWith('abc', 'b');\n * // => false\n *\n * _.startsWith('abc', 'b', 1);\n * // => true\n */\nfunction startsWith(string, target, position) {\n  string = toString(string);\n  position = position == null\n    ? 0\n    : baseClamp(toInteger(position), 0, string.length);\n\n  target = baseToString(target);\n  return string.slice(position, position + target.length) == target;\n}\n\nmodule.exports = startsWith;\n\n};"],
"names":["shadow$provide","global","require","module","exports","baseClamp","baseToString","toInteger","toString","startsWith","string","target","position","length","slice"]
}
