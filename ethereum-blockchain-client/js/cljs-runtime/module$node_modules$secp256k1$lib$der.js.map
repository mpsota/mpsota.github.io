{
"version":3,
"file":"module$node_modules$secp256k1$lib$der.js",
"lineCount":9,
"mappings":"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",
"sources":["node_modules/secp256k1/lib/der.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$secp256k1$lib$der\"] = function(global,require,module,exports) {\n'use strict'\nvar Buffer = require('safe-buffer').Buffer\nvar bip66 = require('bip66')\n\nvar EC_PRIVKEY_EXPORT_DER_COMPRESSED = Buffer.from([\n  // begin\n  0x30, 0x81, 0xd3, 0x02, 0x01, 0x01, 0x04, 0x20,\n  // private key\n  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\n  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\n  // middle\n  0xa0, 0x81, 0x85, 0x30, 0x81, 0x82, 0x02, 0x01, 0x01, 0x30, 0x2c, 0x06, 0x07, 0x2a, 0x86, 0x48,\n  0xcE, 0x3d, 0x01, 0x01, 0x02, 0x21, 0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,\n  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,\n  0xff, 0xff, 0xfE, 0xff, 0xff, 0xfc, 0x2f, 0x30, 0x06, 0x04, 0x01, 0x00, 0x04, 0x01, 0x07, 0x04,\n  0x21, 0x02, 0x79, 0xbE, 0x66, 0x7E, 0xf9, 0xdc, 0xbb, 0xac, 0x55, 0xa0, 0x62, 0x95, 0xcE, 0x87,\n  0x0b, 0x07, 0x02, 0x9b, 0xfc, 0xdb, 0x2d, 0xcE, 0x28, 0xd9, 0x59, 0xf2, 0x81, 0x5b, 0x16, 0xf8,\n  0x17, 0x98, 0x02, 0x21, 0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,\n  0xff, 0xff, 0xff, 0xff, 0xfE, 0xba, 0xaE, 0xdc, 0xE6, 0xaf, 0x48, 0xa0, 0x3b, 0xbf, 0xd2, 0x5E,\n  0x8c, 0xd0, 0x36, 0x41, 0x41, 0x02, 0x01, 0x01, 0xa1, 0x24, 0x03, 0x22, 0x00,\n  // public key\n  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\n  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\n  0x00\n])\n\nvar EC_PRIVKEY_EXPORT_DER_UNCOMPRESSED = Buffer.from([\n  // begin\n  0x30, 0x82, 0x01, 0x13, 0x02, 0x01, 0x01, 0x04, 0x20,\n  // private key\n  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\n  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\n  // middle\n  0xa0, 0x81, 0xa5, 0x30, 0x81, 0xa2, 0x02, 0x01, 0x01, 0x30, 0x2c, 0x06, 0x07, 0x2a, 0x86, 0x48,\n  0xcE, 0x3d, 0x01, 0x01, 0x02, 0x21, 0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,\n  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,\n  0xff, 0xff, 0xfE, 0xff, 0xff, 0xfc, 0x2f, 0x30, 0x06, 0x04, 0x01, 0x00, 0x04, 0x01, 0x07, 0x04,\n  0x41, 0x04, 0x79, 0xbE, 0x66, 0x7E, 0xf9, 0xdc, 0xbb, 0xac, 0x55, 0xa0, 0x62, 0x95, 0xcE, 0x87,\n  0x0b, 0x07, 0x02, 0x9b, 0xfc, 0xdb, 0x2d, 0xcE, 0x28, 0xd9, 0x59, 0xf2, 0x81, 0x5b, 0x16, 0xf8,\n  0x17, 0x98, 0x48, 0x3a, 0xda, 0x77, 0x26, 0xa3, 0xc4, 0x65, 0x5d, 0xa4, 0xfb, 0xfc, 0x0E, 0x11,\n  0x08, 0xa8, 0xfd, 0x17, 0xb4, 0x48, 0xa6, 0x85, 0x54, 0x19, 0x9c, 0x47, 0xd0, 0x8f, 0xfb, 0x10,\n  0xd4, 0xb8, 0x02, 0x21, 0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,\n  0xff, 0xff, 0xff, 0xff, 0xfE, 0xba, 0xaE, 0xdc, 0xE6, 0xaf, 0x48, 0xa0, 0x3b, 0xbf, 0xd2, 0x5E,\n  0x8c, 0xd0, 0x36, 0x41, 0x41, 0x02, 0x01, 0x01, 0xa1, 0x44, 0x03, 0x42, 0x00,\n  // public key\n  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\n  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\n  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\n  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\n  0x00\n])\n\nexports.privateKeyExport = function (privateKey, publicKey, compressed) {\n  var result = Buffer.from(compressed ? EC_PRIVKEY_EXPORT_DER_COMPRESSED : EC_PRIVKEY_EXPORT_DER_UNCOMPRESSED)\n  privateKey.copy(result, compressed ? 8 : 9)\n  publicKey.copy(result, compressed ? 181 : 214)\n  return result\n}\n\nexports.privateKeyImport = function (privateKey) {\n  var length = privateKey.length\n\n  // sequence header\n  var index = 0\n  if (length < index + 1 || privateKey[index] !== 0x30) return\n  index += 1\n\n  // sequence length constructor\n  if (length < index + 1 || !(privateKey[index] & 0x80)) return\n\n  var lenb = privateKey[index] & 0x7f\n  index += 1\n  if (lenb < 1 || lenb > 2) return\n  if (length < index + lenb) return\n\n  // sequence length\n  var len = privateKey[index + lenb - 1] | (lenb > 1 ? privateKey[index + lenb - 2] << 8 : 0)\n  index += lenb\n  if (length < index + len) return\n\n  // sequence element 0: version number (=1)\n  if (length < index + 3 ||\n      privateKey[index] !== 0x02 ||\n      privateKey[index + 1] !== 0x01 ||\n      privateKey[index + 2] !== 0x01) {\n    return\n  }\n  index += 3\n\n  // sequence element 1: octet string, up to 32 bytes\n  if (length < index + 2 ||\n      privateKey[index] !== 0x04 ||\n      privateKey[index + 1] > 0x20 ||\n      length < index + 2 + privateKey[index + 1]) {\n    return\n  }\n\n  return privateKey.slice(index + 2, index + 2 + privateKey[index + 1])\n}\n\nexports.signatureExport = function (sigObj) {\n  var r = Buffer.concat([Buffer.from([0]), sigObj.r])\n  for (var lenR = 33, posR = 0; lenR > 1 && r[posR] === 0x00 && !(r[posR + 1] & 0x80); --lenR, ++posR);\n\n  var s = Buffer.concat([Buffer.from([0]), sigObj.s])\n  for (var lenS = 33, posS = 0; lenS > 1 && s[posS] === 0x00 && !(s[posS + 1] & 0x80); --lenS, ++posS);\n\n  return bip66.encode(r.slice(posR), s.slice(posS))\n}\n\nexports.signatureImport = function (sig) {\n  var r = Buffer.alloc(32, 0)\n  var s = Buffer.alloc(32, 0)\n\n  try {\n    var sigObj = bip66.decode(sig)\n    if (sigObj.r.length === 33 && sigObj.r[0] === 0x00) sigObj.r = sigObj.r.slice(1)\n    if (sigObj.r.length > 32) throw new Error('R length is too long')\n    if (sigObj.s.length === 33 && sigObj.s[0] === 0x00) sigObj.s = sigObj.s.slice(1)\n    if (sigObj.s.length > 32) throw new Error('S length is too long')\n  } catch (err) {\n    return\n  }\n\n  sigObj.r.copy(r, 32 - sigObj.r.length)\n  sigObj.s.copy(s, 32 - sigObj.s.length)\n\n  return { r: r, s: s }\n}\n\nexports.signatureImportLax = function (sig) {\n  var r = Buffer.alloc(32, 0)\n  var s = Buffer.alloc(32, 0)\n\n  var length = sig.length\n  var index = 0\n\n  // sequence tag byte\n  if (sig[index++] !== 0x30) return\n\n  // sequence length byte\n  var lenbyte = sig[index++]\n  if (lenbyte & 0x80) {\n    index += lenbyte - 0x80\n    if (index > length) return\n  }\n\n  // sequence tag byte for r\n  if (sig[index++] !== 0x02) return\n\n  // length for r\n  var rlen = sig[index++]\n  if (rlen & 0x80) {\n    lenbyte = rlen - 0x80\n    if (index + lenbyte > length) return\n    for (; lenbyte > 0 && sig[index] === 0x00; index += 1, lenbyte -= 1);\n    for (rlen = 0; lenbyte > 0; index += 1, lenbyte -= 1) rlen = (rlen << 8) + sig[index]\n  }\n  if (rlen > length - index) return\n  var rindex = index\n  index += rlen\n\n  // sequence tag byte for s\n  if (sig[index++] !== 0x02) return\n\n  // length for s\n  var slen = sig[index++]\n  if (slen & 0x80) {\n    lenbyte = slen - 0x80\n    if (index + lenbyte > length) return\n    for (; lenbyte > 0 && sig[index] === 0x00; index += 1, lenbyte -= 1);\n    for (slen = 0; lenbyte > 0; index += 1, lenbyte -= 1) slen = (slen << 8) + sig[index]\n  }\n  if (slen > length - index) return\n  var sindex = index\n  index += slen\n\n  // ignore leading zeros in r\n  for (; rlen > 0 && sig[rindex] === 0x00; rlen -= 1, rindex += 1);\n  // copy r value\n  if (rlen > 32) return\n  var rvalue = sig.slice(rindex, rindex + rlen)\n  rvalue.copy(r, 32 - rvalue.length)\n\n  // ignore leading zeros in s\n  for (; slen > 0 && sig[sindex] === 0x00; slen -= 1, sindex += 1);\n  // copy s value\n  if (slen > 32) return\n  var svalue = sig.slice(sindex, sindex + slen)\n  svalue.copy(s, 32 - svalue.length)\n\n  return { r: r, s: s }\n}\n\n};"],
"names":["shadow$provide","global","require","module","exports","Buffer","bip66","EC_PRIVKEY_EXPORT_DER_COMPRESSED","from","EC_PRIVKEY_EXPORT_DER_UNCOMPRESSED","privateKeyExport","exports.privateKeyExport","privateKey","publicKey","compressed","result","copy","privateKeyImport","exports.privateKeyImport","length","index","lenb","len","slice","signatureExport","exports.signatureExport","sigObj","r","concat","lenR","posR","s","lenS","posS","encode","signatureImport","exports.signatureImport","sig","alloc","decode","Error","err","signatureImportLax","exports.signatureImportLax","lenbyte","rlen","rindex","slen","sindex","rvalue","svalue"]
}
