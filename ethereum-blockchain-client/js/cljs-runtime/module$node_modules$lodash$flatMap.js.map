{
"version":3,
"file":"module$node_modules$lodash$flatMap.js",
"lineCount":1,
"mappings":"AAAAA,cAAA,mCAAA,CAAuD,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAAA,IAC3FC,YAAcH,OAAA,CAAQ,yCAAR,CAD6E,CAE3FI,IAAMJ,OAAA,CAAQ,gCAAR,CA2BVC,OAAAC,QAAA,CAJAG,QAAgB,CAACC,UAAD,CAAaC,QAAb,CAAuB,CACrC,MAAOJ,YAAA,CAAYC,GAAA,CAAIE,UAAJ,CAAgBC,QAAhB,CAAZ,CAAuC,CAAvC,CAD8B,CAzBwD;",
"sources":["node_modules/lodash/flatMap.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$lodash$flatMap\"] = function(global,require,module,exports) {\nvar baseFlatten = require('./_baseFlatten'),\n    map = require('./map');\n\n/**\n * Creates a flattened array of values by running each element in `collection`\n * thru `iteratee` and flattening the mapped results. The iteratee is invoked\n * with three arguments: (value, index|key, collection).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n * @returns {Array} Returns the new flattened array.\n * @example\n *\n * function duplicate(n) {\n *   return [n, n];\n * }\n *\n * _.flatMap([1, 2], duplicate);\n * // => [1, 1, 2, 2]\n */\nfunction flatMap(collection, iteratee) {\n  return baseFlatten(map(collection, iteratee), 1);\n}\n\nmodule.exports = flatMap;\n\n};"],
"names":["shadow$provide","global","require","module","exports","baseFlatten","map","flatMap","collection","iteratee"]
}
