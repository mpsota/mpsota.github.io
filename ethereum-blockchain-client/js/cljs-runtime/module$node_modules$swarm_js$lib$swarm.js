shadow$provide.module$node_modules$swarm_js$lib$swarm=function(global,require,module,exports){module.exports=function(_ref){var fs=_ref.fs,files=_ref.files,os=_ref.os,path$jscomp$0=_ref.path,child_process=_ref.child_process,mimetype=_ref.mimetype,defaultArchives=_ref.defaultArchives,request=_ref.request,downloadUrl=_ref.downloadUrl,bytes=_ref.bytes,hash$jscomp$1=_ref.hash,pick=_ref.pick,impureInsert=function(key){return function(val){return function(map){return map[key]=val,map}}},toMap=function(keys){return function(vals){for(var map=
{},i=0,l=keys.length;i<l;++i)map[keys[i]]=vals[i];return map}},merge=function(a){return function(b){var map={},key;for(key in a)map[key]=a[key];for(var _key in b)map[_key]=b[_key];return map}},equals=function(a){return function(b){if(a.length!==b.length)return!1;for(var i=0,l=a.length;i<l;++i)if(a[i]!==b[i])return!1;return!0}},rawUrl=function(swarmUrl){return function(hash){return"".concat(swarmUrl,"/bzzr:/").concat(hash)}},downloadData=function(swarmUrl){return function(hash){return request(rawUrl(swarmUrl)(hash),
{responseType:"arraybuffer"}).then(function(arrayBuffer){arrayBuffer=new Uint8Array(arrayBuffer);if(equals(arrayBuffer)([52,48,52,32,112,97,103,101,32,110,111,116,32,102,111,117,110,100,10]))throw"Error 404.";return arrayBuffer})}},downloadEntries=function(swarmUrl){return function(hash$jscomp$0){return function search(hash){return function(path){return function(routes){var downloadEntry=function(entry){return void 0===entry.path?Promise.resolve():"application/bzz-manifest+json"===entry.contentType?
search(entry.hash)(path+entry.path)(routes):Promise.resolve(impureInsert(path+entry.path)({type:entry.contentType,hash:entry.hash})(routes))};return downloadData(swarmUrl)(hash).then(function(text){return JSON.parse(toString(text)).entries}).then(function(entries){return Promise.all(entries.map(downloadEntry))}).then(function(){return routes})}}}(hash$jscomp$0)("")({})}},downloadRoutes=function(swarmUrl){return function(hash){return downloadEntries(swarmUrl)(hash).then(function(entries){return toMap(Object.keys(entries))(Object.keys(entries).map(function(route){return entries[route].hash}))})}},
downloadDirectory=function(swarmUrl){return function(hash){return downloadEntries(swarmUrl)(hash).then(function(entries){var paths=Object.keys(entries),hashs=paths.map(function(path){return entries[path].hash}),types=paths.map(function(path){return entries[path].type});hashs=hashs.map(downloadData(swarmUrl));var files=function(datas){return datas.map(function(data,i){return{type:types[i],data:data}})};return Promise.all(hashs).then(function(datas){return toMap(paths)(files(datas))})})}},downloadDataToDisk=
function(swarmUrl){return function(hash){return function(filePath){return files.download(rawUrl(swarmUrl)(hash))(filePath)}}},downloadDirectoryToDisk=function(swarmUrl){return function(hash){return function(dirPath){return downloadRoutes(swarmUrl)(hash).then(function(routingTable){var downloads=[],route;for(route in routingTable)if(0<route.length){var filePath=path$jscomp$0.join(dirPath,route);downloads.push(downloadDataToDisk(swarmUrl)(routingTable[route])(filePath))}return Promise.all(downloads).then(function(){return dirPath})})}}},
uploadData=function(swarmUrl){return function(data){return request("".concat(swarmUrl,"/bzzr:/"),{body:"string"===typeof data?fromString(data):data,method:"POST"})}},uploadToManifest=function(swarmUrl){return function(hash){return function(route){return function(file){return function attempt(n){var slashRoute="/"===route[0]?route:"/"+route;slashRoute="".concat(swarmUrl,"/bzz:/").concat(hash).concat(slashRoute);return request(slashRoute,{method:"PUT",headers:{"Content-Type":file.type},body:file.data}).then(function(response){if(-1!==
response.indexOf("error"))throw response;return response}).catch(function(e){return 0<n&&attempt(n-1)})}(3)}}}},uploadFile=function(swarmUrl){return function(file){return uploadDirectory(swarmUrl)({"":file})}},uploadFileFromDisk=function(swarmUrl){return function(filePath){return fs.readFile(filePath).then(function(data){return uploadFile(swarmUrl)({type:mimetype.lookup(filePath),data:data})})}},uploadDirectory=function(swarmUrl){return function(directory){return uploadData(swarmUrl)("{}").then(function(hash$jscomp$0){var uploadRoute=
function(route){return function(hash){return uploadToManifest(swarmUrl)(hash)(route)(directory[route])}};return Object.keys(directory).reduce(function(hash,route){return hash.then(uploadRoute(route))},Promise.resolve(hash$jscomp$0))})}},uploadDataFromDisk=function(swarmUrl){return function(filePath){return fs.readFile(filePath).then(uploadData(swarmUrl))}},uploadDirectoryFromDisk=function(swarmUrl){return function(defaultPath){return function(dirPath){return files.directoryTree(dirPath).then(function(fullPaths){return Promise.all(fullPaths.map(function(path){return fs.readFile(path)})).then(function(datas){var paths=
fullPaths.map(function(path){return path.slice(dirPath.length)}),types=fullPaths.map(function(path){return mimetype.lookup(path)||"text/plain"});return toMap(paths)(datas.map(function(data,i){return{type:types[i],data:data}}))})}).then(function(directory){return merge(defaultPath?{"":directory[defaultPath]}:{})(directory)}).then(uploadDirectory(swarmUrl))}}},_upload=function(swarmUrl){return function(arg){if("data"===arg.pick)return pick.data().then(uploadData(swarmUrl));if("file"===arg.pick)return pick.file().then(uploadFile(swarmUrl));
if("directory"===arg.pick)return pick.directory().then(uploadDirectory(swarmUrl));if(arg.path)switch(arg.kind){case "data":return uploadDataFromDisk(swarmUrl)(arg.path);case "file":return uploadFileFromDisk(swarmUrl)(arg.path);case "directory":return uploadDirectoryFromDisk(swarmUrl)(arg.defaultFile)(arg.path)}else{if(arg.length||"string"===typeof arg)return uploadData(swarmUrl)(arg);if(arg instanceof Object)return uploadDirectory(swarmUrl)(arg)}return Promise.reject(Error("Bad arguments"))}},_download=
function(swarmUrl){return function(hash){return function(path){return isDirectory(swarmUrl)(hash).then(function(isDir){return isDir?path?downloadDirectoryToDisk(swarmUrl)(hash)(path):downloadDirectory(swarmUrl)(hash):path?downloadDataToDisk(swarmUrl)(hash)(path):downloadData(swarmUrl)(hash)})}}},downloadBinary=function(path,archives){var system=os.platform().replace("win32","windows")+"-"+("x64"===os.arch()?"amd64":"386");archives=(archives||defaultArchives)[system];system=archives.archiveMD5;var binaryMD5=
archives.binaryMD5;return files.safeDownloadArchived(downloadUrl+archives.archive+".tar.gz")(system)(binaryMD5)(path)},startProcess=function(swarmSetup){return new Promise(function(resolve,reject){var spawn=child_process.spawn,hasString=function(str){return function(buffer){return-1!==(""+buffer).indexOf(str)}},password=swarmSetup.password,privateKey=swarmSetup.privateKey,state=0,swarmProcess=spawn(swarmSetup.binPath,["--bzzaccount",swarmSetup.account||privateKey,"--datadir",swarmSetup.dataDir,"--ens-api",
swarmSetup.ensApi]);spawn=function(data){0===state&&hasString("Passphrase")(data)?setTimeout(function(){state=1;swarmProcess.stdin.write(password+"\n")},500):hasString("Swarm http proxy started")(data)&&(state=2,clearTimeout(timeout),resolve(swarmProcess))};swarmProcess.stdout.on("data",spawn);swarmProcess.stderr.on("data",spawn);var timeout=setTimeout(function(){return reject(Error("Couldn't start swarm process."))},2E4)})},stopProcess=function(process){return new Promise(function(resolve,reject){process.stderr.removeAllListeners("data");
process.stdout.removeAllListeners("data");process.stdin.removeAllListeners("error");process.removeAllListeners("error");process.removeAllListeners("exit");process.kill("SIGINT");var killTimeout=setTimeout(function(){return process.kill("SIGKILL")},8E3);process.once("close",function(){clearTimeout(killTimeout);resolve()})})},_isAvailable=function(swarmUrl){return uploadData(swarmUrl)("test").then(function(hash){return"c9a99c7d326dcc6316f32fe2625b311f6dc49a175e6877681ded93137d3569e7"===hash}).catch(function(){return!1})},
isDirectory=function(swarmUrl){return function(hash){return downloadData(swarmUrl)(hash).then(function(data){try{return!!JSON.parse(toString(data)).entries}catch(e){return!1}})}},uncurry=function(f){return function(a,b,c,d,e){var p;"undefined"!==typeof a&&(p=f(a));"undefined"!==typeof b&&(p=f(b));"undefined"!==typeof c&&(p=f(c));"undefined"!==typeof d&&(p=f(d));"undefined"!==typeof e&&(p=f(e));return p}},toString=function(uint8Array){return bytes.toString(bytes.fromUint8Array(uint8Array))},fromString=
function(string){return bytes.toUint8Array(bytes.fromString(string))},at=function(swarmUrl){return{download:function(hash,path){return _download(swarmUrl)(hash)(path)},downloadData:uncurry(downloadData(swarmUrl)),downloadDataToDisk:uncurry(downloadDataToDisk(swarmUrl)),downloadDirectory:uncurry(downloadDirectory(swarmUrl)),downloadDirectoryToDisk:uncurry(downloadDirectoryToDisk(swarmUrl)),downloadEntries:uncurry(downloadEntries(swarmUrl)),downloadRoutes:uncurry(downloadRoutes(swarmUrl)),isAvailable:function(){return _isAvailable(swarmUrl)},
upload:function(arg){return _upload(swarmUrl)(arg)},uploadData:uncurry(uploadData(swarmUrl)),uploadFile:uncurry(uploadFile(swarmUrl)),uploadFileFromDisk:uncurry(uploadFile(swarmUrl)),uploadDataFromDisk:uncurry(uploadDataFromDisk(swarmUrl)),uploadDirectory:uncurry(uploadDirectory(swarmUrl)),uploadDirectoryFromDisk:uncurry(uploadDirectoryFromDisk(swarmUrl)),uploadToManifest:uncurry(uploadToManifest(swarmUrl)),pick:pick,hash:hash$jscomp$1,fromString:fromString,toString:toString}};return{at:at,local:function(swarmSetup){return function(useAPI){return _isAvailable("http://localhost:8500").then(function(isAvailable){return isAvailable?
useAPI(at("http://localhost:8500")).then(function(){}):downloadBinary(swarmSetup.binPath,swarmSetup.archives).onData(function(data){return(swarmSetup.onProgress||function(){})(data.length)}).then(function(){return startProcess(swarmSetup)}).then(function(process){return useAPI(at("http://localhost:8500")).then(function(){return process})}).then(stopProcess)})}},download:_download,downloadBinary:downloadBinary,downloadData:downloadData,downloadDataToDisk:downloadDataToDisk,downloadDirectory:downloadDirectory,
downloadDirectoryToDisk:downloadDirectoryToDisk,downloadEntries:downloadEntries,downloadRoutes:downloadRoutes,isAvailable:_isAvailable,startProcess:startProcess,stopProcess:stopProcess,upload:_upload,uploadData:uploadData,uploadDataFromDisk:uploadDataFromDisk,uploadFile:uploadFile,uploadFileFromDisk:uploadFileFromDisk,uploadDirectory:uploadDirectory,uploadDirectoryFromDisk:uploadDirectoryFromDisk,uploadToManifest:uploadToManifest,pick:pick,hash:hash$jscomp$1,fromString:fromString,toString:toString}}}
//# sourceMappingURL=module$node_modules$swarm_js$lib$swarm.js.map
