shadow$provide.module$node_modules$secp256k1$lib$assert=function(global,require,module,exports){var Buffer=require("module$node_modules$buffer$index").Buffer;"use strict";var toString=Object.prototype.toString;exports.isArray=function(value,message){if(!Array.isArray(value))throw TypeError(message);};exports.isBoolean=function(value,message){if("[object Boolean]"!==toString.call(value))throw TypeError(message);};exports.isBuffer=function(value,message){if(!Buffer.isBuffer(value))throw TypeError(message);
};exports.isFunction=function(value,message){if("[object Function]"!==toString.call(value))throw TypeError(message);};exports.isNumber=function(value,message){if("[object Number]"!==toString.call(value))throw TypeError(message);};exports.isObject=function(value,message){if("[object Object]"!==toString.call(value))throw TypeError(message);};exports.isBufferLength=function(buffer,length,message){if(buffer.length!==length)throw RangeError(message);};exports.isBufferLength2=function(buffer,length1,length2,
message){if(buffer.length!==length1&&buffer.length!==length2)throw RangeError(message);};exports.isLengthGTZero=function(value,message){if(0===value.length)throw RangeError(message);};exports.isNumberInInterval=function(number,x,y,message){if(number<=x||number>=y)throw RangeError(message);}}
//# sourceMappingURL=module$node_modules$secp256k1$lib$assert.js.map
