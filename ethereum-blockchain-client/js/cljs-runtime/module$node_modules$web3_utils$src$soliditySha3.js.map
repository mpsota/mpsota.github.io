{
"version":3,
"file":"module$node_modules$web3_utils$src$soliditySha3.js",
"lineCount":8,
"mappings":"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",
"sources":["node_modules/web3-utils/src/soliditySha3.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$web3_utils$src$soliditySha3\"] = function(global,require,module,exports) {\n/*\n This file is part of web3.js.\n\n web3.js is free software: you can redistribute it and/or modify\n it under the terms of the GNU Lesser General Public License as published by\n the Free Software Foundation, either version 3 of the License, or\n (at your option) any later version.\n\n web3.js is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n GNU Lesser General Public License for more details.\n\n You should have received a copy of the GNU Lesser General Public License\n along with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n */\n/**\n * @file soliditySha3.js\n * @author Fabian Vogelsteller <fabian@ethereum.org>\n * @date 2017\n */\n\nvar _ = require('underscore');\nvar BN = require('bn.js');\nvar utils = require('./utils.js');\n\n\nvar _elementaryName = function (name) {\n    /*jshint maxcomplexity:false */\n\n    if (name.startsWith('int[')) {\n        return 'int256' + name.slice(3);\n    } else if (name === 'int') {\n        return 'int256';\n    } else if (name.startsWith('uint[')) {\n        return 'uint256' + name.slice(4);\n    } else if (name === 'uint') {\n        return 'uint256';\n    } else if (name.startsWith('fixed[')) {\n        return 'fixed128x128' + name.slice(5);\n    } else if (name === 'fixed') {\n        return 'fixed128x128';\n    } else if (name.startsWith('ufixed[')) {\n        return 'ufixed128x128' + name.slice(6);\n    } else if (name === 'ufixed') {\n        return 'ufixed128x128';\n    }\n    return name;\n};\n\n// Parse N from type<N>\nvar _parseTypeN = function (type) {\n    var typesize = /^\\D+(\\d+).*$/.exec(type);\n    return typesize ? parseInt(typesize[1], 10) : null;\n};\n\n// Parse N from type[<N>]\nvar _parseTypeNArray = function (type) {\n    var arraySize = /^\\D+\\d*\\[(\\d+)\\]$/.exec(type);\n    return arraySize ? parseInt(arraySize[1], 10) : null;\n};\n\nvar _parseNumber = function (arg) {\n    var type = typeof arg;\n    if (type === 'string') {\n        if (utils.isHexStrict(arg)) {\n            return new BN(arg.replace(/0x/i,''), 16);\n        } else {\n            return new BN(arg, 10);\n        }\n    } else if (type === 'number') {\n        return new BN(arg);\n    } else if (utils.isBigNumber(arg)) {\n        return new BN(arg.toString(10));\n    } else if (utils.isBN(arg)) {\n        return arg;\n    } else {\n        throw new Error(arg +' is not a number');\n    }\n};\n\nvar _solidityPack = function (type, value, arraySize) {\n    /*jshint maxcomplexity:false */\n\n    var size, num;\n    type = _elementaryName(type);\n\n\n    if (type === 'bytes') {\n\n        if (value.replace(/^0x/i,'').length % 2 !== 0) {\n            throw new Error('Invalid bytes characters '+ value.length);\n        }\n\n        return value;\n    } else if (type === 'string') {\n        return utils.utf8ToHex(value);\n    } else if (type === 'bool') {\n        return value ? '01' : '00';\n    } else if (type.startsWith('address')) {\n        if(arraySize) {\n            size = 64;\n        } else {\n            size = 40;\n        }\n\n        if(!utils.isAddress(value)) {\n            throw new Error(value +' is not a valid address, or the checksum is invalid.');\n        }\n\n        return utils.leftPad(value.toLowerCase(), size);\n    }\n\n    size = _parseTypeN(type);\n\n    if (type.startsWith('bytes')) {\n\n        if(!size) {\n            throw new Error('bytes[] not yet supported in solidity');\n        }\n\n        // must be 32 byte slices when in an array\n        if(arraySize) {\n            size = 32;\n        }\n\n        if (size < 1 || size > 32 || size < value.replace(/^0x/i,'').length / 2 ) {\n            throw new Error('Invalid bytes' + size +' for '+ value);\n        }\n\n        return utils.rightPad(value, size * 2);\n    } else if (type.startsWith('uint')) {\n\n        if ((size % 8) || (size < 8) || (size > 256)) {\n            throw new Error('Invalid uint'+size+' size');\n        }\n\n        num = _parseNumber(value);\n        if (num.bitLength() > size) {\n            throw new Error('Supplied uint exceeds width: ' + size + ' vs ' + num.bitLength());\n        }\n\n        if(num.lt(new BN(0))) {\n            throw new Error('Supplied uint '+ num.toString() +' is negative');\n        }\n\n        return size ? utils.leftPad(num.toString('hex'), size/8 * 2) : num;\n    } else if (type.startsWith('int')) {\n\n        if ((size % 8) || (size < 8) || (size > 256)) {\n            throw new Error('Invalid int'+size+' size');\n        }\n\n        num = _parseNumber(value);\n        if (num.bitLength() > size) {\n            throw new Error('Supplied int exceeds width: ' + size + ' vs ' + num.bitLength());\n        }\n\n        if(num.lt(new BN(0))) {\n            return num.toTwos(size).toString('hex');\n        } else {\n            return size ? utils.leftPad(num.toString('hex'), size/8 * 2) : num;\n        }\n\n    } else {\n        // FIXME: support all other types\n        throw new Error('Unsupported or invalid type: ' + type);\n    }\n};\n\n\nvar _processSoliditySha3Args = function (arg) {\n    /*jshint maxcomplexity:false */\n\n    if(_.isArray(arg)) {\n        throw new Error('Autodetection of array types is not supported.');\n    }\n\n    var type, value = '';\n    var hexArg, arraySize;\n\n    // if type is given\n    if (_.isObject(arg) && (arg.hasOwnProperty('v') || arg.hasOwnProperty('t') || arg.hasOwnProperty('value') || arg.hasOwnProperty('type'))) {\n        type = arg.hasOwnProperty('t') ? arg.t : arg.type;\n        value = arg.hasOwnProperty('v') ? arg.v : arg.value;\n\n    // otherwise try to guess the type\n    } else {\n\n        type = utils.toHex(arg, true);\n        value = utils.toHex(arg);\n\n        if (!type.startsWith('int') && !type.startsWith('uint')) {\n            type = 'bytes';\n        }\n    }\n\n    if ((type.startsWith('int') || type.startsWith('uint')) &&  typeof value === 'string' && !/^(-)?0x/i.test(value)) {\n        value = new BN(value);\n    }\n\n    // get the array size\n    if(_.isArray(value)) {\n        arraySize = _parseTypeNArray(type);\n        if(arraySize && value.length !== arraySize) {\n            throw new Error(type +' is not matching the given array '+ JSON.stringify(value));\n        } else {\n            arraySize = value.length;\n        }\n    }\n\n\n    if (_.isArray(value)) {\n        hexArg = value.map(function (val) {\n            return _solidityPack(type, val, arraySize).toString('hex').replace('0x','');\n        });\n        return hexArg.join('');\n    } else {\n        hexArg = _solidityPack(type, value, arraySize);\n        return hexArg.toString('hex').replace('0x','');\n    }\n\n};\n\n/**\n * Hashes solidity values to a sha3 hash using keccak 256\n *\n * @method soliditySha3\n * @return {Object} the sha3\n */\nvar soliditySha3 = function () {\n    /*jshint maxcomplexity:false */\n\n    var args = Array.prototype.slice.call(arguments);\n\n    var hexArgs = _.map(args, _processSoliditySha3Args);\n\n    // console.log(args, hexArgs);\n    // console.log('0x'+ hexArgs.join(''));\n\n    return utils.sha3('0x'+ hexArgs.join(''));\n};\n\n/**\n * Hashes solidity values to a sha3 hash using keccak 256 but does return the hash of value `null` instead of `null`\n *\n * @method soliditySha3Raw\n * @return {Object} the sha3\n */\nvar soliditySha3Raw = function () {\n    return utils.sha3Raw('0x'+ _.map(Array.prototype.slice.call(arguments), _processSoliditySha3Args).join(''));\n};\n\n\nmodule.exports = {\n    soliditySha3: soliditySha3,\n    soliditySha3Raw: soliditySha3Raw\n};\n\n};"],
"names":["shadow$provide","global","require","module","exports","_","BN","utils","_parseTypeNArray","type","arraySize","exec","parseInt","_parseNumber","arg","isHexStrict","replace","isBigNumber","toString","isBN","Error","_solidityPack","value","name","startsWith","slice","length","utf8ToHex","size","isAddress","leftPad","toLowerCase","typesize","rightPad","num","bitLength","lt","toTwos","_processSoliditySha3Args","isArray","isObject","hasOwnProperty","t","v","toHex","test","JSON","stringify","hexArg","map","val","join","soliditySha3","args","Array","prototype","call","arguments","hexArgs","sha3","soliditySha3Raw","sha3Raw"]
}
