shadow$provide.module$node_modules$web3_eth_ens$src$ENS=function(global,require,module,exports){function ENS(eth){this.eth=eth}var config=require("module$node_modules$web3_eth_ens$src$config"),Registry=require("module$node_modules$web3_eth_ens$src$contracts$Registry"),ResolverMethodHandler=require("module$node_modules$web3_eth_ens$src$lib$ResolverMethodHandler");Object.defineProperty(ENS.prototype,"registry",{get:function(){return new Registry(this)},enumerable:!0});Object.defineProperty(ENS.prototype,
"resolverMethodHandler",{get:function(){return new ResolverMethodHandler(this.registry)},enumerable:!0});ENS.prototype.resolver=function(name){return this.registry.resolver(name)};ENS.prototype.getAddress=function(name,callback){return this.resolverMethodHandler.method(name,"addr",[]).call(callback)};ENS.prototype.setAddress=function(name,address,sendOptions,callback){return this.resolverMethodHandler.method(name,"setAddr",[address]).send(sendOptions,callback)};ENS.prototype.getPubkey=function(name,
callback){return this.resolverMethodHandler.method(name,"pubkey",[],callback).call(callback)};ENS.prototype.setPubkey=function(name,x,y,sendOptions,callback){return this.resolverMethodHandler.method(name,"setPubkey",[x,y]).send(sendOptions,callback)};ENS.prototype.getContent=function(name,callback){return this.resolverMethodHandler.method(name,"content",[]).call(callback)};ENS.prototype.setContent=function(name,hash,sendOptions,callback){return this.resolverMethodHandler.method(name,"setContent",
[hash]).send(sendOptions,callback)};ENS.prototype.getMultihash=function(name,callback){return this.resolverMethodHandler.method(name,"multihash",[]).call(callback)};ENS.prototype.setMultihash=function(name,hash,sendOptions,callback){return this.resolverMethodHandler.method(name,"multihash",[hash]).send(sendOptions,callback)};ENS.prototype.checkNetwork=function(){var self=this;return self.eth.getBlock("latest").then(function(block){block=new Date/1E3-block.timestamp;if(3600<block)throw Error("Network not synced; last block was "+
block+" seconds ago");return self.eth.net.getNetworkType()}).then(function(networkType){var addr=config.addresses[networkType];if("undefined"===typeof addr)throw Error("ENS is not supported on network "+networkType);return addr})};module.exports=ENS}
//# sourceMappingURL=module$node_modules$web3_eth_ens$src$ENS.js.map
