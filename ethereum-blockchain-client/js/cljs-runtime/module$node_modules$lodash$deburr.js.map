{
"version":3,
"file":"module$node_modules$lodash$deburr.js",
"lineCount":1,
"mappings":"AAAAA,cAAA,kCAAA,CAAsD,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAAA,IAC1FC,aAAeH,OAAA,CAAQ,0CAAR,CAD2E,CAE1FI,SAAWJ,OAAA,CAAQ,qCAAR,CAF+E,CAK1FK,QAAU,6CALgF,CAoB1FC,YAAc,4CAyBlBL,OAAAC,QAAA,CALAK,QAAe,CAACC,MAAD,CAAS,CAEtB,OADAA,MACA,CADSJ,QAAA,CAASI,MAAT,CACT,GAAiBA,MAAAC,QAAA,CAAeJ,OAAf,CAAwBF,YAAxB,CAAAM,QAAA,CAA8CH,WAA9C,CAA2D,EAA3D,CAFK,CAxCsE;",
"sources":["node_modules/lodash/deburr.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$lodash$deburr\"] = function(global,require,module,exports) {\nvar deburrLetter = require('./_deburrLetter'),\n    toString = require('./toString');\n\n/** Used to match Latin Unicode letters (excluding mathematical operators). */\nvar reLatin = /[\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\xff\\u0100-\\u017f]/g;\n\n/** Used to compose unicode character classes. */\nvar rsComboMarksRange = '\\\\u0300-\\\\u036f',\n    reComboHalfMarksRange = '\\\\ufe20-\\\\ufe2f',\n    rsComboSymbolsRange = '\\\\u20d0-\\\\u20ff',\n    rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange;\n\n/** Used to compose unicode capture groups. */\nvar rsCombo = '[' + rsComboRange + ']';\n\n/**\n * Used to match [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks) and\n * [combining diacritical marks for symbols](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks_for_Symbols).\n */\nvar reComboMark = RegExp(rsCombo, 'g');\n\n/**\n * Deburrs `string` by converting\n * [Latin-1 Supplement](https://en.wikipedia.org/wiki/Latin-1_Supplement_(Unicode_block)#Character_table)\n * and [Latin Extended-A](https://en.wikipedia.org/wiki/Latin_Extended-A)\n * letters to basic Latin letters and removing\n * [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks).\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category String\n * @param {string} [string=''] The string to deburr.\n * @returns {string} Returns the deburred string.\n * @example\n *\n * _.deburr('d\u00e9j\u00e0 vu');\n * // => 'deja vu'\n */\nfunction deburr(string) {\n  string = toString(string);\n  return string && string.replace(reLatin, deburrLetter).replace(reComboMark, '');\n}\n\nmodule.exports = deburr;\n\n};"],
"names":["shadow$provide","global","require","module","exports","deburrLetter","toString","reLatin","reComboMark","deburr","string","replace"]
}
