{
"version":3,
"file":"module$node_modules$web3_core_requestmanager$src$batch.js",
"lineCount":3,
"mappings":"AAAAA,cAAA,uDAAA,CAA2E,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAyBnH,IAAIC,QAAUH,OAAA,CAAQ,0DAAR,CAAd,CACII,OAASJ,OAAA,CAAQ,iDAAR,CAAAI,OAETC,OAAAA,CAAQA,QAAS,CAACC,cAAD,CAAiB,CAClC,IAAAA,eAAA,CAAsBA,cACtB,KAAAC,SAAA,CAAgB,EAFkB,CAWtCF,OAAAG,UAAAC,IAAA,CAAsBC,QAAS,CAACC,OAAD,CAAU,CACrC,IAAAJ,SAAAK,KAAA,CAAmBD,OAAnB,CADqC,CASzCN,OAAAG,UAAAK,QAAA,CAA0BC,QAAS,EAAG,CAClC,IAAIP,SAAW,IAAAA,SACf,KAAAD,eAAAS,UAAA,CAA8BR,QAA9B;AAAwC,QAAS,CAACS,GAAD,CAAMC,OAAN,CAAe,CAC5DA,OAAA,CAAUA,OAAV,EAAqB,EACrBV,SAAAW,IAAA,CAAa,QAAS,CAACP,OAAD,CAAUQ,KAAV,CAAiB,CACnC,MAAOF,QAAA,CAAQE,KAAR,CAAP,EAAyB,EADU,CAAvC,CAAAC,QAAA,CAEW,QAAS,CAACC,MAAD,CAASF,KAAT,CAAgB,CAChC,GAAIZ,QAAA,CAASY,KAAT,CAAAG,SAAJ,CAA8B,CAC1B,GAAID,MAAJ,EAAcA,MAAAE,MAAd,CACI,MAAOhB,SAAA,CAASY,KAAT,CAAAG,SAAA,CAAyBlB,MAAAoB,cAAA,CAAqBH,MAArB,CAAzB,CAGX,IAAI,CAAClB,OAAAsB,gBAAA,CAAwBJ,MAAxB,CAAL,CACI,MAAOd,SAAA,CAASY,KAAT,CAAAG,SAAA,CAAyBlB,MAAAsB,gBAAA,CAAuBL,MAAvB,CAAzB,CAGX,IAAI,CACAd,QAAA,CAASY,KAAT,CAAAG,SAAA,CAAyB,IAAzB,CAA+Bf,QAAA,CAASY,KAAT,CAAAQ,OAAA,CAAyBpB,QAAA,CAASY,KAAT,CAAAQ,OAAA,CAAuBN,MAAAA,OAAvB,CAAzB,CAAiEA,MAAAA,OAAhG,CADA,CAEF,MAAOL,MAAP,CAAY,CACVT,QAAA,CAASY,KAAT,CAAAG,SAAA,CAAyBN,MAAzB,CADU,CAXY,CADE,CAFpC,CAF4D,CAAhE,CAFkC,CA0BtCf;MAAAC,QAAA,CAAiBG,MA1EkG;",
"sources":["node_modules/web3-core-requestmanager/src/batch.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$web3_core_requestmanager$src$batch\"] = function(global,require,module,exports) {\n/*\n    This file is part of web3.js.\n\n    web3.js is free software: you can redistribute it and/or modify\n    it under the terms of the GNU Lesser General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    web3.js is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU Lesser General Public License for more details.\n\n    You should have received a copy of the GNU Lesser General Public License\n    along with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n/**\n * @file batch.js\n * @author Marek Kotewicz <marek@ethdev.com>\n * @date 2015\n */\n\n\"use strict\";\n\nvar Jsonrpc = require('./jsonrpc');\nvar errors = require('web3-core-helpers').errors;\n\nvar Batch = function (requestManager) {\n    this.requestManager = requestManager;\n    this.requests = [];\n};\n\n/**\n * Should be called to add create new request to batch request\n *\n * @method add\n * @param {Object} jsonrpc requet object\n */\nBatch.prototype.add = function (request) {\n    this.requests.push(request);\n};\n\n/**\n * Should be called to execute batch request\n *\n * @method execute\n */\nBatch.prototype.execute = function () {\n    var requests = this.requests;\n    this.requestManager.sendBatch(requests, function (err, results) {\n        results = results || [];\n        requests.map(function (request, index) {\n            return results[index] || {};\n        }).forEach(function (result, index) {\n            if (requests[index].callback) {\n                if (result && result.error) {\n                    return requests[index].callback(errors.ErrorResponse(result));\n                }\n\n                if (!Jsonrpc.isValidResponse(result)) {\n                    return requests[index].callback(errors.InvalidResponse(result));\n                }\n\n                try {\n                    requests[index].callback(null, requests[index].format ? requests[index].format(result.result) : result.result);\n                } catch (err) {\n                    requests[index].callback(err);\n                }\n            }\n        });\n    });\n};\n\nmodule.exports = Batch;\n\n\n};"],
"names":["shadow$provide","global","require","module","exports","Jsonrpc","errors","Batch","requestManager","requests","prototype","add","Batch.prototype.add","request","push","execute","Batch.prototype.execute","sendBatch","err","results","map","index","forEach","result","callback","error","ErrorResponse","isValidResponse","InvalidResponse","format"]
}
