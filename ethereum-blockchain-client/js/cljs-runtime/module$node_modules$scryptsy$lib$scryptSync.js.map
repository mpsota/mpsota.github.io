{
"version":3,
"file":"module$node_modules$scryptsy$lib$scryptSync.js",
"lineCount":2,
"mappings":"AAAAA,cAAA,4CAAA,CAAgE,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CACxG,IAAMC,OAASH,OAAA,CAAQ,6CAAR,CACT,OAAA,CAGFA,OAAA,CAAQ,wCAAR,CAFF,KAAAI,aAAA,MAAA,aAAA,CACAC,SAAA,MAAA,SAsBFJ,OAAAC,QAAA,CAlBAI,QAAgB,CAACC,GAAD,CAAMC,IAAN,CAAYC,CAAZ,CAAeC,CAAf,CAAkBC,CAAlB,CAAqBC,KAArB,CAA4BC,gBAA5B,CAA8C,CACtD,IAAA,2BAQFT,YAAA,CAAaG,GAAb,CAAkBC,IAAlB,CAAwBC,CAAxB,CAA2BC,CAA3B,CAA8BC,CAA9B,CAAiCC,KAAjC,CAAwCC,gBAAxC,CAPFC,KAAAA,CAAA,0BAAA,GACAC,iBAAAA,CAAA,0BAAA,EACA;IAAAC,IAAA,0BAAA,IAAA,CACAC,EAAA,0BAAA,EADA,CAEAC,GAAA,0BAAA,GAFA,CAGAC,EAAA,0BAAA,EACAC,2BAAAA,CAAA,0BAAA,aAGF,KAAK,IAAIC,EAAI,CAAb,CAAgBA,CAAhB,CAAoBV,CAApB,CAAuBU,CAAA,EAAvB,CACEhB,QAAA,CAASc,CAAT,CAAgB,GAAhB,CAAYE,CAAZ,CAAsBX,CAAtB,CAAyBA,CAAzB,CAA4BD,CAA5B,CAA+BM,gBAA/B,CAAkCD,IAAlC,CAAsCI,EAAtC,CAA0CF,GAA1C,CAA+CC,CAA/C,CAAkDG,0BAAlD,CAGF,OAAOjB,OAAAmB,WAAA,CAAkBf,GAAlB,CAAuBY,CAAvB,CAA0B,CAA1B,CAA6BP,KAA7B,CAAoC,QAApC,CAfqD,CAR0C;",
"sources":["node_modules/scryptsy/lib/scryptSync.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$scryptsy$lib$scryptSync\"] = function(global,require,module,exports) {\nconst crypto = require('crypto')\nconst {\n  checkAndInit,\n  smixSync\n} = require('./utils')\n\n// N = Cpu cost, r = Memory cost, p = parallelization cost\nfunction scrypt (key, salt, N, r, p, dkLen, progressCallback) {\n  const {\n    XY,\n    V,\n    B32,\n    x,\n    _X,\n    B,\n    tickCallback\n  } = checkAndInit(key, salt, N, r, p, dkLen, progressCallback)\n\n  for (var i = 0; i < p; i++) {\n    smixSync(B, i * 128 * r, r, N, V, XY, _X, B32, x, tickCallback)\n  }\n\n  return crypto.pbkdf2Sync(key, B, 1, dkLen, 'sha256')\n}\n\nmodule.exports = scrypt\n\n};"],
"names":["shadow$provide","global","require","module","exports","crypto","checkAndInit","smixSync","scrypt","key","salt","N","r","p","dkLen","progressCallback","XY","V","B32","x","_X","B","tickCallback","i","pbkdf2Sync"]
}
