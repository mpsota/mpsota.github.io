{
"version":3,
"file":"module$node_modules$web3_shh$src$index.js",
"lineCount":5,
"mappings":"AAAAA,cAAA,uCAAA,CAA2D,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAyBnG,IAAIC,KAAOH,OAAA,CAAQ,yCAAR,CAAX,CACII,cAAgBJ,OAAA,CAAQ,uDAAR,CAAAK,cADpB,CAEIC,OAASN,OAAA,CAAQ,gDAAR,CAFb,CAIIO,IAAMP,OAAA,CAAQ,wCAAR,CAGNQ,OAAAA,CAAMA,QAAY,EAAG,CACrB,IAAIC,MAAQ,IAGZN,KAAAO,YAAA,CAAiB,IAAjB,CAAuBC,SAAvB,CAGA,KAAIC,YAAc,IAAAA,YAClB,KAAAA,YAAA,CAAmBC,QAAS,EAAG,CAC3BD,WAAAE,MAAA,CAAkBL,KAAlB;AAAyBE,SAAzB,CACAF,MAAAM,IAAAH,YAAAE,MAAA,CAA4BL,KAA5B,CAAmCE,SAAnC,CAF2B,CAK/B,KAAAI,IAAA,CAAW,IAAIR,GAAJ,CAAQ,IAAAS,gBAAR,CAEX,EACI,IAAIZ,aAAJ,CAAkB,CACda,KAAM,WADQ,CAEdC,KAAM,KAFQ,CAGdb,cAAe,CACX,SAAY,CACRc,OAAQ,CADA,CADD,CAHD,CAAlB,CADJ,CAaI,IAAIb,MAAJ,CAAW,CACPW,KAAM,YADC,CAEPG,KAAM,aAFC,CAGPD,OAAQ,CAHD,CAAX,CAbJ,CAkBI,IAAIb,MAAJ,CAAW,CACPW,KAAM,SADC,CAEPG,KAAM,UAFC,CAGPD,OAAQ,CAHD,CAAX,CAlBJ,CAuBI,IAAIb,MAAJ,CAAW,CACPW,KAAM,mBADC,CAEPG,KAAM,uBAFC,CAGPD,OAAQ,CAHD,CAAX,CAvBJ,CA4BI,IAAIb,MAAJ,CAAW,CACPW,KAAM,WADC,CAEPG,KAAM,eAFC,CAGPD,OAAQ,CAHD,CAAX,CA5BJ,CAiCI,IAAIb,MAAJ,CAAW,CACPW,KAAM,iBADC,CAEPG,KAAM,qBAFC,CAGPD,OAAQ,CAHD,CAAX,CAjCJ;AAsCI,IAAIb,MAAJ,CAAW,CACPW,KAAM,YADC,CAEPG,KAAM,gBAFC,CAGPD,OAAQ,CAHD,CAAX,CAtCJ,CA2CI,IAAIb,MAAJ,CAAW,CACPW,KAAM,eADC,CAEPG,KAAM,mBAFC,CAGPD,OAAQ,CAHD,CAAX,CA3CJ,CAgDI,IAAIb,MAAJ,CAAW,CACPW,KAAM,eADC,CAEPG,KAAM,mBAFC,CAGPD,OAAQ,CAHD,CAAX,CAhDJ,CAqDI,IAAIb,MAAJ,CAAW,CACPW,KAAM,YADC,CAEPG,KAAM,gBAFC,CAGPD,OAAQ,CAHD,CAAX,CArDJ,CA0DI,IAAIb,MAAJ,CAAW,CACPW,KAAM,cADC,CAEPG,KAAM,kBAFC,CAGPD,OAAQ,CAHD,CAAX,CA1DJ,CA+DI,IAAIb,MAAJ,CAAW,CACPW,KAAM,eADC,CAEPG,KAAM,mBAFC,CAGPD,OAAQ,CAHD,CAAX,CA/DJ,CAoEI,IAAIb,MAAJ,CAAW,CACPW,KAAM,WADC,CAEPG,KAAM,eAFC,CAGPD,OAAQ,CAHD,CAAX,CApEJ,CAyEI,IAAIb,MAAJ,CAAW,CACPW,KAAM,WADC,CAEPG,KAAM,eAFC;AAGPD,OAAQ,CAHD,CAAX,CAzEJ,CA8EI,IAAIb,MAAJ,CAAW,CACPW,KAAM,4BADC,CAEPG,KAAM,gCAFC,CAGPD,OAAQ,CAHD,CAAX,CA9EJ,CAmFI,IAAIb,MAAJ,CAAW,CACPW,KAAM,WADC,CAEPG,KAAM,eAFC,CAGPD,OAAQ,CAHD,CAAX,CAnFJ,CAwFI,IAAIb,MAAJ,CAAW,CACPW,KAAM,WADC,CAEPG,KAAM,eAFC,CAGPD,OAAQ,CAHD,CAAX,CAxFJ,CA6FI,IAAIb,MAAJ,CAAW,CACPW,KAAM,cADC,CAEPG,KAAM,kBAFC,CAGPD,OAAQ,CAHD,CAAX,CA7FJ,CAmGI,IAAIb,MAAJ,CAAW,CACPW,KAAM,kBADC,CAEPG,KAAM,sBAFC,CAGPD,OAAQ,CAHD,CAAX,CAnGJ,CAwGI,IAAIb,MAAJ,CAAW,CACPW,KAAM,mBADC,CAEPG,KAAM,uBAFC,CAGPD,OAAQ,CAHD,CAAX,CAxGJ,CA6GI,IAAIb,MAAJ,CAAW,CACPW,KAAM,qBADC,CAEPG,KAAM,yBAFC;AAGPD,OAAQ,CAHD,CAAX,CA7GJ,CAmHI,IAAIb,MAAJ,CAAW,CACPW,KAAM,MADC,CAEPG,KAAM,UAFC,CAGPD,OAAQ,CAHD,CAIPE,eAAgB,CAAC,IAAD,CAJT,CAAX,CAnHJ,CA0HI,IAAIf,MAAJ,CAAW,CACPW,KAAM,aADC,CAEPG,KAAM,iBAFC,CAGPD,OAAQ,CAHD,CAAX,CA1HJ,CAAAG,QAAA,CA+HU,QAAQ,CAACC,MAAD,CAAS,CACvBA,MAAAC,eAAA,CAAsBf,KAAtB,CACAc,OAAAE,kBAAA,CAAyBhB,KAAAiB,gBAAzB,CAFuB,CA/H3B,CAfqB,CAoJzBlB,OAAAmB,UAAAC,mBAAA,CAAmCC,QAAS,EAAG,CAC1C,IAAAH,gBAAAE,mBAAA,EAD0C,CAI/CzB,KAAA2B,aAAA,CAAkBtB,MAAlB,CAIAP,OAAAC,QAAA,CAAiBM,MA5LkF;",
"sources":["node_modules/web3-shh/src/index.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$web3_shh$src$index\"] = function(global,require,module,exports) {\n/*\n    This file is part of web3.js.\n\n    web3.js is free software: you can redistribute it and/or modify\n    it under the terms of the GNU Lesser General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    web3.js is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU Lesser General Public License for more details.\n\n    You should have received a copy of the GNU Lesser General Public License\n    along with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n/**\n * @file index.js\n * @author Fabian Vogelsteller <fabian@ethereum.org>\n * @date 2017\n */\n\n\"use strict\";\n\nvar core = require('web3-core');\nvar Subscriptions = require('web3-core-subscriptions').subscriptions;\nvar Method = require('web3-core-method');\n// var formatters = require('web3-core-helpers').formatters;\nvar Net = require('web3-net');\n\n\nvar Shh = function Shh() {\n    var _this = this;\n\n    // sets _requestmanager\n    core.packageInit(this, arguments);\n\n    // overwrite setProvider\n    var setProvider = this.setProvider;\n    this.setProvider = function () {\n        setProvider.apply(_this, arguments);\n        _this.net.setProvider.apply(_this, arguments);\n    };\n\n    this.net = new Net(this.currentProvider);\n\n    [\n        new Subscriptions({\n            name: 'subscribe',\n            type: 'shh',\n            subscriptions: {\n                'messages': {\n                    params: 1\n                    // inputFormatter: [formatters.inputPostFormatter],\n                    // outputFormatter: formatters.outputPostFormatter\n                }\n            }\n        }),\n\n        new Method({\n            name: 'getVersion',\n            call: 'shh_version',\n            params: 0\n        }),\n        new Method({\n            name: 'getInfo',\n            call: 'shh_info',\n            params: 0\n        }),\n        new Method({\n            name: 'setMaxMessageSize',\n            call: 'shh_setMaxMessageSize',\n            params: 1\n        }),\n        new Method({\n            name: 'setMinPoW',\n            call: 'shh_setMinPoW',\n            params: 1\n        }),\n        new Method({\n            name: 'markTrustedPeer',\n            call: 'shh_markTrustedPeer',\n            params: 1\n        }),\n        new Method({\n            name: 'newKeyPair',\n            call: 'shh_newKeyPair',\n            params: 0\n        }),\n        new Method({\n            name: 'addPrivateKey',\n            call: 'shh_addPrivateKey',\n            params: 1\n        }),\n        new Method({\n            name: 'deleteKeyPair',\n            call: 'shh_deleteKeyPair',\n            params: 1\n        }),\n        new Method({\n            name: 'hasKeyPair',\n            call: 'shh_hasKeyPair',\n            params: 1\n        }),\n        new Method({\n            name: 'getPublicKey',\n            call: 'shh_getPublicKey',\n            params: 1\n        }),\n        new Method({\n            name: 'getPrivateKey',\n            call: 'shh_getPrivateKey',\n            params: 1\n        }),\n        new Method({\n            name: 'newSymKey',\n            call: 'shh_newSymKey',\n            params: 0\n        }),\n        new Method({\n            name: 'addSymKey',\n            call: 'shh_addSymKey',\n            params: 1\n        }),\n        new Method({\n            name: 'generateSymKeyFromPassword',\n            call: 'shh_generateSymKeyFromPassword',\n            params: 1\n        }),\n        new Method({\n            name: 'hasSymKey',\n            call: 'shh_hasSymKey',\n            params: 1\n        }),\n        new Method({\n            name: 'getSymKey',\n            call: 'shh_getSymKey',\n            params: 1\n        }),\n        new Method({\n            name: 'deleteSymKey',\n            call: 'shh_deleteSymKey',\n            params: 1\n        }),\n\n        new Method({\n            name: 'newMessageFilter',\n            call: 'shh_newMessageFilter',\n            params: 1\n        }),\n        new Method({\n            name: 'getFilterMessages',\n            call: 'shh_getFilterMessages',\n            params: 1\n        }),\n        new Method({\n            name: 'deleteMessageFilter',\n            call: 'shh_deleteMessageFilter',\n            params: 1\n        }),\n\n        new Method({\n            name: 'post',\n            call: 'shh_post',\n            params: 1,\n            inputFormatter: [null]\n        }),\n\n        new Method({\n            name: 'unsubscribe',\n            call: 'shh_unsubscribe',\n            params: 1\n        })\n    ].forEach(function(method) {\n        method.attachToObject(_this);\n        method.setRequestManager(_this._requestManager);\n    });\n};\n\nShh.prototype.clearSubscriptions = function () {\n     this._requestManager.clearSubscriptions();\n};\n\ncore.addProviders(Shh);\n\n\n\nmodule.exports = Shh;\n\n\n\n};"],
"names":["shadow$provide","global","require","module","exports","core","Subscriptions","subscriptions","Method","Net","Shh","_this","packageInit","arguments","setProvider","this.setProvider","apply","net","currentProvider","name","type","params","call","inputFormatter","forEach","method","attachToObject","setRequestManager","_requestManager","prototype","clearSubscriptions","Shh.prototype.clearSubscriptions","addProviders"]
}
