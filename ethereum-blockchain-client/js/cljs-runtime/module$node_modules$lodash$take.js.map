{
"version":3,
"file":"module$node_modules$lodash$take.js",
"lineCount":1,
"mappings":"AAAAA,cAAA,gCAAA,CAAoD,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAAA,IACxFC,UAAYH,OAAA,CAAQ,uCAAR,CAD4E,CAExFI,UAAYJ,OAAA,CAAQ,sCAAR,CAmChBC,OAAAC,QAAA,CARAG,QAAa,CAACC,KAAD,CAAQC,CAAR,CAAWC,KAAX,CAAkB,CAC7B,GAAMF,CAAAA,KAAN,EAAeG,CAAAH,KAAAG,OAAf,CACE,MAAO,EAETF,EAAA,CAAKC,KAAD,EAAgBE,IAAAA,EAAhB,GAAUH,CAAV,CAA6B,CAA7B,CAAiCH,SAAA,CAAUG,CAAV,CACrC,OAAOJ,UAAA,CAAUG,KAAV,CAAiB,CAAjB,CAAwB,CAAJ,CAAAC,CAAA,CAAQ,CAAR,CAAYA,CAAhC,CALsB,CA7B6D;",
"sources":["node_modules/lodash/take.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$lodash$take\"] = function(global,require,module,exports) {\nvar baseSlice = require('./_baseSlice'),\n    toInteger = require('./toInteger');\n\n/**\n * Creates a slice of `array` with `n` elements taken from the beginning.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Array\n * @param {Array} array The array to query.\n * @param {number} [n=1] The number of elements to take.\n * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n * @returns {Array} Returns the slice of `array`.\n * @example\n *\n * _.take([1, 2, 3]);\n * // => [1]\n *\n * _.take([1, 2, 3], 2);\n * // => [1, 2]\n *\n * _.take([1, 2, 3], 5);\n * // => [1, 2, 3]\n *\n * _.take([1, 2, 3], 0);\n * // => []\n */\nfunction take(array, n, guard) {\n  if (!(array && array.length)) {\n    return [];\n  }\n  n = (guard || n === undefined) ? 1 : toInteger(n);\n  return baseSlice(array, 0, n < 0 ? 0 : n);\n}\n\nmodule.exports = take;\n\n};"],
"names":["shadow$provide","global","require","module","exports","baseSlice","toInteger","take","array","n","guard","length","undefined"]
}
