shadow$provide.module$node_modules$ethjs_unit$lib$index=function(global,require,module,exports){function getValueOfUnit(unitInput){var unit=unitInput?unitInput.toLowerCase():"ether";unit=unitMap[unit];if("string"!==typeof unit)throw Error("[ethjs-unit] the unit provided "+unitInput+" doesn't exists, please use the one of the following units "+JSON.stringify(unitMap,null,2));return new BN(unit,10)}function numberToString(arg){if("string"===typeof arg){if(!arg.match(/^-?[0-9.]+$/))throw Error("while converting number to string, invalid number value '"+
arg+"', should be a number matching (^-?[0-9.]+).");return arg}if("number"===typeof arg)return String(arg);if("object"===typeof arg&&arg.toString&&(arg.toTwos||arg.dividedToIntegerBy))return arg.toPrecision?String(arg.toPrecision()):arg.toString(10);throw Error("while converting number to string, invalid number value '"+arg+"' type "+typeof arg+".");}var BN=require("module$node_modules$bn_DOT_js$lib$bn"),numberToBN=require("module$node_modules$number_to_bn$src$index"),zero=new BN(0),negative1=new BN(-1),
unitMap={noether:"0",wei:"1",kwei:"1000",Kwei:"1000",babbage:"1000",femtoether:"1000",mwei:"1000000",Mwei:"1000000",lovelace:"1000000",picoether:"1000000",gwei:"1000000000",Gwei:"1000000000",shannon:"1000000000",nanoether:"1000000000",nano:"1000000000",szabo:"1000000000000",microether:"1000000000000",micro:"1000000000000",finney:"1000000000000000",milliether:"1000000000000000",milli:"1000000000000000",ether:"1000000000000000000",kether:"1000000000000000000000",grand:"1000000000000000000000",mether:"1000000000000000000000000",
gether:"1000000000000000000000000000",tether:"1000000000000000000000000000000"};module.exports={unitMap:unitMap,numberToString:numberToString,getValueOfUnit:getValueOfUnit,fromWei:function(weiInput,unit,optionsInput){var wei=numberToBN(weiInput);weiInput=wei.lt(zero);var base=getValueOfUnit(unit);unit=unitMap[unit].length-1||1;optionsInput=optionsInput||{};weiInput&&(wei=wei.mul(negative1));for(var fraction=wei.mod(base).toString(10);fraction.length<unit;)fraction="0"+fraction;optionsInput.pad||(fraction=
fraction.match(/^([0-9]*[1-9]|0)(0*)/)[1]);wei=wei.div(base).toString(10);optionsInput.commify&&(wei=wei.replace(/\B(?=(\d{3})+(?!\d))/g,","));wei=""+wei+("0"==fraction?"":"."+fraction);weiInput&&(wei="-"+wei);return wei},toWei:function(etherInput,unit){var ether=numberToString(etherInput),base=getValueOfUnit(unit),baseLength=unitMap[unit].length-1||1;(unit="-"===ether.substring(0,1))&&(ether=ether.substring(1));if("."===ether)throw Error("[ethjs-unit] while converting number "+etherInput+" to wei, invalid value");
var comps=ether.split(".");if(2<comps.length)throw Error("[ethjs-unit] while converting number "+etherInput+" to wei,  too many decimal points");ether=comps[0];comps=comps[1];ether||(ether="0");comps||(comps="0");if(comps.length>baseLength)throw Error("[ethjs-unit] while converting number "+etherInput+" to wei, too many decimal places");for(;comps.length<baseLength;)comps+="0";ether=new BN(ether);comps=new BN(comps);etherInput=ether.mul(base).add(comps);unit&&(etherInput=etherInput.mul(negative1));
return new BN(etherInput.toString(10),10)}}}
//# sourceMappingURL=module$node_modules$ethjs_unit$lib$index.js.map
