{
"version":3,
"file":"module$node_modules$semantic_ui_react$dist$commonjs$modules$Accordion$Accordion.js",
"lineCount":5,
"mappings":"AAAAA,cAAA,gFAAA,CAAoG,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CA+B5IC,QAASA,UAAS,CAACC,KAAD,CAAQ,CAAA,IACpBC,UAAYD,KAAAC,UADQ,CAEpBC,MAAQF,KAAAE,MAFY,CAGpBC,SAAWH,KAAAG,SAHS,CAIpBC,OAASJ,KAAAI,OACTC,UAAAA,CAAU,CAAC,CAAA,CAAGC,WAAA,CAAY,SAAZ,CAAJ,EAA4B,IAA5B,CAAkC,CAAC,CAAA,CAAGC,IAAAC,WAAJ,EAAqBN,KAArB,CAA4B,OAA5B,CAAlC,CAAwE,CAAC,CAAA,CAAGK,IAAAC,WAAJ,EAAqBL,QAArB,CAA+B,UAA/B,CAAxE,CAAoH,CAAC,CAAA,CAAGI,IAAAC,WAAJ,EAAqBJ,MAArB,CAA6B,QAA7B,CAApH,CAA4JH,SAA5J,CACVQ,MAAAA,CAAO,CAAC,CAAA,CAAGF,IAAAG,kBAAJ,EAA4BX,SAA5B,CAAuCC,KAAvC,CACX,OAAOW,OAAA,CAAO,SAAP,CAAAC,cAAA,CAAgCC,mBAAA,CAAoB,SAApB,CAAhC;AAAgE,CAAC,CAAA,CAAGC,SAAA,CAAU,SAAV,CAAJ,EAA0B,EAA1B,CAA8BL,KAA9B,CAAoC,CACzGR,UAAWI,SAD8F,CAApC,CAAhE,CAPiB,CA5B1B,IAAIU,uBAAyBnB,OAAA,CAAQ,kEAAR,CAE7BoB,OAAAC,eAAA,CAAsBnB,OAAtB,CAA+B,YAA/B,CAA6C,CAC3CoB,MAAO,CAAA,CADoC,CAA7C,CAGApB,QAAA,CAAQ,SAAR,CAAA,CAAqB,IAAK,EAE1B,KAAIgB,UAAYC,sBAAA,CAAuBnB,OAAA,CAAQ,oDAAR,CAAvB,CAAhB,CAEIU,YAAcS,sBAAA,CAAuBnB,OAAA,CAAQ,sCAAR,CAAvB,CAEduB,OAAAA,CAAaJ,sBAAA,CAAuBnB,OAAA,CAAQ,sCAAR,CAAvB,CAEjB;IAAIe,OAASI,sBAAA,CAAuBnB,OAAA,CAAQ,iCAAR,CAAvB,CAAb,CAEIW,KAAOX,OAAA,CAAQ,+DAAR,CAFX,CAIIiB,oBAAsBE,sBAAA,CAAuBnB,OAAA,CAAQ,0FAAR,CAAvB,CAEtBwB,OAAAA,CAAoBL,sBAAA,CAAuBnB,OAAA,CAAQ,wFAAR,CAAvB,CAExB,KAAIyB,gBAAkBN,sBAAA,CAAuBnB,OAAA,CAAQ,sFAAR,CAAvB,CAElB0B;OAAAA,CAAkBP,sBAAA,CAAuBnB,OAAA,CAAQ,sFAAR,CAAvB,CAiBtBG,UAAAwB,aAAA,CAAyB,CAAC,WAAD,CAAc,OAAd,CAAuB,UAAvB,CAAmC,QAAnC,CACzBxB,UAAAyB,UAAA,CAA8D,CAE5DvB,UAAWkB,MAAA,CAAW,SAAX,CAAAM,OAFiD,CAK5DvB,MAAOiB,MAAA,CAAW,SAAX,CAAAO,KALqD,CAQ5DvB,SAAUgB,MAAA,CAAW,SAAX,CAAAO,KARkD,CAW5DtB,OAAQe,MAAA,CAAW,SAAX,CAAAO,KAXoD,CAa9D3B,UAAAA,UAAA,CAAsBc,mBAAA,CAAoB,SAApB,CACtBd,UAAA4B,QAAA,CAAoBP,MAAA,CAAkB,SAAlB,CACpBrB,UAAA6B,MAAA,CAAkBP,eAAA,CAAgB,SAAhB,CAClBtB,UAAA8B,MAAA,CAAkBP,OAAA,CAAgB,SAAhB,CAElBxB;OAAA,CAAQ,SAAR,CAAA,CADeC,SA7D6H;",
"sources":["node_modules/semantic-ui-react/dist/commonjs/modules/Accordion/Accordion.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$semantic_ui_react$dist$commonjs$modules$Accordion$Accordion\"] = function(global,require,module,exports) {\n\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _classnames = _interopRequireDefault(require(\"classnames\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _lib = require(\"../../lib\");\n\nvar _AccordionAccordion = _interopRequireDefault(require(\"./AccordionAccordion\"));\n\nvar _AccordionContent = _interopRequireDefault(require(\"./AccordionContent\"));\n\nvar _AccordionPanel = _interopRequireDefault(require(\"./AccordionPanel\"));\n\nvar _AccordionTitle = _interopRequireDefault(require(\"./AccordionTitle\"));\n\n/**\n * An accordion allows users to toggle the display of sections of content.\n */\nfunction Accordion(props) {\n  var className = props.className,\n      fluid = props.fluid,\n      inverted = props.inverted,\n      styled = props.styled;\n  var classes = (0, _classnames[\"default\"])('ui', (0, _lib.useKeyOnly)(fluid, 'fluid'), (0, _lib.useKeyOnly)(inverted, 'inverted'), (0, _lib.useKeyOnly)(styled, 'styled'), className);\n  var rest = (0, _lib.getUnhandledProps)(Accordion, props);\n  return _react[\"default\"].createElement(_AccordionAccordion[\"default\"], (0, _extends2[\"default\"])({}, rest, {\n    className: classes\n  }));\n}\n\nAccordion.handledProps = [\"className\", \"fluid\", \"inverted\", \"styled\"];\nAccordion.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** Additional classes. */\n  className: _propTypes[\"default\"].string,\n\n  /** Format to take up the width of its container. */\n  fluid: _propTypes[\"default\"].bool,\n\n  /** Format for dark backgrounds. */\n  inverted: _propTypes[\"default\"].bool,\n\n  /** Adds some basic styling to accordion panels. */\n  styled: _propTypes[\"default\"].bool\n} : {};\nAccordion.Accordion = _AccordionAccordion[\"default\"];\nAccordion.Content = _AccordionContent[\"default\"];\nAccordion.Panel = _AccordionPanel[\"default\"];\nAccordion.Title = _AccordionTitle[\"default\"];\nvar _default = Accordion;\nexports[\"default\"] = _default;\n};"],
"names":["shadow$provide","global","require","module","exports","Accordion","props","className","fluid","inverted","styled","classes","_classnames","_lib","useKeyOnly","rest","getUnhandledProps","_react","createElement","_AccordionAccordion","_extends2","_interopRequireDefault","Object","defineProperty","value","_propTypes","_AccordionContent","_AccordionPanel","_AccordionTitle","handledProps","propTypes","string","bool","Content","Panel","Title"]
}
