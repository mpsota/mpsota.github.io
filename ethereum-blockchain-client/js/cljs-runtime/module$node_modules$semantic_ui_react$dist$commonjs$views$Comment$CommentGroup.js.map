{
"version":3,
"file":"module$node_modules$semantic_ui_react$dist$commonjs$views$Comment$CommentGroup.js",
"lineCount":4,
"mappings":"AAAAA,cAAA,+EAAA,CAAmG,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAyB3IC,QAASA,aAAY,CAACC,KAAD,CAAQ,CAAA,IACvBC,UAAYD,KAAAC,UADW,CAEvBC,SAAWF,KAAAE,SAFY,CAGvBC,UAAYH,KAAAG,UAHW,CAIvBC,QAAUJ,KAAAI,QAJa,CAKvBC,QAAUL,KAAAK,QALa,CAMvBC,KAAON,KAAAM,KANgB,CAOvBC,SAAWP,KAAAO,SACXC,UAAAA,CAAU,CAAC,CAAA,CAAGC,WAAA,CAAY,SAAZ,CAAJ,EAA4B,IAA5B,CAAkCH,IAAlC,CAAwC,CAAC,CAAA,CAAGI,IAAAC,WAAJ,EAAqBR,SAArB,CAAgC,WAAhC,CAAxC,CAAsF,CAAC,CAAA,CAAGO,IAAAC,WAAJ,EAAqBN,OAArB,CAA8B,SAA9B,CAAtF,CAAgI,CAAC,CAAA,CAAGK,IAAAC,WAAJ,EAAqBJ,QAArB,CAA+B,UAA/B,CAAhI,CAA4K,UAA5K;AAAwLN,SAAxL,CACVW,UAAAA,CAAO,CAAC,CAAA,CAAGF,IAAAG,kBAAJ,EAA4Bd,YAA5B,CAA0CC,KAA1C,CACPc,MAAAA,CAAc,CAAC,CAAA,CAAGJ,IAAAK,eAAJ,EAAyBhB,YAAzB,CAAuCC,KAAvC,CAClB,OAAOgB,OAAA,CAAO,SAAP,CAAAC,cAAA,CAAgCH,KAAhC,CAA6C,CAAC,CAAA,CAAGI,SAAA,CAAU,SAAV,CAAJ,EAA0B,EAA1B,CAA8BN,SAA9B,CAAoC,CACtFX,UAAWO,SAD2E,CAApC,CAA7C,CAEHE,IAAAS,cAAAC,MAAA,CAAyBlB,QAAzB,CAAA,CAAqCE,OAArC,CAA+CF,QAF5C,CAXoB,CAtBzBmB,MAAAA,CAAyBzB,OAAA,CAAQ,kEAAR,CAE7B0B,OAAAC,eAAA,CAAsBzB,OAAtB,CAA+B,YAA/B,CAA6C,CAC3C0B,MAAO,CAAA,CADoC,CAA7C,CAGA1B,QAAA,CAAQ,SAAR,CAAA,CAAqB,IAAK,EAE1B,KAAIoB,UAAYG,MAAA,CAAuBzB,OAAA,CAAQ,oDAAR,CAAvB,CAEZ6B;MAAAA,CAAYJ,MAAA,CAAuBzB,OAAA,CAAQ,oCAAR,CAAvB,CAEhB,KAAIa,YAAcY,MAAA,CAAuBzB,OAAA,CAAQ,sCAAR,CAAvB,CAAlB,CAEI8B,WAAaL,MAAA,CAAuBzB,OAAA,CAAQ,sCAAR,CAAvB,CAFjB,CAIIoB,OAASK,MAAA,CAAuBzB,OAAA,CAAQ,iCAAR,CAAvB,CAJb,CAMIc,KAAOd,OAAA,CAAQ,+DAAR,CAqBXG,aAAA4B,aAAA,CAA4B,+DAAA,MAAA,CAAA,GAAA,CAC5B5B,aAAA6B,UAAA,CAAiE,CAE/DC,GAAIH,UAAA,CAAW,SAAX,CAAAI,YAF2D,CAK/D5B,SAAUwB,UAAA,CAAW,SAAX,CAAAK,KALqD;AAQ/D9B,UAAWyB,UAAA,CAAW,SAAX,CAAAM,OARoD,CAW/D7B,UAAWuB,UAAA,CAAW,SAAX,CAAAO,KAXoD,CAc/D7B,QAASM,IAAAwB,gBAAAC,iBAdsD,CAiB/D9B,QAASqB,UAAA,CAAW,SAAX,CAAAO,KAjBsD,CAoB/D3B,KAAMoB,UAAA,CAAW,SAAX,CAAAU,MAAA,CAA4B,CAAC,CAAA,CAAGX,MAAA,CAAU,SAAV,CAAJ,EAA0Bf,IAAA2B,IAAAC,MAA1B,CAA0C,QAA1C,CAA5B,CApByD,CAuB/D/B,SAAUmB,UAAA,CAAW,SAAX,CAAAO,KAvBqD,CA0BjEnC,QAAA,CAAQ,SAAR,CAAA,CADeC,YAnE4H;",
"sources":["node_modules/semantic-ui-react/dist/commonjs/views/Comment/CommentGroup.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$semantic_ui_react$dist$commonjs$views$Comment$CommentGroup\"] = function(global,require,module,exports) {\n\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _without2 = _interopRequireDefault(require(\"lodash/without\"));\n\nvar _classnames = _interopRequireDefault(require(\"classnames\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _lib = require(\"../../lib\");\n\n/**\n * Comments can be grouped.\n */\nfunction CommentGroup(props) {\n  var className = props.className,\n      children = props.children,\n      collapsed = props.collapsed,\n      content = props.content,\n      minimal = props.minimal,\n      size = props.size,\n      threaded = props.threaded;\n  var classes = (0, _classnames[\"default\"])('ui', size, (0, _lib.useKeyOnly)(collapsed, 'collapsed'), (0, _lib.useKeyOnly)(minimal, 'minimal'), (0, _lib.useKeyOnly)(threaded, 'threaded'), 'comments', className);\n  var rest = (0, _lib.getUnhandledProps)(CommentGroup, props);\n  var ElementType = (0, _lib.getElementType)(CommentGroup, props);\n  return _react[\"default\"].createElement(ElementType, (0, _extends2[\"default\"])({}, rest, {\n    className: classes\n  }), _lib.childrenUtils.isNil(children) ? content : children);\n}\n\nCommentGroup.handledProps = [\"as\", \"children\", \"className\", \"collapsed\", \"content\", \"minimal\", \"size\", \"threaded\"];\nCommentGroup.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: _propTypes[\"default\"].elementType,\n\n  /** Primary content. */\n  children: _propTypes[\"default\"].node,\n\n  /** Additional classes. */\n  className: _propTypes[\"default\"].string,\n\n  /** Comments can be collapsed, or hidden from view. */\n  collapsed: _propTypes[\"default\"].bool,\n\n  /** Shorthand for primary content. */\n  content: _lib.customPropTypes.contentShorthand,\n\n  /** Comments can hide extra information unless a user shows intent to interact with a comment. */\n  minimal: _propTypes[\"default\"].bool,\n\n  /** Comments can have different sizes. */\n  size: _propTypes[\"default\"].oneOf((0, _without2[\"default\"])(_lib.SUI.SIZES, 'medium')),\n\n  /** A comment list can be threaded to showing the relationship between conversations. */\n  threaded: _propTypes[\"default\"].bool\n} : {};\nvar _default = CommentGroup;\nexports[\"default\"] = _default;\n};"],
"names":["shadow$provide","global","require","module","exports","CommentGroup","props","className","children","collapsed","content","minimal","size","threaded","classes","_classnames","_lib","useKeyOnly","rest","getUnhandledProps","ElementType","getElementType","_react","createElement","_extends2","childrenUtils","isNil","_interopRequireDefault","Object","defineProperty","value","_without2","_propTypes","handledProps","propTypes","as","elementType","node","string","bool","customPropTypes","contentShorthand","oneOf","SUI","SIZES"]
}
