{
"version":3,
"file":"module$node_modules$lodash$_createAggregator.js",
"lineCount":2,
"mappings":"AAAAA,cAAA,6CAAA,CAAiE,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAAA,IACrGC,gBAAkBH,OAAA,CAAQ,6CAAR,CADmF,CAErGI,eAAiBJ,OAAA,CAAQ,4CAAR,CAFoF,CAGrGK,aAAeL,OAAA,CAAQ,0CAAR,CAHsF,CAIrGM,QAAUN,OAAA,CAAQ,oCAAR,CAmBdC,OAAAC,QAAA,CATAK,QAAyB,CAACC,MAAD,CAASC,WAAT,CAAsB,CAC7C,MAAO,SAAQ,CAACC,UAAD,CAAaC,QAAb,CAAuB,CAAA,IAChCC,KAAON,OAAA,CAAQI,UAAR,CAAA,CAAsBP,eAAtB,CAAwCC,cADf;AAEhCS,YAAcJ,WAAA,CAAcA,WAAA,EAAd,CAA8B,EAEhD,OAAOG,KAAA,CAAKF,UAAL,CAAiBF,MAAjB,CAAyBH,YAAA,CAAaM,QAAb,CAAuB,CAAvB,CAAzB,CAAoDE,WAApD,CAJ6B,CADO,CAd0D;",
"sources":["node_modules/lodash/_createAggregator.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$lodash$_createAggregator\"] = function(global,require,module,exports) {\nvar arrayAggregator = require('./_arrayAggregator'),\n    baseAggregator = require('./_baseAggregator'),\n    baseIteratee = require('./_baseIteratee'),\n    isArray = require('./isArray');\n\n/**\n * Creates a function like `_.groupBy`.\n *\n * @private\n * @param {Function} setter The function to set accumulator values.\n * @param {Function} [initializer] The accumulator object initializer.\n * @returns {Function} Returns the new aggregator function.\n */\nfunction createAggregator(setter, initializer) {\n  return function(collection, iteratee) {\n    var func = isArray(collection) ? arrayAggregator : baseAggregator,\n        accumulator = initializer ? initializer() : {};\n\n    return func(collection, setter, baseIteratee(iteratee, 2), accumulator);\n  };\n}\n\nmodule.exports = createAggregator;\n\n};"],
"names":["shadow$provide","global","require","module","exports","arrayAggregator","baseAggregator","baseIteratee","isArray","createAggregator","setter","initializer","collection","iteratee","func","accumulator"]
}
