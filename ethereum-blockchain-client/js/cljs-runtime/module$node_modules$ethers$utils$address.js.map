{
"version":3,
"file":"module$node_modules$ethers$utils$address.js",
"lineCount":8,
"mappings":"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",
"sources":["node_modules/ethers/utils/address.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$ethers$utils$address\"] = function(global,require,module,exports) {\n'use strict';\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n// We use this for base 36 maths\nvar bn_js_1 = __importDefault(require(\"bn.js\"));\nvar bytes_1 = require(\"./bytes\");\nvar keccak256_1 = require(\"./keccak256\");\nvar rlp_1 = require(\"./rlp\");\nvar errors = require(\"../errors\");\n///////////////////////////////\nfunction getChecksumAddress(address) {\n    if (typeof (address) !== 'string' || !address.match(/^0x[0-9A-Fa-f]{40}$/)) {\n        errors.throwError('invalid address', errors.INVALID_ARGUMENT, { arg: 'address', value: address });\n    }\n    address = address.toLowerCase();\n    var chars = address.substring(2).split('');\n    var hashed = new Uint8Array(40);\n    for (var i_1 = 0; i_1 < 40; i_1++) {\n        hashed[i_1] = chars[i_1].charCodeAt(0);\n    }\n    hashed = bytes_1.arrayify(keccak256_1.keccak256(hashed));\n    for (var i = 0; i < 40; i += 2) {\n        if ((hashed[i >> 1] >> 4) >= 8) {\n            chars[i] = chars[i].toUpperCase();\n        }\n        if ((hashed[i >> 1] & 0x0f) >= 8) {\n            chars[i + 1] = chars[i + 1].toUpperCase();\n        }\n    }\n    return '0x' + chars.join('');\n}\n// Shims for environments that are missing some required constants and functions\nvar MAX_SAFE_INTEGER = 0x1fffffffffffff;\nfunction log10(x) {\n    if (Math.log10) {\n        return Math.log10(x);\n    }\n    return Math.log(x) / Math.LN10;\n}\n// See: https://en.wikipedia.org/wiki/International_Bank_Account_Number\n// Create lookup table\nvar ibanLookup = {};\nfor (var i = 0; i < 10; i++) {\n    ibanLookup[String(i)] = String(i);\n}\nfor (var i = 0; i < 26; i++) {\n    ibanLookup[String.fromCharCode(65 + i)] = String(10 + i);\n}\n// How many decimal digits can we process? (for 64-bit float, this is 15)\nvar safeDigits = Math.floor(log10(MAX_SAFE_INTEGER));\nfunction ibanChecksum(address) {\n    address = address.toUpperCase();\n    address = address.substring(4) + address.substring(0, 2) + '00';\n    var expanded = '';\n    address.split('').forEach(function (c) {\n        expanded += ibanLookup[c];\n    });\n    // Javascript can handle integers safely up to 15 (decimal) digits\n    while (expanded.length >= safeDigits) {\n        var block = expanded.substring(0, safeDigits);\n        expanded = parseInt(block, 10) % 97 + expanded.substring(block.length);\n    }\n    var checksum = String(98 - (parseInt(expanded, 10) % 97));\n    while (checksum.length < 2) {\n        checksum = '0' + checksum;\n    }\n    return checksum;\n}\n;\nfunction getAddress(address) {\n    var result = null;\n    if (typeof (address) !== 'string') {\n        errors.throwError('invalid address', errors.INVALID_ARGUMENT, { arg: 'address', value: address });\n    }\n    if (address.match(/^(0x)?[0-9a-fA-F]{40}$/)) {\n        // Missing the 0x prefix\n        if (address.substring(0, 2) !== '0x') {\n            address = '0x' + address;\n        }\n        result = getChecksumAddress(address);\n        // It is a checksummed address with a bad checksum\n        if (address.match(/([A-F].*[a-f])|([a-f].*[A-F])/) && result !== address) {\n            errors.throwError('bad address checksum', errors.INVALID_ARGUMENT, { arg: 'address', value: address });\n        }\n        // Maybe ICAP? (we only support direct mode)\n    }\n    else if (address.match(/^XE[0-9]{2}[0-9A-Za-z]{30,31}$/)) {\n        // It is an ICAP address with a bad checksum\n        if (address.substring(2, 4) !== ibanChecksum(address)) {\n            errors.throwError('bad icap checksum', errors.INVALID_ARGUMENT, { arg: 'address', value: address });\n        }\n        result = (new bn_js_1.default.BN(address.substring(4), 36)).toString(16);\n        while (result.length < 40) {\n            result = '0' + result;\n        }\n        result = getChecksumAddress('0x' + result);\n    }\n    else {\n        errors.throwError('invalid address', errors.INVALID_ARGUMENT, { arg: 'address', value: address });\n    }\n    return result;\n}\nexports.getAddress = getAddress;\nfunction getIcapAddress(address) {\n    var base36 = (new bn_js_1.default.BN(getAddress(address).substring(2), 16)).toString(36).toUpperCase();\n    while (base36.length < 30) {\n        base36 = '0' + base36;\n    }\n    return 'XE' + ibanChecksum('XE00' + base36) + base36;\n}\nexports.getIcapAddress = getIcapAddress;\n// http://ethereum.stackexchange.com/questions/760/how-is-the-address-of-an-ethereum-contract-computed\nfunction getContractAddress(transaction) {\n    if (!transaction.from) {\n        throw new Error('missing from address');\n    }\n    var nonce = transaction.nonce;\n    return getAddress('0x' + keccak256_1.keccak256(rlp_1.encode([\n        getAddress(transaction.from),\n        bytes_1.stripZeros(bytes_1.hexlify(nonce))\n    ])).substring(26));\n}\nexports.getContractAddress = getContractAddress;\n// See: https://eips.ethereum.org/EIPS/eip-1014\nfunction getCreate2Address(options) {\n    var initCodeHash = options.initCodeHash;\n    if (options.initCode) {\n        if (initCodeHash) {\n            if (keccak256_1.keccak256(options.initCode) !== initCodeHash) {\n                errors.throwError(\"initCode/initCodeHash mismatch\", errors.INVALID_ARGUMENT, {\n                    arg: \"options\", value: options\n                });\n            }\n        }\n        else {\n            initCodeHash = keccak256_1.keccak256(options.initCode);\n        }\n    }\n    if (!initCodeHash) {\n        errors.throwError(\"missing initCode or initCodeHash\", errors.INVALID_ARGUMENT, {\n            arg: \"options\", value: options\n        });\n    }\n    var from = getAddress(options.from);\n    var salt = bytes_1.arrayify(options.salt);\n    if (salt.length !== 32) {\n        errors.throwError(\"invalid salt\", errors.INVALID_ARGUMENT, {\n            arg: \"options\", value: options\n        });\n    }\n    return getAddress(\"0x\" + keccak256_1.keccak256(bytes_1.concat([\n        \"0xff\",\n        from,\n        salt,\n        initCodeHash\n    ])).substring(26));\n}\nexports.getCreate2Address = getCreate2Address;\n\n};"],
"names":["shadow$provide","global","require","module","exports","getChecksumAddress","address","match","errors","throwError","INVALID_ARGUMENT","arg","value","toLowerCase","chars","substring","split","hashed","Uint8Array","i_1","charCodeAt","bytes_1","arrayify","keccak256_1","keccak256","i","toUpperCase","join","ibanChecksum","expanded","forEach","c","ibanLookup","length","safeDigits","block","parseInt","checksum","String","getAddress","result","toString","bn_js_1","default","BN","__importDefault","mod","__esModule","Object","defineProperty","rlp_1","fromCharCode","Math","floor","log10","MAX_SAFE_INTEGER","log","LN10","getIcapAddress","base36","getContractAddress","transaction","from","Error","nonce","encode","stripZeros","hexlify","getCreate2Address","options","initCodeHash","initCode","salt","concat"]
}
