shadow$provide.module$node_modules$ethers$utils$errors=function(global,require,module,exports){function throwError(message,code,params){if(_censorErrors)throw Error("unknown error");code||(code=exports.UNKNOWN_ERROR);params||(params={});var messageDetails=[];Object.keys(params).forEach(function(key){try{messageDetails.push(key+"\x3d"+JSON.stringify(params[key]))}catch(error$10){messageDetails.push(key+"\x3d"+JSON.stringify(params[key].toString()))}});var reason=message;messageDetails.length&&(message+=
" ("+messageDetails.join(", ")+")");var error=Error(message);error.reason=reason;error.code=code;Object.keys(params).forEach(function(key){error[key]=params[key]});throw error;}Object.defineProperty(exports,"__esModule",{value:!0});exports.UNKNOWN_ERROR="UNKNOWN_ERROR";exports.NOT_IMPLEMENTED="NOT_IMPLEMENTED";exports.MISSING_NEW="MISSING_NEW";exports.CALL_EXCEPTION="CALL_EXCEPTION";exports.INVALID_ARGUMENT="INVALID_ARGUMENT";exports.MISSING_ARGUMENT="MISSING_ARGUMENT";exports.UNEXPECTED_ARGUMENT=
"UNEXPECTED_ARGUMENT";exports.NUMERIC_FAULT="NUMERIC_FAULT";exports.UNSUPPORTED_OPERATION="UNSUPPORTED_OPERATION";var _permanentCensorErrors=!1,_censorErrors=!1;exports.throwError=throwError;exports.checkNew=function(self,kind){self instanceof kind||throwError("missing new",exports.MISSING_NEW,{name:kind.name})};exports.checkArgumentCount=function(count,expectedCount,suffix){suffix||(suffix="");count<expectedCount&&throwError("missing argument"+suffix,exports.MISSING_ARGUMENT,{count:count,expectedCount:expectedCount});
count>expectedCount&&throwError("too many arguments"+suffix,exports.UNEXPECTED_ARGUMENT,{count:count,expectedCount:expectedCount})};exports.setCensorship=function(censorship,permanent){_permanentCensorErrors&&throwError("error censorship permanent",exports.UNSUPPORTED_OPERATION,{operation:"setCersorship"});_censorErrors=!!censorship;_permanentCensorErrors=!!permanent}}
//# sourceMappingURL=module$node_modules$ethers$utils$errors.js.map
