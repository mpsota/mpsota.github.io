{
"version":3,
"file":"module$node_modules$lodash$_baseSetData.js",
"lineCount":1,
"mappings":"AAAAA,cAAA,wCAAA,CAA4D,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAChGC,MAAAA,CAAWH,OAAA,CAAQ,qCAAR,CAAf,KACII,QAAUJ,OAAA,CAAQ,qCAAR,CAedC,OAAAC,QAAA,CALmBE,OAADC,CAAsB,QAAQ,CAACC,IAAD,CAAOC,IAAP,CAAa,CAC3DH,OAAAI,IAAA,CAAYF,IAAZ,CAAkBC,IAAlB,CACA,OAAOD,KAFoD,CAA3CD,CAAWF,MAZuE;",
"sources":["node_modules/lodash/_baseSetData.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$lodash$_baseSetData\"] = function(global,require,module,exports) {\nvar identity = require('./identity'),\n    metaMap = require('./_metaMap');\n\n/**\n * The base implementation of `setData` without support for hot loop shorting.\n *\n * @private\n * @param {Function} func The function to associate metadata with.\n * @param {*} data The metadata.\n * @returns {Function} Returns `func`.\n */\nvar baseSetData = !metaMap ? identity : function(func, data) {\n  metaMap.set(func, data);\n  return func;\n};\n\nmodule.exports = baseSetData;\n\n};"],
"names":["shadow$provide","global","require","module","exports","identity","metaMap","baseSetData","func","data","set"]
}
