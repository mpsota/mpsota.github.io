{
"version":3,
"file":"module$node_modules$lodash$_baseClamp.js",
"lineCount":1,
"mappings":"AAAAA,cAAA,sCAAA,CAA0D,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAsBlGD,MAAAC,QAAA,CAZAC,QAAkB,CAACC,MAAD,CAASC,KAAT,CAAgBC,KAAhB,CAAuB,CACnCF,MAAJ,GAAeA,MAAf,GACgBG,IAAAA,EAGd,GAHID,KAGJ,GAFEF,MAEF,CAFWA,MAAA,EAAUE,KAAV,CAAkBF,MAAlB,CAA2BE,KAEtC,EAAcC,IAAAA,EAAd,GAAIF,KAAJ,GACED,MADF,CACWA,MAAA,EAAUC,KAAV,CAAkBD,MAAlB,CAA2BC,KADtC,CAJF,CAQA,OAAOD,OATgC,CAVyD;",
"sources":["node_modules/lodash/_baseClamp.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$lodash$_baseClamp\"] = function(global,require,module,exports) {\n/**\n * The base implementation of `_.clamp` which doesn't coerce arguments.\n *\n * @private\n * @param {number} number The number to clamp.\n * @param {number} [lower] The lower bound.\n * @param {number} upper The upper bound.\n * @returns {number} Returns the clamped number.\n */\nfunction baseClamp(number, lower, upper) {\n  if (number === number) {\n    if (upper !== undefined) {\n      number = number <= upper ? number : upper;\n    }\n    if (lower !== undefined) {\n      number = number >= lower ? number : lower;\n    }\n  }\n  return number;\n}\n\nmodule.exports = baseClamp;\n\n};"],
"names":["shadow$provide","global","require","module","exports","baseClamp","number","lower","upper","undefined"]
}
