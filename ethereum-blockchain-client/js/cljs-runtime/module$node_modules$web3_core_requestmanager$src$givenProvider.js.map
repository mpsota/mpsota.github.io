{
"version":3,
"file":"module$node_modules$web3_core_requestmanager$src$givenProvider.js",
"lineCount":3,
"mappings":"AAAAA,cAAA,+DAAA,CAAmF,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAyBvHC,OAAAA,CAAgB,IAKpB,IAAI,CACFJ,MAAA,CAASK,QAAA,CAAS,aAAT,CAAA,EADP,CAEF,MAAOC,CAAP,CAAU,CACVN,MAAA,CAASO,MADC,CAK0B,WAAtC,GAAG,MAAOP,OAAAQ,iBAAV,CACIJ,OADJ,CACoBJ,MAAAQ,iBADpB,CAIiC,WAJjC,GAIU,MAAOR,OAAAS,KAJjB,EAIgDT,MAAAS,KAAAC,gBAJhD,GAMOV,MAAAS,KAAAC,gBAAAC,UA2CH,GA1CIX,MAAAS,KAAAC,gBAAAE,KACA,CADmCZ,MAAAS,KAAAC,gBAAAC,UACnC,CAAA,OAAOX,MAAAS,KAAAC,gBAAAC,UAyCX,EArCG,CAACX,MAAAS,KAAAC,gBAAAG,GAqCJ;AApCIb,MAAAS,KAAAC,gBAAAI,WAoCJ,EAnCgE,oBAmChE,GAnCId,MAAAS,KAAAC,gBAAAI,WAAAC,YAAAC,KAmCJ,GAjCIhB,MAAAS,KAAAC,gBAAAG,GAiCJ,CAjCqCI,QAAS,CAACC,IAAD,CAAOC,QAAP,CAAiB,CAEvD,GAAuB,UAAvB,GAAG,MAAOA,SAAV,CACI,KAAUC,MAAJ,CAAU,mDAAV,CAAN,CAEJ,OAAOF,IAAP,EACI,KAAK,MAAL,CACI,IAAAJ,WAAAD,GAAA,CAAmB,MAAnB,CAA2B,QAAQ,CAACQ,IAAD,CAAO,CACtC,IAAIC,OAAS,EAEbD,KAAA,CAAOA,IAAAE,SAAA,EAEP,IAAI,CACAD,MAAA,CAASE,IAAAC,MAAA,CAAWJ,IAAX,CADT,CAEF,MAAMf,IAAN,CAAS,CACP,MAAOa,SAAA,CAAaC,KAAJ,CAAU,8BAAV,CAA2CC,IAA3C,CAAT,CADA,CAKPC,MAAAI,GAAJ,EAA6D,EAA7D,GAAiBJ,MAAAK,OAAAC,QAAA,CAAsB,eAAtB,CAAjB;AACIT,QAAA,CAAS,IAAT,CAAeG,MAAf,CAbkC,CAA1C,CAiBA,MAEJ,SACI,IAAAR,WAAAD,GAAA,CAAmBK,IAAnB,CAAyBC,QAAzB,CAtBR,CALuD,CAiC/D,EAAAf,OAAA,CAAgBJ,MAAAS,KAAAC,gBAjDpB,CAsDAR,OAAAC,QAAA,CAAiBC,OA3F0G;",
"sources":["node_modules/web3-core-requestmanager/src/givenProvider.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$web3_core_requestmanager$src$givenProvider\"] = function(global,require,module,exports) {\n/*\n This file is part of web3.js.\n\n web3.js is free software: you can redistribute it and/or modify\n it under the terms of the GNU Lesser General Public License as published by\n the Free Software Foundation, either version 3 of the License, or\n (at your option) any later version.\n\n web3.js is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n GNU Lesser General Public License for more details.\n\n You should have received a copy of the GNU Lesser General Public License\n along with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n */\n/**\n * @file givenProvider.js\n * @author Fabian Vogelsteller <fabian@ethereum.org>\n * @date 2017\n */\n\n\"use strict\";\n\nvar givenProvider = null;\n\n// ADD GIVEN PROVIDER\n/* jshint ignore:start */\nvar global;\ntry {\n  global = Function('return this')();\n} catch (e) {\n  global = window;\n}\n\n// EthereumProvider\nif(typeof global.ethereumProvider !== 'undefined') {\n    givenProvider = global.ethereumProvider;\n\n// Legacy web3.currentProvider\n} else if(typeof global.web3 !== 'undefined' && global.web3.currentProvider) {\n\n    if(global.web3.currentProvider.sendAsync) {\n        global.web3.currentProvider.send = global.web3.currentProvider.sendAsync;\n        delete global.web3.currentProvider.sendAsync;\n    }\n\n    // if connection is 'ipcProviderWrapper', add subscription support\n    if(!global.web3.currentProvider.on &&\n        global.web3.currentProvider.connection &&\n        global.web3.currentProvider.connection.constructor.name === 'ipcProviderWrapper') {\n\n        global.web3.currentProvider.on = function (type, callback) {\n\n            if(typeof callback !== 'function')\n                throw new Error('The second parameter callback must be a function.');\n\n            switch(type){\n                case 'data':\n                    this.connection.on('data', function(data) {\n                        var result = '';\n\n                        data = data.toString();\n\n                        try {\n                            result = JSON.parse(data);\n                        } catch(e) {\n                            return callback(new Error('Couldn\\'t parse response data'+ data));\n                        }\n\n                        // notification\n                        if(!result.id && result.method.indexOf('_subscription') !== -1) {\n                            callback(null, result);\n                        }\n\n                    });\n                    break;\n\n                default:\n                    this.connection.on(type, callback);\n                    break;\n            }\n        };\n    }\n\n    givenProvider = global.web3.currentProvider;\n}\n/* jshint ignore:end */\n\n\nmodule.exports = givenProvider;\n\n};"],
"names":["shadow$provide","global","require","module","exports","givenProvider","Function","e","window","ethereumProvider","web3","currentProvider","sendAsync","send","on","connection","constructor","name","global.web3.currentProvider.on","type","callback","Error","data","result","toString","JSON","parse","id","method","indexOf"]
}
