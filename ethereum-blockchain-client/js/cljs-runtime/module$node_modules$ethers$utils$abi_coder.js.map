{
"version":3,
"file":"module$node_modules$ethers$utils$abi_coder.js",
"lineCount":41,
"mappings":"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",
"sources":["node_modules/ethers/utils/abi-coder.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$ethers$utils$abi_coder\"] = function(global,require,module,exports) {\n'use strict';\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n    result[\"default\"] = mod;\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n// See: https://github.com/ethereum/wiki/wiki/Ethereum-Contract-ABI\nvar constants_1 = require(\"../constants\");\nvar errors = __importStar(require(\"../errors\"));\nvar address_1 = require(\"./address\");\nvar bignumber_1 = require(\"./bignumber\");\nvar bytes_1 = require(\"./bytes\");\nvar utf8_1 = require(\"./utf8\");\nvar properties_1 = require(\"./properties\");\n///////////////////////////////\nvar paramTypeBytes = new RegExp(/^bytes([0-9]*)$/);\nvar paramTypeNumber = new RegExp(/^(u?int)([0-9]*)$/);\nvar paramTypeArray = new RegExp(/^(.*)\\[([0-9]*)\\]$/);\nexports.defaultCoerceFunc = function (type, value) {\n    var match = type.match(paramTypeNumber);\n    if (match && parseInt(match[2]) <= 48) {\n        return value.toNumber();\n    }\n    return value;\n};\n///////////////////////////////////\n// Parsing for Solidity Signatures\nvar regexParen = new RegExp(\"^([^)(]*)\\\\((.*)\\\\)([^)(]*)$\");\nvar regexIdentifier = new RegExp(\"^[A-Za-z_][A-Za-z0-9_]*$\");\nfunction verifyType(type) {\n    // These need to be transformed to their full description\n    if (type.match(/^uint($|[^1-9])/)) {\n        type = 'uint256' + type.substring(4);\n    }\n    else if (type.match(/^int($|[^1-9])/)) {\n        type = 'int256' + type.substring(3);\n    }\n    return type;\n}\nfunction parseParam(param, allowIndexed) {\n    var originalParam = param;\n    function throwError(i) {\n        throw new Error('unexpected character \"' + originalParam[i] + '\" at position ' + i + ' in \"' + originalParam + '\"');\n    }\n    param = param.replace(/\\s/g, ' ');\n    var parent = { type: '', name: '', state: { allowType: true } };\n    var node = parent;\n    for (var i = 0; i < param.length; i++) {\n        var c = param[i];\n        switch (c) {\n            case '(':\n                if (!node.state.allowParams) {\n                    throwError(i);\n                }\n                node.state.allowType = false;\n                node.type = verifyType(node.type);\n                node.components = [{ type: '', name: '', parent: node, state: { allowType: true } }];\n                node = node.components[0];\n                break;\n            case ')':\n                delete node.state;\n                if (allowIndexed && node.name === 'indexed') {\n                    node.indexed = true;\n                    node.name = '';\n                }\n                node.type = verifyType(node.type);\n                var child = node;\n                node = node.parent;\n                if (!node) {\n                    throwError(i);\n                }\n                delete child.parent;\n                node.state.allowParams = false;\n                node.state.allowName = true;\n                node.state.allowArray = true;\n                break;\n            case ',':\n                delete node.state;\n                if (allowIndexed && node.name === 'indexed') {\n                    node.indexed = true;\n                    node.name = '';\n                }\n                node.type = verifyType(node.type);\n                var sibling = { type: '', name: '', parent: node.parent, state: { allowType: true } };\n                node.parent.components.push(sibling);\n                delete node.parent;\n                node = sibling;\n                break;\n            // Hit a space...\n            case ' ':\n                // If reading type, the type is done and may read a param or name\n                if (node.state.allowType) {\n                    if (node.type !== '') {\n                        node.type = verifyType(node.type);\n                        delete node.state.allowType;\n                        node.state.allowName = true;\n                        node.state.allowParams = true;\n                    }\n                }\n                // If reading name, the name is done\n                if (node.state.allowName) {\n                    if (node.name !== '') {\n                        if (allowIndexed && node.name === 'indexed') {\n                            node.indexed = true;\n                            node.name = '';\n                        }\n                        else {\n                            node.state.allowName = false;\n                        }\n                    }\n                }\n                break;\n            case '[':\n                if (!node.state.allowArray) {\n                    throwError(i);\n                }\n                node.type += c;\n                node.state.allowArray = false;\n                node.state.allowName = false;\n                node.state.readArray = true;\n                break;\n            case ']':\n                if (!node.state.readArray) {\n                    throwError(i);\n                }\n                node.type += c;\n                node.state.readArray = false;\n                node.state.allowArray = true;\n                node.state.allowName = true;\n                break;\n            default:\n                if (node.state.allowType) {\n                    node.type += c;\n                    node.state.allowParams = true;\n                    node.state.allowArray = true;\n                }\n                else if (node.state.allowName) {\n                    node.name += c;\n                    delete node.state.allowArray;\n                }\n                else if (node.state.readArray) {\n                    node.type += c;\n                }\n                else {\n                    throwError(i);\n                }\n        }\n    }\n    if (node.parent) {\n        throw new Error(\"unexpected eof\");\n    }\n    delete parent.state;\n    if (allowIndexed && node.name === 'indexed') {\n        node.indexed = true;\n        node.name = '';\n    }\n    parent.type = verifyType(parent.type);\n    return parent;\n}\n// @TODO: Better return type\nfunction parseSignatureEvent(fragment) {\n    var abi = {\n        anonymous: false,\n        inputs: [],\n        name: '',\n        type: 'event'\n    };\n    var match = fragment.match(regexParen);\n    if (!match) {\n        throw new Error('invalid event: ' + fragment);\n    }\n    abi.name = match[1].trim();\n    splitNesting(match[2]).forEach(function (param) {\n        param = parseParam(param, true);\n        param.indexed = !!param.indexed;\n        abi.inputs.push(param);\n    });\n    match[3].split(' ').forEach(function (modifier) {\n        switch (modifier) {\n            case 'anonymous':\n                abi.anonymous = true;\n                break;\n            case '':\n                break;\n            default:\n                errors.info('unknown modifier: ' + modifier);\n        }\n    });\n    if (abi.name && !abi.name.match(regexIdentifier)) {\n        throw new Error('invalid identifier: \"' + abi.name + '\"');\n    }\n    return abi;\n}\nfunction parseSignatureFunction(fragment) {\n    var abi = {\n        constant: false,\n        gas: null,\n        inputs: [],\n        name: '',\n        outputs: [],\n        payable: false,\n        stateMutability: null,\n        type: 'function'\n    };\n    var comps = fragment.split('@');\n    if (comps.length !== 1) {\n        if (comps.length > 2) {\n            throw new Error('invalid signature');\n        }\n        if (!comps[1].match(/^[0-9]+$/)) {\n            throw new Error('invalid signature gas');\n        }\n        abi.gas = bignumber_1.bigNumberify(comps[1]);\n        fragment = comps[0];\n    }\n    comps = fragment.split(' returns ');\n    var left = comps[0].match(regexParen);\n    if (!left) {\n        throw new Error('invalid signature');\n    }\n    abi.name = left[1].trim();\n    if (!abi.name.match(regexIdentifier)) {\n        throw new Error('invalid identifier: \"' + left[1] + '\"');\n    }\n    splitNesting(left[2]).forEach(function (param) {\n        abi.inputs.push(parseParam(param));\n    });\n    left[3].split(' ').forEach(function (modifier) {\n        switch (modifier) {\n            case 'constant':\n                abi.constant = true;\n                break;\n            case 'payable':\n                abi.payable = true;\n                abi.stateMutability = 'payable';\n                break;\n            case 'pure':\n                abi.constant = true;\n                abi.stateMutability = 'pure';\n                break;\n            case 'view':\n                abi.constant = true;\n                abi.stateMutability = 'view';\n                break;\n            case 'external':\n            case 'public':\n            case '':\n                break;\n            default:\n                errors.info('unknown modifier: ' + modifier);\n        }\n    });\n    // We have outputs\n    if (comps.length > 1) {\n        var right = comps[1].match(regexParen);\n        if (right[1].trim() != '' || right[3].trim() != '') {\n            throw new Error('unexpected tokens');\n        }\n        splitNesting(right[2]).forEach(function (param) {\n            abi.outputs.push(parseParam(param));\n        });\n    }\n    if (abi.name === 'constructor') {\n        abi.type = \"constructor\";\n        if (abi.outputs.length) {\n            throw new Error('constructor may not have outputs');\n        }\n        delete abi.name;\n        delete abi.outputs;\n    }\n    return abi;\n}\nfunction parseParamType(type) {\n    return parseParam(type, true);\n}\nexports.parseParamType = parseParamType;\n// @TODO: Allow a second boolean to expose names\nfunction formatParamType(paramType) {\n    return getParamCoder(exports.defaultCoerceFunc, paramType).type;\n}\nexports.formatParamType = formatParamType;\n// @TODO: Allow a second boolean to expose names and modifiers\nfunction formatSignature(fragment) {\n    return fragment.name + '(' + fragment.inputs.map(function (i) { return formatParamType(i); }).join(',') + ')';\n}\nexports.formatSignature = formatSignature;\nfunction parseSignature(fragment) {\n    if (typeof (fragment) === 'string') {\n        // Make sure the \"returns\" is surrounded by a space and all whitespace is exactly one space\n        fragment = fragment.replace(/\\s/g, ' ');\n        fragment = fragment.replace(/\\(/g, ' (').replace(/\\)/g, ') ').replace(/\\s+/g, ' ');\n        fragment = fragment.trim();\n        if (fragment.substring(0, 6) === 'event ') {\n            return parseSignatureEvent(fragment.substring(6).trim());\n        }\n        else {\n            if (fragment.substring(0, 9) === 'function ') {\n                fragment = fragment.substring(9);\n            }\n            return parseSignatureFunction(fragment.trim());\n        }\n    }\n    throw new Error('unknown signature');\n}\nexports.parseSignature = parseSignature;\nvar Coder = /** @class */ (function () {\n    function Coder(coerceFunc, name, type, localName, dynamic) {\n        this.coerceFunc = coerceFunc;\n        this.name = name;\n        this.type = type;\n        this.localName = localName;\n        this.dynamic = dynamic;\n    }\n    return Coder;\n}());\n// Clones the functionality of an existing Coder, but without a localName\nvar CoderAnonymous = /** @class */ (function (_super) {\n    __extends(CoderAnonymous, _super);\n    function CoderAnonymous(coder) {\n        var _this = _super.call(this, coder.coerceFunc, coder.name, coder.type, undefined, coder.dynamic) || this;\n        properties_1.defineReadOnly(_this, 'coder', coder);\n        return _this;\n    }\n    CoderAnonymous.prototype.encode = function (value) { return this.coder.encode(value); };\n    CoderAnonymous.prototype.decode = function (data, offset) { return this.coder.decode(data, offset); };\n    return CoderAnonymous;\n}(Coder));\nvar CoderNull = /** @class */ (function (_super) {\n    __extends(CoderNull, _super);\n    function CoderNull(coerceFunc, localName) {\n        return _super.call(this, coerceFunc, 'null', '', localName, false) || this;\n    }\n    CoderNull.prototype.encode = function (value) {\n        return bytes_1.arrayify([]);\n    };\n    CoderNull.prototype.decode = function (data, offset) {\n        if (offset > data.length) {\n            throw new Error('invalid null');\n        }\n        return {\n            consumed: 0,\n            value: this.coerceFunc('null', undefined)\n        };\n    };\n    return CoderNull;\n}(Coder));\nvar CoderNumber = /** @class */ (function (_super) {\n    __extends(CoderNumber, _super);\n    function CoderNumber(coerceFunc, size, signed, localName) {\n        var _this = this;\n        var name = ((signed ? 'int' : 'uint') + (size * 8));\n        _this = _super.call(this, coerceFunc, name, name, localName, false) || this;\n        _this.size = size;\n        _this.signed = signed;\n        return _this;\n    }\n    CoderNumber.prototype.encode = function (value) {\n        try {\n            var v = bignumber_1.bigNumberify(value);\n            if (this.signed) {\n                var bounds = constants_1.MaxUint256.maskn(this.size * 8 - 1);\n                if (v.gt(bounds)) {\n                    throw new Error('out-of-bounds');\n                }\n                bounds = bounds.add(constants_1.One).mul(constants_1.NegativeOne);\n                if (v.lt(bounds)) {\n                    throw new Error('out-of-bounds');\n                }\n            }\n            else if (v.lt(constants_1.Zero) || v.gt(constants_1.MaxUint256.maskn(this.size * 8))) {\n                throw new Error('out-of-bounds');\n            }\n            v = v.toTwos(this.size * 8).maskn(this.size * 8);\n            if (this.signed) {\n                v = v.fromTwos(this.size * 8).toTwos(256);\n            }\n            return bytes_1.padZeros(bytes_1.arrayify(v), 32);\n        }\n        catch (error) {\n            errors.throwError('invalid number value', errors.INVALID_ARGUMENT, {\n                arg: this.localName,\n                coderType: this.name,\n                value: value\n            });\n        }\n        return null;\n    };\n    CoderNumber.prototype.decode = function (data, offset) {\n        if (data.length < offset + 32) {\n            errors.throwError('insufficient data for ' + this.name + ' type', errors.INVALID_ARGUMENT, {\n                arg: this.localName,\n                coderType: this.name,\n                value: bytes_1.hexlify(data.slice(offset, offset + 32))\n            });\n        }\n        var junkLength = 32 - this.size;\n        var value = bignumber_1.bigNumberify(data.slice(offset + junkLength, offset + 32));\n        if (this.signed) {\n            value = value.fromTwos(this.size * 8);\n        }\n        else {\n            value = value.maskn(this.size * 8);\n        }\n        return {\n            consumed: 32,\n            value: this.coerceFunc(this.name, value),\n        };\n    };\n    return CoderNumber;\n}(Coder));\nvar uint256Coder = new CoderNumber(function (type, value) { return value; }, 32, false, 'none');\nvar CoderBoolean = /** @class */ (function (_super) {\n    __extends(CoderBoolean, _super);\n    function CoderBoolean(coerceFunc, localName) {\n        return _super.call(this, coerceFunc, 'bool', 'bool', localName, false) || this;\n    }\n    CoderBoolean.prototype.encode = function (value) {\n        return uint256Coder.encode(!!value ? 1 : 0);\n    };\n    CoderBoolean.prototype.decode = function (data, offset) {\n        try {\n            var result = uint256Coder.decode(data, offset);\n        }\n        catch (error) {\n            if (error.reason === 'insufficient data for uint256 type') {\n                errors.throwError('insufficient data for boolean type', errors.INVALID_ARGUMENT, {\n                    arg: this.localName,\n                    coderType: 'boolean',\n                    value: error.value\n                });\n            }\n            throw error;\n        }\n        return {\n            consumed: result.consumed,\n            value: this.coerceFunc('bool', !result.value.isZero())\n        };\n    };\n    return CoderBoolean;\n}(Coder));\nvar CoderFixedBytes = /** @class */ (function (_super) {\n    __extends(CoderFixedBytes, _super);\n    function CoderFixedBytes(coerceFunc, length, localName) {\n        var _this = this;\n        var name = ('bytes' + length);\n        _this = _super.call(this, coerceFunc, name, name, localName, false) || this;\n        _this.length = length;\n        return _this;\n    }\n    CoderFixedBytes.prototype.encode = function (value) {\n        var result = new Uint8Array(32);\n        try {\n            var data = bytes_1.arrayify(value);\n            if (data.length !== this.length) {\n                throw new Error('incorrect data length');\n            }\n            result.set(data);\n        }\n        catch (error) {\n            errors.throwError('invalid ' + this.name + ' value', errors.INVALID_ARGUMENT, {\n                arg: this.localName,\n                coderType: this.name,\n                value: (error.value || value)\n            });\n        }\n        return result;\n    };\n    CoderFixedBytes.prototype.decode = function (data, offset) {\n        if (data.length < offset + 32) {\n            errors.throwError('insufficient data for ' + this.name + ' type', errors.INVALID_ARGUMENT, {\n                arg: this.localName,\n                coderType: this.name,\n                value: bytes_1.hexlify(data.slice(offset, offset + 32))\n            });\n        }\n        return {\n            consumed: 32,\n            value: this.coerceFunc(this.name, bytes_1.hexlify(data.slice(offset, offset + this.length)))\n        };\n    };\n    return CoderFixedBytes;\n}(Coder));\nvar CoderAddress = /** @class */ (function (_super) {\n    __extends(CoderAddress, _super);\n    function CoderAddress(coerceFunc, localName) {\n        return _super.call(this, coerceFunc, 'address', 'address', localName, false) || this;\n    }\n    CoderAddress.prototype.encode = function (value) {\n        var result = new Uint8Array(32);\n        try {\n            result.set(bytes_1.arrayify(address_1.getAddress(value)), 12);\n        }\n        catch (error) {\n            errors.throwError('invalid address', errors.INVALID_ARGUMENT, {\n                arg: this.localName,\n                coderType: 'address',\n                value: value\n            });\n        }\n        return result;\n    };\n    CoderAddress.prototype.decode = function (data, offset) {\n        if (data.length < offset + 32) {\n            errors.throwError('insufficuent data for address type', errors.INVALID_ARGUMENT, {\n                arg: this.localName,\n                coderType: 'address',\n                value: bytes_1.hexlify(data.slice(offset, offset + 32))\n            });\n        }\n        return {\n            consumed: 32,\n            value: this.coerceFunc('address', address_1.getAddress(bytes_1.hexlify(data.slice(offset + 12, offset + 32))))\n        };\n    };\n    return CoderAddress;\n}(Coder));\nfunction _encodeDynamicBytes(value) {\n    var dataLength = 32 * Math.ceil(value.length / 32);\n    var padding = new Uint8Array(dataLength - value.length);\n    return bytes_1.concat([\n        uint256Coder.encode(value.length),\n        value,\n        padding\n    ]);\n}\nfunction _decodeDynamicBytes(data, offset, localName) {\n    if (data.length < offset + 32) {\n        errors.throwError('insufficient data for dynamicBytes length', errors.INVALID_ARGUMENT, {\n            arg: localName,\n            coderType: 'dynamicBytes',\n            value: bytes_1.hexlify(data.slice(offset, offset + 32))\n        });\n    }\n    var length = uint256Coder.decode(data, offset).value;\n    try {\n        length = length.toNumber();\n    }\n    catch (error) {\n        errors.throwError('dynamic bytes count too large', errors.INVALID_ARGUMENT, {\n            arg: localName,\n            coderType: 'dynamicBytes',\n            value: length.toString()\n        });\n    }\n    if (data.length < offset + 32 + length) {\n        errors.throwError('insufficient data for dynamicBytes type', errors.INVALID_ARGUMENT, {\n            arg: localName,\n            coderType: 'dynamicBytes',\n            value: bytes_1.hexlify(data.slice(offset, offset + 32 + length))\n        });\n    }\n    return {\n        consumed: 32 + 32 * Math.ceil(length / 32),\n        value: data.slice(offset + 32, offset + 32 + length),\n    };\n}\nvar CoderDynamicBytes = /** @class */ (function (_super) {\n    __extends(CoderDynamicBytes, _super);\n    function CoderDynamicBytes(coerceFunc, localName) {\n        return _super.call(this, coerceFunc, 'bytes', 'bytes', localName, true) || this;\n    }\n    CoderDynamicBytes.prototype.encode = function (value) {\n        try {\n            return _encodeDynamicBytes(bytes_1.arrayify(value));\n        }\n        catch (error) {\n            errors.throwError('invalid bytes value', errors.INVALID_ARGUMENT, {\n                arg: this.localName,\n                coderType: 'bytes',\n                value: error.value\n            });\n        }\n        return null;\n    };\n    CoderDynamicBytes.prototype.decode = function (data, offset) {\n        var result = _decodeDynamicBytes(data, offset, this.localName);\n        result.value = this.coerceFunc('bytes', bytes_1.hexlify(result.value));\n        return result;\n    };\n    return CoderDynamicBytes;\n}(Coder));\nvar CoderString = /** @class */ (function (_super) {\n    __extends(CoderString, _super);\n    function CoderString(coerceFunc, localName) {\n        return _super.call(this, coerceFunc, 'string', 'string', localName, true) || this;\n    }\n    CoderString.prototype.encode = function (value) {\n        if (typeof (value) !== 'string') {\n            errors.throwError('invalid string value', errors.INVALID_ARGUMENT, {\n                arg: this.localName,\n                coderType: 'string',\n                value: value\n            });\n        }\n        return _encodeDynamicBytes(utf8_1.toUtf8Bytes(value));\n    };\n    CoderString.prototype.decode = function (data, offset) {\n        var result = _decodeDynamicBytes(data, offset, this.localName);\n        result.value = this.coerceFunc('string', utf8_1.toUtf8String(result.value));\n        return result;\n    };\n    return CoderString;\n}(Coder));\nfunction alignSize(size) {\n    return 32 * Math.ceil(size / 32);\n}\nfunction pack(coders, values) {\n    if (Array.isArray(values)) {\n        // do nothing\n    }\n    else if (values && typeof (values) === 'object') {\n        var arrayValues = [];\n        coders.forEach(function (coder) {\n            arrayValues.push(values[coder.localName]);\n        });\n        values = arrayValues;\n    }\n    else {\n        errors.throwError('invalid tuple value', errors.INVALID_ARGUMENT, {\n            coderType: 'tuple',\n            value: values\n        });\n    }\n    if (coders.length !== values.length) {\n        errors.throwError('types/value length mismatch', errors.INVALID_ARGUMENT, {\n            coderType: 'tuple',\n            value: values\n        });\n    }\n    var parts = [];\n    coders.forEach(function (coder, index) {\n        parts.push({ dynamic: coder.dynamic, value: coder.encode(values[index]) });\n    });\n    var staticSize = 0, dynamicSize = 0;\n    parts.forEach(function (part) {\n        if (part.dynamic) {\n            staticSize += 32;\n            dynamicSize += alignSize(part.value.length);\n        }\n        else {\n            staticSize += alignSize(part.value.length);\n        }\n    });\n    var offset = 0, dynamicOffset = staticSize;\n    var data = new Uint8Array(staticSize + dynamicSize);\n    parts.forEach(function (part) {\n        if (part.dynamic) {\n            //uint256Coder.encode(dynamicOffset).copy(data, offset);\n            data.set(uint256Coder.encode(dynamicOffset), offset);\n            offset += 32;\n            //part.value.copy(data, dynamicOffset);  @TODO\n            data.set(part.value, dynamicOffset);\n            dynamicOffset += alignSize(part.value.length);\n        }\n        else {\n            //part.value.copy(data, offset);  @TODO\n            data.set(part.value, offset);\n            offset += alignSize(part.value.length);\n        }\n    });\n    return data;\n}\nfunction unpack(coders, data, offset) {\n    var baseOffset = offset;\n    var consumed = 0;\n    var value = [];\n    coders.forEach(function (coder) {\n        if (coder.dynamic) {\n            var dynamicOffset = uint256Coder.decode(data, offset);\n            var result = coder.decode(data, baseOffset + dynamicOffset.value.toNumber());\n            // The dynamic part is leap-frogged somewhere else; doesn't count towards size\n            result.consumed = dynamicOffset.consumed;\n        }\n        else {\n            var result = coder.decode(data, offset);\n        }\n        if (result.value != undefined) {\n            value.push(result.value);\n        }\n        offset += result.consumed;\n        consumed += result.consumed;\n    });\n    coders.forEach(function (coder, index) {\n        var name = coder.localName;\n        if (!name) {\n            return;\n        }\n        if (name === 'length') {\n            name = '_length';\n        }\n        if (value[name] != null) {\n            return;\n        }\n        value[name] = value[index];\n    });\n    return {\n        value: value,\n        consumed: consumed\n    };\n}\nvar CoderArray = /** @class */ (function (_super) {\n    __extends(CoderArray, _super);\n    function CoderArray(coerceFunc, coder, length, localName) {\n        var _this = this;\n        var type = (coder.type + '[' + (length >= 0 ? length : '') + ']');\n        var dynamic = (length === -1 || coder.dynamic);\n        _this = _super.call(this, coerceFunc, 'array', type, localName, dynamic) || this;\n        _this.coder = coder;\n        _this.length = length;\n        return _this;\n    }\n    CoderArray.prototype.encode = function (value) {\n        if (!Array.isArray(value)) {\n            errors.throwError('expected array value', errors.INVALID_ARGUMENT, {\n                arg: this.localName,\n                coderType: 'array',\n                value: value\n            });\n        }\n        var count = this.length;\n        var result = new Uint8Array(0);\n        if (count === -1) {\n            count = value.length;\n            result = uint256Coder.encode(count);\n        }\n        errors.checkArgumentCount(count, value.length, ' in coder array' + (this.localName ? (\" \" + this.localName) : \"\"));\n        var coders = [];\n        for (var i = 0; i < value.length; i++) {\n            coders.push(this.coder);\n        }\n        return bytes_1.concat([result, pack(coders, value)]);\n    };\n    CoderArray.prototype.decode = function (data, offset) {\n        // @TODO:\n        //if (data.length < offset + length * 32) { throw new Error('invalid array'); }\n        var consumed = 0;\n        var count = this.length;\n        if (count === -1) {\n            try {\n                var decodedLength = uint256Coder.decode(data, offset);\n            }\n            catch (error) {\n                errors.throwError('insufficient data for dynamic array length', errors.INVALID_ARGUMENT, {\n                    arg: this.localName,\n                    coderType: 'array',\n                    value: error.value\n                });\n            }\n            try {\n                count = decodedLength.value.toNumber();\n            }\n            catch (error) {\n                errors.throwError('array count too large', errors.INVALID_ARGUMENT, {\n                    arg: this.localName,\n                    coderType: 'array',\n                    value: decodedLength.value.toString()\n                });\n            }\n            consumed += decodedLength.consumed;\n            offset += decodedLength.consumed;\n        }\n        var coders = [];\n        for (var i = 0; i < count; i++) {\n            coders.push(new CoderAnonymous(this.coder));\n        }\n        var result = unpack(coders, data, offset);\n        result.consumed += consumed;\n        result.value = this.coerceFunc(this.type, result.value);\n        return result;\n    };\n    return CoderArray;\n}(Coder));\nvar CoderTuple = /** @class */ (function (_super) {\n    __extends(CoderTuple, _super);\n    function CoderTuple(coerceFunc, coders, localName) {\n        var _this = this;\n        var dynamic = false;\n        var types = [];\n        coders.forEach(function (coder) {\n            if (coder.dynamic) {\n                dynamic = true;\n            }\n            types.push(coder.type);\n        });\n        var type = ('tuple(' + types.join(',') + ')');\n        _this = _super.call(this, coerceFunc, 'tuple', type, localName, dynamic) || this;\n        _this.coders = coders;\n        return _this;\n    }\n    CoderTuple.prototype.encode = function (value) {\n        return pack(this.coders, value);\n    };\n    CoderTuple.prototype.decode = function (data, offset) {\n        var result = unpack(this.coders, data, offset);\n        result.value = this.coerceFunc(this.type, result.value);\n        return result;\n    };\n    return CoderTuple;\n}(Coder));\n/*\nfunction getTypes(coders) {\n    var type = coderTuple(coders).type;\n    return type.substring(6, type.length - 1);\n}\n*/\nfunction splitNesting(value) {\n    value = value.trim();\n    var result = [];\n    var accum = '';\n    var depth = 0;\n    for (var offset = 0; offset < value.length; offset++) {\n        var c = value[offset];\n        if (c === ',' && depth === 0) {\n            result.push(accum);\n            accum = '';\n        }\n        else {\n            accum += c;\n            if (c === '(') {\n                depth++;\n            }\n            else if (c === ')') {\n                depth--;\n                if (depth === -1) {\n                    throw new Error('unbalanced parenthsis');\n                }\n            }\n        }\n    }\n    if (accum) {\n        result.push(accum);\n    }\n    return result;\n}\n// @TODO: Is there a way to return \"class\"?\nvar paramTypeSimple = {\n    address: CoderAddress,\n    bool: CoderBoolean,\n    string: CoderString,\n    bytes: CoderDynamicBytes,\n};\nfunction getTupleParamCoder(coerceFunc, components, localName) {\n    if (!components) {\n        components = [];\n    }\n    var coders = [];\n    components.forEach(function (component) {\n        coders.push(getParamCoder(coerceFunc, component));\n    });\n    return new CoderTuple(coerceFunc, coders, localName);\n}\nfunction getParamCoder(coerceFunc, param) {\n    var coder = paramTypeSimple[param.type];\n    if (coder) {\n        return new coder(coerceFunc, param.name);\n    }\n    var match = param.type.match(paramTypeNumber);\n    if (match) {\n        var size = parseInt(match[2] || \"256\");\n        if (size === 0 || size > 256 || (size % 8) !== 0) {\n            errors.throwError('invalid ' + match[1] + ' bit length', errors.INVALID_ARGUMENT, {\n                arg: 'param',\n                value: param\n            });\n        }\n        return new CoderNumber(coerceFunc, size / 8, (match[1] === 'int'), param.name);\n    }\n    var match = param.type.match(paramTypeBytes);\n    if (match) {\n        var size = parseInt(match[1]);\n        if (size === 0 || size > 32) {\n            errors.throwError('invalid bytes length', errors.INVALID_ARGUMENT, {\n                arg: 'param',\n                value: param\n            });\n        }\n        return new CoderFixedBytes(coerceFunc, size, param.name);\n    }\n    var match = param.type.match(paramTypeArray);\n    if (match) {\n        var size = parseInt(match[2] || \"-1\");\n        param = properties_1.shallowCopy(param);\n        param.type = match[1];\n        param = properties_1.deepCopy(param);\n        return new CoderArray(coerceFunc, getParamCoder(coerceFunc, param), size, param.name);\n    }\n    if (param.type.substring(0, 5) === 'tuple') {\n        return getTupleParamCoder(coerceFunc, param.components, param.name);\n    }\n    if (param.type === '') {\n        return new CoderNull(coerceFunc, param.name);\n    }\n    errors.throwError('invalid type', errors.INVALID_ARGUMENT, {\n        arg: 'type',\n        value: param.type\n    });\n    return null;\n}\nvar AbiCoder = /** @class */ (function () {\n    function AbiCoder(coerceFunc) {\n        errors.checkNew(this, AbiCoder);\n        if (!coerceFunc) {\n            coerceFunc = exports.defaultCoerceFunc;\n        }\n        properties_1.defineReadOnly(this, 'coerceFunc', coerceFunc);\n    }\n    AbiCoder.prototype.encode = function (types, values) {\n        if (types.length !== values.length) {\n            errors.throwError('types/values length mismatch', errors.INVALID_ARGUMENT, {\n                count: { types: types.length, values: values.length },\n                value: { types: types, values: values }\n            });\n        }\n        var coders = [];\n        types.forEach(function (type) {\n            // Convert types to type objects\n            //   - \"uint foo\" => { type: \"uint\", name: \"foo\" }\n            //   - \"tuple(uint, uint)\" => { type: \"tuple\", components: [ { type: \"uint\" }, { type: \"uint\" }, ] }\n            var typeObject = null;\n            if (typeof (type) === 'string') {\n                typeObject = parseParam(type);\n            }\n            else {\n                typeObject = type;\n            }\n            coders.push(getParamCoder(this.coerceFunc, typeObject));\n        }, this);\n        return bytes_1.hexlify(new CoderTuple(this.coerceFunc, coders, '_').encode(values));\n    };\n    AbiCoder.prototype.decode = function (types, data) {\n        var coders = [];\n        types.forEach(function (type) {\n            // See encode for details\n            var typeObject = null;\n            if (typeof (type) === 'string') {\n                typeObject = parseParam(type);\n            }\n            else {\n                typeObject = properties_1.deepCopy(type);\n            }\n            coders.push(getParamCoder(this.coerceFunc, typeObject));\n        }, this);\n        return new CoderTuple(this.coerceFunc, coders, '_').decode(bytes_1.arrayify(data), 0).value;\n    };\n    return AbiCoder;\n}());\nexports.AbiCoder = AbiCoder;\nexports.defaultAbiCoder = new AbiCoder();\n\n};"],
"names":["shadow$provide","global","require","module","exports","verifyType","type","match","substring","parseParam","param","allowIndexed","throwError","i","Error","originalParam","replace","parent","name","state","allowType","node","length","c","allowParams","components","indexed","child","allowName","allowArray","sibling","push","readArray","parseSignatureEvent","fragment","abi","anonymous","inputs","regexParen","trim","splitNesting","forEach","split","modifier","errors","info","regexIdentifier","parseSignatureFunction","constant","gas","outputs","payable","stateMutability","comps","bignumber_1","bigNumberify","left","right","formatParamType","paramType","getParamCoder","defaultCoerceFunc","_encodeDynamicBytes","value","padding","Uint8Array","Math","ceil","bytes_1","concat","uint256Coder","encode","_decodeDynamicBytes","data","offset","localName","INVALID_ARGUMENT","arg","coderType","hexlify","slice","decode","toNumber","error","toString","consumed","pack","coders","values","Array","isArray","arrayValues","coder","parts","index","dynamic","staticSize","dynamicSize","part","dynamicOffset","set","unpack","baseOffset","result","undefined","accum","depth","getTupleParamCoder","coerceFunc","component","CoderTuple","paramTypeSimple","paramTypeNumber","size","parseInt","CoderNumber","paramTypeBytes","CoderFixedBytes","paramTypeArray","properties_1","shallowCopy","deepCopy","CoderArray","CoderNull","__extends","extendStatics","Object","setPrototypeOf","__proto__","d","b","p","hasOwnProperty","__","constructor","prototype","create","__importStar","mod","__esModule","k","call","defineProperty","constants_1","address_1","utf8_1","RegExp","exports.defaultCoerceFunc","parseParamType","formatSignature","map","join","parseSignature","Coder","CoderAnonymous","_super","_this","defineReadOnly","CoderAnonymous.prototype.encode","CoderAnonymous.prototype.decode","CoderNull.prototype.encode","arrayify","CoderNull.prototype.decode","signed","CoderNumber.prototype.encode","v","bounds","MaxUint256","maskn","gt","add","One","mul","NegativeOne","lt","Zero","toTwos","fromTwos","padZeros","CoderNumber.prototype.decode","CoderBoolean","CoderBoolean.prototype.encode","CoderBoolean.prototype.decode","reason","isZero","CoderFixedBytes.prototype.encode","CoderFixedBytes.prototype.decode","CoderAddress","CoderAddress.prototype.encode","getAddress","CoderAddress.prototype.decode","CoderDynamicBytes","CoderDynamicBytes.prototype.encode","CoderDynamicBytes.prototype.decode","CoderString","CoderString.prototype.encode","toUtf8Bytes","CoderString.prototype.decode","toUtf8String","CoderArray.prototype.encode","count","checkArgumentCount","CoderArray.prototype.decode","decodedLength","types","CoderTuple.prototype.encode","CoderTuple.prototype.decode","address","bool","string","bytes","AbiCoder","checkNew","AbiCoder.prototype.encode","typeObject","AbiCoder.prototype.decode","defaultAbiCoder"]
}
