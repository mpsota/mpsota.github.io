{
"version":3,
"file":"module$node_modules$lodash$isError.js",
"lineCount":1,
"mappings":"AAAAA,cAAA,mCAAA,CAAuD,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAAA,IAC3FC,WAAaH,OAAA,CAAQ,wCAAR,CAD8E,CAE3FI,aAAeJ,OAAA,CAAQ,yCAAR,CAF4E,CAG3FK,cAAgBL,OAAA,CAAQ,0CAAR,CAiCpBC,OAAAC,QAAA,CATAI,QAAgB,CAACC,KAAD,CAAQ,CACtB,GAAI,CAACH,YAAA,CAAaG,KAAb,CAAL,CACE,MAAO,CAAA,CAET,KAAIC,IAAML,UAAA,CAAWI,KAAX,CACV,OAzBaE,gBAyBb,EAAOD,GAAP,EA1BcE,uBA0Bd,EAA0BF,GAA1B,EAC2B,QAD3B,EACG,MAAOD,MAAAI,QADV,EAC4D,QAD5D,EACuC,MAAOJ,MAAAK,KAD9C,EACwE,CAACP,aAAA,CAAcE,KAAd,CANnD,CA3BuE;",
"sources":["node_modules/lodash/isError.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$lodash$isError\"] = function(global,require,module,exports) {\nvar baseGetTag = require('./_baseGetTag'),\n    isObjectLike = require('./isObjectLike'),\n    isPlainObject = require('./isPlainObject');\n\n/** `Object#toString` result references. */\nvar domExcTag = '[object DOMException]',\n    errorTag = '[object Error]';\n\n/**\n * Checks if `value` is an `Error`, `EvalError`, `RangeError`, `ReferenceError`,\n * `SyntaxError`, `TypeError`, or `URIError` object.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an error object, else `false`.\n * @example\n *\n * _.isError(new Error);\n * // => true\n *\n * _.isError(Error);\n * // => false\n */\nfunction isError(value) {\n  if (!isObjectLike(value)) {\n    return false;\n  }\n  var tag = baseGetTag(value);\n  return tag == errorTag || tag == domExcTag ||\n    (typeof value.message == 'string' && typeof value.name == 'string' && !isPlainObject(value));\n}\n\nmodule.exports = isError;\n\n};"],
"names":["shadow$provide","global","require","module","exports","baseGetTag","isObjectLike","isPlainObject","isError","value","tag","errorTag","domExcTag","message","name"]
}
