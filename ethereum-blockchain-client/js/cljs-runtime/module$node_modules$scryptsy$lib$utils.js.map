{
"version":3,
"file":"module$node_modules$scryptsy$lib$utils.js",
"lineCount":9,
"mappings":"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",
"sources":["node_modules/scryptsy/lib/utils.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$scryptsy$lib$utils\"] = function(global,require,module,exports) {\nvar Buffer = require('buffer').Buffer;\nconst crypto = require('crypto')\nconst MAX_VALUE = 0x7fffffff\nconst DEFAULT_PROMISE_INTERVAL = 5000\n/* eslint-disable camelcase */\n\nfunction checkAndInit (key, salt, N, r, p, dkLen, progressCallback) {\n  if (N === 0 || (N & (N - 1)) !== 0) throw Error('N must be > 0 and a power of 2')\n\n  if (N > MAX_VALUE / 128 / r) throw Error('Parameter N is too large')\n  if (r > MAX_VALUE / 128 / p) throw Error('Parameter r is too large')\n\n  let XY = Buffer.alloc(256 * r)\n  let V = Buffer.alloc(128 * r * N)\n\n  // pseudo global\n  let B32 = new Int32Array(16) // salsa20_8\n  let x = new Int32Array(16) // salsa20_8\n  let _X = Buffer.alloc(64) // blockmix_salsa8\n\n  // pseudo global\n  let B = crypto.pbkdf2Sync(key, salt, 1, p * 128 * r, 'sha256')\n\n  let tickCallback\n  if (progressCallback) {\n    let totalOps = p * N * 2\n    let currentOp = 0\n\n    tickCallback = function () {\n      ++currentOp\n\n      // send progress notifications once every 1,000 ops\n      if (currentOp % 1000 === 0) {\n        progressCallback({\n          current: currentOp,\n          total: totalOps,\n          percent: (currentOp / totalOps) * 100.0\n        })\n      }\n    }\n  }\n  return {\n    XY,\n    V,\n    B32,\n    x,\n    _X,\n    B,\n    tickCallback\n  }\n}\n\nasync function smix (B, Bi, r, N, V, XY, _X, B32, x, tickCallback, promiseInterval) {\n  promiseInterval = promiseInterval || DEFAULT_PROMISE_INTERVAL\n  let Xi = 0\n  let Yi = 128 * r\n  let i\n\n  B.copy(XY, Xi, Bi, Bi + Yi)\n\n  for (i = 0; i < N; i++) {\n    XY.copy(V, i * Yi, Xi, Xi + Yi)\n    if (i % promiseInterval === 0) {\n      await new Promise(resolve => setImmediate(resolve))\n    }\n    blockmix_salsa8(XY, Xi, Yi, r, _X, B32, x)\n\n    if (tickCallback) tickCallback()\n  }\n\n  for (i = 0; i < N; i++) {\n    let offset = Xi + (2 * r - 1) * 64\n    let j = XY.readUInt32LE(offset) & (N - 1)\n    blockxor(V, j * Yi, XY, Xi, Yi)\n    if (i % promiseInterval === 0) {\n      await new Promise(resolve => setImmediate(resolve))\n    }\n    blockmix_salsa8(XY, Xi, Yi, r, _X, B32, x)\n\n    if (tickCallback) tickCallback()\n  }\n\n  XY.copy(B, Bi, Xi, Xi + Yi)\n}\n\nfunction smixSync (B, Bi, r, N, V, XY, _X, B32, x, tickCallback) {\n  let Xi = 0\n  let Yi = 128 * r\n  let i\n\n  B.copy(XY, Xi, Bi, Bi + Yi)\n\n  for (i = 0; i < N; i++) {\n    XY.copy(V, i * Yi, Xi, Xi + Yi)\n    blockmix_salsa8(XY, Xi, Yi, r, _X, B32, x)\n\n    if (tickCallback) tickCallback()\n  }\n\n  for (i = 0; i < N; i++) {\n    let offset = Xi + (2 * r - 1) * 64\n    let j = XY.readUInt32LE(offset) & (N - 1)\n    blockxor(V, j * Yi, XY, Xi, Yi)\n    blockmix_salsa8(XY, Xi, Yi, r, _X, B32, x)\n\n    if (tickCallback) tickCallback()\n  }\n\n  XY.copy(B, Bi, Xi, Xi + Yi)\n}\n\nfunction blockmix_salsa8 (BY, Bi, Yi, r, _X, B32, x) {\n  let i\n\n  arraycopy(BY, Bi + (2 * r - 1) * 64, _X, 0, 64)\n\n  for (i = 0; i < 2 * r; i++) {\n    blockxor(BY, i * 64, _X, 0, 64)\n    salsa20_8(_X, B32, x)\n    arraycopy(_X, 0, BY, Yi + (i * 64), 64)\n  }\n\n  for (i = 0; i < r; i++) {\n    arraycopy(BY, Yi + (i * 2) * 64, BY, Bi + (i * 64), 64)\n  }\n\n  for (i = 0; i < r; i++) {\n    arraycopy(BY, Yi + (i * 2 + 1) * 64, BY, Bi + (i + r) * 64, 64)\n  }\n}\n\nfunction R (a, b) {\n  return (a << b) | (a >>> (32 - b))\n}\n\nfunction salsa20_8 (B, B32, x) {\n  let i\n\n  for (i = 0; i < 16; i++) {\n    B32[i] = (B[i * 4 + 0] & 0xff) << 0\n    B32[i] |= (B[i * 4 + 1] & 0xff) << 8\n    B32[i] |= (B[i * 4 + 2] & 0xff) << 16\n    B32[i] |= (B[i * 4 + 3] & 0xff) << 24\n    // B32[i] = B.readUInt32LE(i*4)   <--- this is signficantly slower even in Node.js\n  }\n\n  arraycopy(B32, 0, x, 0, 16)\n\n  for (i = 8; i > 0; i -= 2) {\n    x[4] ^= R(x[0] + x[12], 7)\n    x[8] ^= R(x[4] + x[0], 9)\n    x[12] ^= R(x[8] + x[4], 13)\n    x[0] ^= R(x[12] + x[8], 18)\n    x[9] ^= R(x[5] + x[1], 7)\n    x[13] ^= R(x[9] + x[5], 9)\n    x[1] ^= R(x[13] + x[9], 13)\n    x[5] ^= R(x[1] + x[13], 18)\n    x[14] ^= R(x[10] + x[6], 7)\n    x[2] ^= R(x[14] + x[10], 9)\n    x[6] ^= R(x[2] + x[14], 13)\n    x[10] ^= R(x[6] + x[2], 18)\n    x[3] ^= R(x[15] + x[11], 7)\n    x[7] ^= R(x[3] + x[15], 9)\n    x[11] ^= R(x[7] + x[3], 13)\n    x[15] ^= R(x[11] + x[7], 18)\n    x[1] ^= R(x[0] + x[3], 7)\n    x[2] ^= R(x[1] + x[0], 9)\n    x[3] ^= R(x[2] + x[1], 13)\n    x[0] ^= R(x[3] + x[2], 18)\n    x[6] ^= R(x[5] + x[4], 7)\n    x[7] ^= R(x[6] + x[5], 9)\n    x[4] ^= R(x[7] + x[6], 13)\n    x[5] ^= R(x[4] + x[7], 18)\n    x[11] ^= R(x[10] + x[9], 7)\n    x[8] ^= R(x[11] + x[10], 9)\n    x[9] ^= R(x[8] + x[11], 13)\n    x[10] ^= R(x[9] + x[8], 18)\n    x[12] ^= R(x[15] + x[14], 7)\n    x[13] ^= R(x[12] + x[15], 9)\n    x[14] ^= R(x[13] + x[12], 13)\n    x[15] ^= R(x[14] + x[13], 18)\n  }\n\n  for (i = 0; i < 16; ++i) B32[i] = x[i] + B32[i]\n\n  for (i = 0; i < 16; i++) {\n    let bi = i * 4\n    B[bi + 0] = (B32[i] >> 0 & 0xff)\n    B[bi + 1] = (B32[i] >> 8 & 0xff)\n    B[bi + 2] = (B32[i] >> 16 & 0xff)\n    B[bi + 3] = (B32[i] >> 24 & 0xff)\n    // B.writeInt32LE(B32[i], i*4)  //<--- this is signficantly slower even in Node.js\n  }\n}\n\n// naive approach... going back to loop unrolling may yield additional performance\nfunction blockxor (S, Si, D, Di, len) {\n  for (let i = 0; i < len; i++) {\n    D[Di + i] ^= S[Si + i]\n  }\n}\n\nfunction arraycopy (src, srcPos, dest, destPos, length) {\n  if (Buffer.isBuffer(src) && Buffer.isBuffer(dest)) {\n    src.copy(dest, destPos, srcPos, srcPos + length)\n  } else {\n    while (length--) {\n      dest[destPos++] = src[srcPos++]\n    }\n  }\n}\n\nmodule.exports = {\n  checkAndInit,\n  smix,\n  smixSync\n}\n\n};"],
"names":["shadow$provide","global","require","module","exports","blockmix_salsa8","BY","Bi","Yi","r","_X","B32","x","i","arraycopy","blockxor","B","R","bi","a","b","S","Si","D","Di","len","src","srcPos","dest","destPos","length","Buffer","isBuffer","copy","crypto","checkAndInit","key","salt","N","p","dkLen","progressCallback","Error","XY","alloc","V","Int32Array","pbkdf2Sync","totalOps","currentOp","tickCallback","current","total","percent","smix","promiseInterval","Xi","offset","j","DEFAULT_PROMISE_INTERVAL","Promise","resolve","setImmediate","readUInt32LE","smixSync"]
}
