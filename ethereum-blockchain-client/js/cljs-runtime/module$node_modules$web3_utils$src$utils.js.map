{
"version":3,
"file":"module$node_modules$web3_utils$src$utils.js",
"lineCount":12,
"mappings":"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",
"sources":["node_modules/web3-utils/src/utils.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$web3_utils$src$utils\"] = function(global,require,module,exports) {\nvar Buffer = require('buffer').Buffer;\n/*\n This file is part of web3.js.\n\n web3.js is free software: you can redistribute it and/or modify\n it under the terms of the GNU Lesser General Public License as published by\n the Free Software Foundation, either version 3 of the License, or\n (at your option) any later version.\n\n web3.js is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n GNU Lesser General Public License for more details.\n\n You should have received a copy of the GNU Lesser General Public License\n along with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n */\n/**\n * @file utils.js\n * @author Fabian Vogelsteller <fabian@ethereum.org>\n * @date 2017\n */\n\nvar _ = require('underscore');\nvar BN = require('bn.js');\nvar numberToBN = require('number-to-bn');\nvar utf8 = require('utf8');\nvar Hash = require(\"eth-lib/lib/hash\");\nvar ethereumBloomFilters = require('ethereum-bloom-filters');\n\n\n\n/**\n * Returns true if object is BN, otherwise false\n *\n * @method isBN\n * @param {Object} object\n * @return {Boolean}\n */\nvar isBN = function (object) {\n    return BN.isBN(object);\n};\n\n/**\n * Returns true if object is BigNumber, otherwise false\n *\n * @method isBigNumber\n * @param {Object} object\n * @return {Boolean}\n */\nvar isBigNumber = function (object) {\n    return object && object.constructor && object.constructor.name === 'BigNumber';\n};\n\n/**\n * Takes an input and transforms it into an BN\n *\n * @method toBN\n * @param {Number|String|BN} number, string, HEX string or BN\n * @return {BN} BN\n */\nvar toBN = function(number){\n    try {\n        return numberToBN.apply(null, arguments);\n    } catch(e) {\n        throw new Error(e + ' Given value: \"'+ number +'\"');\n    }\n};\n\n\n/**\n * Takes and input transforms it into BN and if it is negative value, into two's complement\n *\n * @method toTwosComplement\n * @param {Number|String|BN} number\n * @return {String}\n */\nvar toTwosComplement = function (number) {\n    return '0x'+ toBN(number).toTwos(256).toString(16, 64);\n};\n\n/**\n * Checks if the given string is an address\n *\n * @method isAddress\n * @param {String} address the given HEX address\n * @return {Boolean}\n */\nvar isAddress = function (address) {\n    // check if it has the basic requirements of an address\n    if (!/^(0x)?[0-9a-f]{40}$/i.test(address)) {\n        return false;\n        // If it's ALL lowercase or ALL upppercase\n    } else if (/^(0x|0X)?[0-9a-f]{40}$/.test(address) || /^(0x|0X)?[0-9A-F]{40}$/.test(address)) {\n        return true;\n        // Otherwise check each case\n    } else {\n        return checkAddressChecksum(address);\n    }\n};\n\n\n\n/**\n * Checks if the given string is a checksummed address\n *\n * @method checkAddressChecksum\n * @param {String} address the given HEX address\n * @return {Boolean}\n */\nvar checkAddressChecksum = function (address) {\n    // Check each case\n    address = address.replace(/^0x/i,'');\n    var addressHash = sha3(address.toLowerCase()).replace(/^0x/i,'');\n\n    for (var i = 0; i < 40; i++ ) {\n        // the nth letter should be uppercase if the nth digit of casemap is 1\n        if ((parseInt(addressHash[i], 16) > 7 && address[i].toUpperCase() !== address[i]) || (parseInt(addressHash[i], 16) <= 7 && address[i].toLowerCase() !== address[i])) {\n            return false;\n        }\n    }\n    return true;\n};\n\n/**\n * Should be called to pad string to expected length\n *\n * @method leftPad\n * @param {String} string to be padded\n * @param {Number} chars that result string should have\n * @param {String} sign, by default 0\n * @returns {String} right aligned string\n */\nvar leftPad = function (string, chars, sign) {\n    var hasPrefix = /^0x/i.test(string) || typeof string === 'number';\n    string = string.toString(16).replace(/^0x/i,'');\n\n    var padding = (chars - string.length + 1 >= 0) ? chars - string.length + 1 : 0;\n\n    return (hasPrefix ? '0x' : '') + new Array(padding).join(sign ? sign : \"0\") + string;\n};\n\n/**\n * Should be called to pad string to expected length\n *\n * @method rightPad\n * @param {String} string to be padded\n * @param {Number} chars that result string should have\n * @param {String} sign, by default 0\n * @returns {String} right aligned string\n */\nvar rightPad = function (string, chars, sign) {\n    var hasPrefix = /^0x/i.test(string) || typeof string === 'number';\n    string = string.toString(16).replace(/^0x/i,'');\n\n    var padding = (chars - string.length + 1 >= 0) ? chars - string.length + 1 : 0;\n\n    return (hasPrefix ? '0x' : '') + string + (new Array(padding).join(sign ? sign : \"0\"));\n};\n\n\n/**\n * Should be called to get hex representation (prefixed by 0x) of utf8 string\n *\n * @method utf8ToHex\n * @param {String} str\n * @returns {String} hex representation of input string\n */\nvar utf8ToHex = function(str) {\n    str = utf8.encode(str);\n    var hex = \"\";\n\n    // remove \\u0000 padding from either side\n    str = str.replace(/^(?:\\u0000)*/,'');\n    str = str.split(\"\").reverse().join(\"\");\n    str = str.replace(/^(?:\\u0000)*/,'');\n    str = str.split(\"\").reverse().join(\"\");\n\n    for(var i = 0; i < str.length; i++) {\n        var code = str.charCodeAt(i);\n        // if (code !== 0) {\n        var n = code.toString(16);\n        hex += n.length < 2 ? '0' + n : n;\n        // }\n    }\n\n    return \"0x\" + hex;\n};\n\n/**\n * Should be called to get utf8 from it's hex representation\n *\n * @method hexToUtf8\n * @param {String} hex\n * @returns {String} ascii string representation of hex value\n */\nvar hexToUtf8 = function(hex) {\n    if (!isHexStrict(hex))\n        throw new Error('The parameter \"'+ hex +'\" must be a valid HEX string.');\n\n    var str = \"\";\n    var code = 0;\n    hex = hex.replace(/^0x/i,'');\n\n    // remove 00 padding from either side\n    hex = hex.replace(/^(?:00)*/,'');\n    hex = hex.split(\"\").reverse().join(\"\");\n    hex = hex.replace(/^(?:00)*/,'');\n    hex = hex.split(\"\").reverse().join(\"\");\n\n    var l = hex.length;\n\n    for (var i=0; i < l; i+=2) {\n        code = parseInt(hex.substr(i, 2), 16);\n        // if (code !== 0) {\n        str += String.fromCharCode(code);\n        // }\n    }\n\n    return utf8.decode(str);\n};\n\n\n/**\n * Converts value to it's number representation\n *\n * @method hexToNumber\n * @param {String|Number|BN} value\n * @return {String}\n */\nvar hexToNumber = function (value) {\n    if (!value) {\n        return value;\n    }\n\n    if (_.isString(value) && !isHexStrict(value)) {\n        throw new Error('Given value \"'+value+'\" is not a valid hex string.');\n    }\n\n    return toBN(value).toNumber();\n};\n\n/**\n * Converts value to it's decimal representation in string\n *\n * @method hexToNumberString\n * @param {String|Number|BN} value\n * @return {String}\n */\nvar hexToNumberString = function (value) {\n    if (!value) return value;\n\n    if (_.isString(value) && !isHexStrict(value)) {\n        throw new Error('Given value \"'+value+'\" is not a valid hex string.');\n    }\n\n    return toBN(value).toString(10);\n};\n\n\n/**\n * Converts value to it's hex representation\n *\n * @method numberToHex\n * @param {String|Number|BN} value\n * @return {String}\n */\nvar numberToHex = function (value) {\n    if (_.isNull(value) || _.isUndefined(value)) {\n        return value;\n    }\n\n    if (!isFinite(value) && !isHexStrict(value)) {\n        throw new Error('Given input \"'+value+'\" is not a number.');\n    }\n\n    var number = toBN(value);\n    var result = number.toString(16);\n\n    return number.lt(new BN(0)) ? '-0x' + result.substr(1) : '0x' + result;\n};\n\n\n/**\n * Convert a byte array to a hex string\n *\n * Note: Implementation from crypto-js\n *\n * @method bytesToHex\n * @param {Array} bytes\n * @return {String} the hex string\n */\nvar bytesToHex = function(bytes) {\n    for (var hex = [], i = 0; i < bytes.length; i++) {\n        /* jshint ignore:start */\n        hex.push((bytes[i] >>> 4).toString(16));\n        hex.push((bytes[i] & 0xF).toString(16));\n        /* jshint ignore:end */\n    }\n    return '0x'+ hex.join(\"\");\n};\n\n/**\n * Convert a hex string to a byte array\n *\n * Note: Implementation from crypto-js\n *\n * @method hexToBytes\n * @param {string} hex\n * @return {Array} the byte array\n */\nvar hexToBytes = function(hex) {\n    hex = hex.toString(16);\n\n    if (!isHexStrict(hex)) {\n        throw new Error('Given value \"'+ hex +'\" is not a valid hex string.');\n    }\n\n    hex = hex.replace(/^0x/i,'');\n\n    for (var bytes = [], c = 0; c < hex.length; c += 2)\n        bytes.push(parseInt(hex.substr(c, 2), 16));\n    return bytes;\n};\n\n/**\n * Auto converts any given value into it's hex representation.\n *\n * And even stringifys objects before.\n *\n * @method toHex\n * @param {String|Number|BN|Object|Buffer} value\n * @param {Boolean} returnType\n * @return {String}\n */\nvar toHex = function (value, returnType) {\n    /*jshint maxcomplexity: false */\n\n    if (isAddress(value)) {\n        return returnType ? 'address' : '0x'+ value.toLowerCase().replace(/^0x/i,'');\n    }\n\n    if (_.isBoolean(value)) {\n        return returnType ? 'bool' : value ? '0x01' : '0x00';\n    }\n\n    if (Buffer.isBuffer(value)) {\n        return '0x' + value.toString('hex');\n    }\n\n    if (_.isObject(value) && !isBigNumber(value) && !isBN(value)) {\n        return returnType ? 'string' : utf8ToHex(JSON.stringify(value));\n    }\n\n    // if its a negative number, pass it through numberToHex\n    if (_.isString(value)) {\n        if (value.indexOf('-0x') === 0 || value.indexOf('-0X') === 0) {\n            return returnType ? 'int256' : numberToHex(value);\n        } else if(value.indexOf('0x') === 0 || value.indexOf('0X') === 0) {\n            return returnType ? 'bytes' : value;\n        } else if (!isFinite(value)) {\n            return returnType ? 'string' : utf8ToHex(value);\n        }\n    }\n\n    return returnType ? (value < 0 ? 'int256' : 'uint256') : numberToHex(value);\n};\n\n\n/**\n * Check if string is HEX, requires a 0x in front\n *\n * @method isHexStrict\n * @param {String} hex to be checked\n * @returns {Boolean}\n */\nvar isHexStrict = function (hex) {\n    return ((_.isString(hex) || _.isNumber(hex)) && /^(-)?0x[0-9a-f]*$/i.test(hex));\n};\n\n/**\n * Check if string is HEX\n *\n * @method isHex\n * @param {String} hex to be checked\n * @returns {Boolean}\n */\nvar isHex = function (hex) {\n    return ((_.isString(hex) || _.isNumber(hex)) && /^(-0x|0x)?[0-9a-f]*$/i.test(hex));\n};\n\n\n/**\n * Returns true if given string is a valid Ethereum block header bloom.\n *\n * @method isBloom\n * @param {String} bloom encoded bloom filter\n * @return {Boolean}\n */\nvar isBloom = function (bloom) {\n    return ethereumBloomFilters.isBloom(bloom);\n};\n\n/**\n * Returns true if the ethereum users address is part of the given bloom \n * note: false positives are possible.\n *\n * @method isUserEthereumAddressInBloom\n * @param {String} ethereumAddress encoded bloom filter\n * @param {String} bloom ethereum addresss\n * @return {Boolean}\n */\nvar isUserEthereumAddressInBloom = function (bloom, ethereumAddress) {\n    return ethereumBloomFilters.isUserEthereumAddressInBloom(bloom, ethereumAddress);\n};\n\n/**\n * Returns true if the contract address is part of the given bloom \n * note: false positives are possible.\n *\n * @method isUserEthereumAddressInBloom\n * @param {String} bloom encoded bloom filter\n * @param {String} contractAddress contract addresss\n * @return {Boolean}\n */\nvar isContractAddressInBloom = function (bloom, contractAddress) {\n    return ethereumBloomFilters.isContractAddressInBloom(bloom, contractAddress);\n};\n\n/**\n * Returns true if given string is a valid log topic.\n *\n * @method isTopic\n * @param {String} topic encoded topic\n * @return {Boolean}\n */\nvar isTopic = function (topic) {\n    return ethereumBloomFilters.isTopic(topic);\n};\n\n/**\n * Returns true if the topic is part of the given bloom\n * note: false positives are possible.\n *\n * @method isTopicInBloom\n * @param {String} bloom encoded bloom filter\n * @param {String} topic encoded topic\n * @return {Boolean}\n */\nvar isTopicInBloom = function (bloom, topic) {\n    return ethereumBloomFilters.isTopicInBloom(bloom, topic);\n};\n\n/**\n * Returns true if the value is part of the given bloom\n * note: false positives are possible.\n *\n * @method isInBloom\n * @param {String} bloom encoded bloom filter\n * @param {String | Uint8Array} topic encoded value\n * @return {Boolean}\n */\nvar isInBloom = function (bloom, topic) {\n    return ethereumBloomFilters.isInBloom(bloom, topic);\n};\n\n/**\n * Hashes values to a sha3 hash using keccak 256\n *\n * To hash a HEX string the hex must have 0x in front.\n *\n * @method sha3\n * @return {String} the sha3 string\n */\nvar SHA3_NULL_S = '0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470';\n\nvar sha3 = function (value) {\n    if (isBN(value)) {\n        value = value.toString();\n    }\n\n    if (isHexStrict(value) && /^0x/i.test((value).toString())) {\n        value = hexToBytes(value);\n    }\n\n    var returnValue = Hash.keccak256(value); // jshint ignore:line\n\n    if(returnValue === SHA3_NULL_S) {\n        return null;\n    } else {\n        return returnValue;\n    }\n};\n// expose the under the hood keccak256\nsha3._Hash = Hash;\n\n/**\n * @method sha3Raw\n *\n * @param value\n *\n * @returns {string}\n */\nvar sha3Raw = function(value) {\n    value = sha3(value);\n\n    if (value === null) {\n        return SHA3_NULL_S;\n    }\n\n    return value;\n};\n\n\nmodule.exports = {\n    BN: BN,\n    isBN: isBN,\n    isBigNumber: isBigNumber,\n    toBN: toBN,\n    isAddress: isAddress,\n    isBloom: isBloom,\n    isUserEthereumAddressInBloom: isUserEthereumAddressInBloom,\n    isContractAddressInBloom: isContractAddressInBloom,\n    isTopic: isTopic,\n    isTopicInBloom: isTopicInBloom,\n    isInBloom: isInBloom,\n    checkAddressChecksum: checkAddressChecksum,\n    utf8ToHex: utf8ToHex,\n    hexToUtf8: hexToUtf8,\n    hexToNumber: hexToNumber,\n    hexToNumberString: hexToNumberString,\n    numberToHex: numberToHex,\n    toHex: toHex,\n    hexToBytes: hexToBytes,\n    bytesToHex: bytesToHex,\n    isHex: isHex,\n    isHexStrict: isHexStrict,\n    leftPad: leftPad,\n    rightPad: rightPad,\n    toTwosComplement: toTwosComplement,\n    sha3: sha3,\n    sha3Raw: sha3Raw\n};\n\n};"],
"names":["shadow$provide","global","require","module","exports","Buffer","_","BN","numberToBN","utf8","Hash","ethereumBloomFilters","isBN","object","isBigNumber","constructor","name","toBN","number","apply","arguments","e","Error","isAddress","address","test","checkAddressChecksum","replace","addressHash","sha3","toLowerCase","i","parseInt","toUpperCase","utf8ToHex","str","encode","hex","split","reverse","join","length","n","charCodeAt","code","toString","numberToHex","value","isNull","isUndefined","isFinite","isHexStrict","result","lt","substr","hexToBytes","bytes","c","push","isString","isNumber","returnValue","keccak256","SHA3_NULL_S","_Hash","isBloom","bloom","isUserEthereumAddressInBloom","ethereumAddress","isContractAddressInBloom","contractAddress","isTopic","topic","isTopicInBloom","isInBloom","hexToUtf8","l","String","fromCharCode","decode","hexToNumber","toNumber","hexToNumberString","toHex","returnType","isBoolean","isBuffer","isObject","JSON","stringify","indexOf","bytesToHex","isHex","leftPad","string","chars","sign","hasPrefix","Array","padding","rightPad","toTwosComplement","toTwos","sha3Raw"]
}
