{
"version":3,
"file":"module$node_modules$keccak$lib$keccak.js",
"lineCount":4,
"mappings":"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",
"sources":["node_modules/keccak/lib/keccak.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$keccak$lib$keccak\"] = function(global,require,module,exports) {\n'use strict'\nconst Buffer = require('safe-buffer').Buffer\nconst keccakState = require('./keccak-state-unroll')\n\nfunction Keccak () {\n  // much faster than `new Array(50)`\n  this.state = [\n    0, 0, 0, 0, 0,\n    0, 0, 0, 0, 0,\n    0, 0, 0, 0, 0,\n    0, 0, 0, 0, 0,\n    0, 0, 0, 0, 0\n  ]\n\n  this.blockSize = null\n  this.count = 0\n  this.squeezing = false\n}\n\nKeccak.prototype.initialize = function (rate, capacity) {\n  for (let i = 0; i < 50; ++i) this.state[i] = 0\n  this.blockSize = rate / 8\n  this.count = 0\n  this.squeezing = false\n}\n\nKeccak.prototype.absorb = function (data) {\n  for (let i = 0; i < data.length; ++i) {\n    this.state[~~(this.count / 4)] ^= data[i] << (8 * (this.count % 4))\n    this.count += 1\n    if (this.count === this.blockSize) {\n      keccakState.p1600(this.state)\n      this.count = 0\n    }\n  }\n}\n\nKeccak.prototype.absorbLastFewBits = function (bits) {\n  this.state[~~(this.count / 4)] ^= bits << (8 * (this.count % 4))\n  if ((bits & 0x80) !== 0 && this.count === (this.blockSize - 1)) keccakState.p1600(this.state)\n  this.state[~~((this.blockSize - 1) / 4)] ^= 0x80 << (8 * ((this.blockSize - 1) % 4))\n  keccakState.p1600(this.state)\n  this.count = 0\n  this.squeezing = true\n}\n\nKeccak.prototype.squeeze = function (length) {\n  if (!this.squeezing) this.absorbLastFewBits(0x01)\n\n  const output = Buffer.alloc(length)\n  for (var i = 0; i < length; ++i) {\n    output[i] = (this.state[~~(this.count / 4)] >>> (8 * (this.count % 4))) & 0xff\n    this.count += 1\n    if (this.count === this.blockSize) {\n      keccakState.p1600(this.state)\n      this.count = 0\n    }\n  }\n\n  return output\n}\n\nKeccak.prototype.copy = function (dest) {\n  for (let i = 0; i < 50; ++i) dest.state[i] = this.state[i]\n  dest.blockSize = this.blockSize\n  dest.count = this.count\n  dest.squeezing = this.squeezing\n}\n\nmodule.exports = Keccak\n\n};"],
"names":["shadow$provide","global","require","module","exports","Keccak","state","blockSize","count","squeezing","Buffer","keccakState","prototype","initialize","Keccak.prototype.initialize","rate","capacity","i","absorb","Keccak.prototype.absorb","data","length","p1600","absorbLastFewBits","Keccak.prototype.absorbLastFewBits","bits","squeeze","Keccak.prototype.squeeze","output","alloc","copy","Keccak.prototype.copy","dest"]
}
