shadow$provide.module$node_modules$eth_lib$lib$nat=function(global,require,module,exports){var BN=require("module$node_modules$bn_DOT_js$lib$bn"),Bytes=require("module$node_modules$eth_lib$lib$bytes"),toBN=function(str){return new BN(str.slice(2),16)},fromString=function(str){str="0x"+("0x"===str.slice(0,2)?new BN(str.slice(2),16):new BN(str,10)).toString("hex");return"0x0"===str?"0x":str},fromNumber=function(a){return"string"===typeof a?/^0x/.test(a)?a:"0x"+a:"0x"+(new BN(a)).toString("hex")},toNumber=
function(a){return toBN(a).toNumber()};require=function(method){return function(a,b){return"0x"+toBN(a)[method](toBN(b)).toString("hex")}};global=require("add");var mul=require("mul"),div=require("div");require=require("sub");module.exports={toString:function(a){return toBN(a).toString(10)},fromString:fromString,toNumber:toNumber,fromNumber:fromNumber,toEther:function(wei){return toNumber(div(wei,fromString("10000000000")))/1E8},fromEther:function(eth){return mul(fromNumber(Math.floor(1E8*eth)),fromString("10000000000"))},
toUint256:function(a){return Bytes.pad(32,a)},add:global,mul:mul,div:div,sub:require}}
//# sourceMappingURL=module$node_modules$eth_lib$lib$nat.js.map
