shadow$provide.module$node_modules$web3_eth_ens$src$lib$ResolverMethodHandler=function(global,require,module,exports){function ResolverMethodHandler(registry){this.registry=registry}var PromiEvent=require("module$node_modules$web3_core_promievent$src$index"),namehash=require("module$node_modules$eth_ens_namehash$index"),_=require("module$node_modules$underscore$underscore");ResolverMethodHandler.prototype.method=function(ensName,methodName,methodArguments,callback){return{call:this.call.bind({ensName:ensName,
methodName:methodName,methodArguments:methodArguments,callback:callback,parent:this}),send:this.send.bind({ensName:ensName,methodName:methodName,methodArguments:methodArguments,callback:callback,parent:this})}};ResolverMethodHandler.prototype.call=function(callback){var self=this,promiEvent=new PromiEvent,preparedArguments=this.parent.prepareArguments(this.ensName,this.methodArguments);this.parent.registry.resolver(this.ensName).then(function(resolver){self.parent.handleCall(promiEvent,resolver.methods[self.methodName],
preparedArguments,callback)}).catch(function(error){promiEvent.reject(error)});return promiEvent.eventEmitter};ResolverMethodHandler.prototype.send=function(sendOptions,callback){var self=this,promiEvent=new PromiEvent,preparedArguments=this.parent.prepareArguments(this.ensName,this.methodArguments);this.parent.registry.resolver(this.ensName).then(function(resolver){self.parent.handleSend(promiEvent,resolver.methods[self.methodName],preparedArguments,sendOptions,callback)}).catch(function(error){promiEvent.reject(error)});
return promiEvent.eventEmitter};ResolverMethodHandler.prototype.handleCall=function(promiEvent,method,preparedArguments,callback){method.apply(this,preparedArguments).call().then(function(receipt){promiEvent.resolve(receipt);_.isFunction(callback)&&callback(receipt)}).catch(function(error){promiEvent.reject(error);_.isFunction(callback)&&callback(error)});return promiEvent};ResolverMethodHandler.prototype.handleSend=function(promiEvent,method,preparedArguments,sendOptions,callback){method.apply(this,
preparedArguments).send(sendOptions).on("transactionHash",function(hash){promiEvent.eventEmitter.emit("transactionHash",hash)}).on("confirmation",function(confirmationNumber,receipt){promiEvent.eventEmitter.emit("confirmation",confirmationNumber,receipt)}).on("receipt",function(receipt){promiEvent.eventEmitter.emit("receipt",receipt);promiEvent.resolve(receipt);_.isFunction(callback)&&callback(receipt)}).on("error",function(error){promiEvent.eventEmitter.emit("error",error);promiEvent.reject(error);
_.isFunction(callback)&&callback(error)});return promiEvent};ResolverMethodHandler.prototype.prepareArguments=function(name,methodArguments){name=namehash.hash(name);return 0<methodArguments.length?(methodArguments.unshift(name),methodArguments):[name]};module.exports=ResolverMethodHandler}
//# sourceMappingURL=module$node_modules$web3_eth_ens$src$lib$ResolverMethodHandler.js.map
