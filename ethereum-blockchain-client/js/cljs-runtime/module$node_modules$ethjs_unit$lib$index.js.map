{
"version":3,
"file":"module$node_modules$ethjs_unit$lib$index.js",
"lineCount":7,
"mappings":"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",
"sources":["node_modules/ethjs-unit/lib/index.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$ethjs_unit$lib$index\"] = function(global,require,module,exports) {\n'use strict';\n\nvar BN = require('bn.js');\nvar numberToBN = require('number-to-bn');\n\nvar zero = new BN(0);\nvar negative1 = new BN(-1);\n\n// complete ethereum unit map\nvar unitMap = {\n  'noether': '0', // eslint-disable-line\n  'wei': '1', // eslint-disable-line\n  'kwei': '1000', // eslint-disable-line\n  'Kwei': '1000', // eslint-disable-line\n  'babbage': '1000', // eslint-disable-line\n  'femtoether': '1000', // eslint-disable-line\n  'mwei': '1000000', // eslint-disable-line\n  'Mwei': '1000000', // eslint-disable-line\n  'lovelace': '1000000', // eslint-disable-line\n  'picoether': '1000000', // eslint-disable-line\n  'gwei': '1000000000', // eslint-disable-line\n  'Gwei': '1000000000', // eslint-disable-line\n  'shannon': '1000000000', // eslint-disable-line\n  'nanoether': '1000000000', // eslint-disable-line\n  'nano': '1000000000', // eslint-disable-line\n  'szabo': '1000000000000', // eslint-disable-line\n  'microether': '1000000000000', // eslint-disable-line\n  'micro': '1000000000000', // eslint-disable-line\n  'finney': '1000000000000000', // eslint-disable-line\n  'milliether': '1000000000000000', // eslint-disable-line\n  'milli': '1000000000000000', // eslint-disable-line\n  'ether': '1000000000000000000', // eslint-disable-line\n  'kether': '1000000000000000000000', // eslint-disable-line\n  'grand': '1000000000000000000000', // eslint-disable-line\n  'mether': '1000000000000000000000000', // eslint-disable-line\n  'gether': '1000000000000000000000000000', // eslint-disable-line\n  'tether': '1000000000000000000000000000000' };\n\n/**\n * Returns value of unit in Wei\n *\n * @method getValueOfUnit\n * @param {String} unit the unit to convert to, default ether\n * @returns {BigNumber} value of the unit (in Wei)\n * @throws error if the unit is not correct:w\n */\nfunction getValueOfUnit(unitInput) {\n  var unit = unitInput ? unitInput.toLowerCase() : 'ether';\n  var unitValue = unitMap[unit]; // eslint-disable-line\n\n  if (typeof unitValue !== 'string') {\n    throw new Error('[ethjs-unit] the unit provided ' + unitInput + ' doesn\\'t exists, please use the one of the following units ' + JSON.stringify(unitMap, null, 2));\n  }\n\n  return new BN(unitValue, 10);\n}\n\nfunction numberToString(arg) {\n  if (typeof arg === 'string') {\n    if (!arg.match(/^-?[0-9.]+$/)) {\n      throw new Error('while converting number to string, invalid number value \\'' + arg + '\\', should be a number matching (^-?[0-9.]+).');\n    }\n    return arg;\n  } else if (typeof arg === 'number') {\n    return String(arg);\n  } else if (typeof arg === 'object' && arg.toString && (arg.toTwos || arg.dividedToIntegerBy)) {\n    if (arg.toPrecision) {\n      return String(arg.toPrecision());\n    } else {\n      // eslint-disable-line\n      return arg.toString(10);\n    }\n  }\n  throw new Error('while converting number to string, invalid number value \\'' + arg + '\\' type ' + typeof arg + '.');\n}\n\nfunction fromWei(weiInput, unit, optionsInput) {\n  var wei = numberToBN(weiInput); // eslint-disable-line\n  var negative = wei.lt(zero); // eslint-disable-line\n  var base = getValueOfUnit(unit);\n  var baseLength = unitMap[unit].length - 1 || 1;\n  var options = optionsInput || {};\n\n  if (negative) {\n    wei = wei.mul(negative1);\n  }\n\n  var fraction = wei.mod(base).toString(10); // eslint-disable-line\n\n  while (fraction.length < baseLength) {\n    fraction = '0' + fraction;\n  }\n\n  if (!options.pad) {\n    fraction = fraction.match(/^([0-9]*[1-9]|0)(0*)/)[1];\n  }\n\n  var whole = wei.div(base).toString(10); // eslint-disable-line\n\n  if (options.commify) {\n    whole = whole.replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\n  }\n\n  var value = '' + whole + (fraction == '0' ? '' : '.' + fraction); // eslint-disable-line\n\n  if (negative) {\n    value = '-' + value;\n  }\n\n  return value;\n}\n\nfunction toWei(etherInput, unit) {\n  var ether = numberToString(etherInput); // eslint-disable-line\n  var base = getValueOfUnit(unit);\n  var baseLength = unitMap[unit].length - 1 || 1;\n\n  // Is it negative?\n  var negative = ether.substring(0, 1) === '-'; // eslint-disable-line\n  if (negative) {\n    ether = ether.substring(1);\n  }\n\n  if (ether === '.') {\n    throw new Error('[ethjs-unit] while converting number ' + etherInput + ' to wei, invalid value');\n  }\n\n  // Split it into a whole and fractional part\n  var comps = ether.split('.'); // eslint-disable-line\n  if (comps.length > 2) {\n    throw new Error('[ethjs-unit] while converting number ' + etherInput + ' to wei,  too many decimal points');\n  }\n\n  var whole = comps[0],\n      fraction = comps[1]; // eslint-disable-line\n\n  if (!whole) {\n    whole = '0';\n  }\n  if (!fraction) {\n    fraction = '0';\n  }\n  if (fraction.length > baseLength) {\n    throw new Error('[ethjs-unit] while converting number ' + etherInput + ' to wei, too many decimal places');\n  }\n\n  while (fraction.length < baseLength) {\n    fraction += '0';\n  }\n\n  whole = new BN(whole);\n  fraction = new BN(fraction);\n  var wei = whole.mul(base).add(fraction); // eslint-disable-line\n\n  if (negative) {\n    wei = wei.mul(negative1);\n  }\n\n  return new BN(wei.toString(10), 10);\n}\n\nmodule.exports = {\n  unitMap: unitMap,\n  numberToString: numberToString,\n  getValueOfUnit: getValueOfUnit,\n  fromWei: fromWei,\n  toWei: toWei\n};\n};"],
"names":["shadow$provide","global","require","module","exports","getValueOfUnit","unitInput","unit","toLowerCase","unitValue","unitMap","Error","JSON","stringify","BN","numberToString","arg","match","String","toString","toTwos","dividedToIntegerBy","toPrecision","numberToBN","zero","negative1","fromWei","weiInput","optionsInput","wei","negative","lt","base","baseLength","length","options","mul","fraction","mod","pad","whole","div","commify","replace","value","toWei","etherInput","ether","substring","comps","split","add"]
}
