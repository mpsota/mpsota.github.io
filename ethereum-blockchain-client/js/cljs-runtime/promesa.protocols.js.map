{"version":3,"sources":["promesa/protocols.cljc"],"mappings":"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","names":["var_args","G__27583","promesa.protocols/-bind","js/Error","x__4487__auto__","m__4488__auto__","goog/typeOf","m__4485__auto__","cljs.core/missing-protocol","G__27585","promesa.protocols/-map","G__27587","promesa.protocols/-then","G__27589","promesa.protocols/-mapErr","G__27591","promesa.protocols/-thenErr","G__27593","promesa.protocols/-handle","G__27595","promesa.protocols/-finally","promesa.protocols/IPromise","_","f","executor","promesa.protocols/-extract","promesa.protocols/-resolved?","promesa.protocols/-rejected?","promesa.protocols/-pending?","promesa.protocols/IState","promesa.protocols/-promise","promesa.protocols/IPromiseFactory","promesa.protocols/-cancel!","promesa.protocols/-cancelled?","promesa.protocols/ICancellable","promesa.protocols/-resolve!","promesa.protocols/-reject!","promesa.protocols/ICompletable","v","e","promesa.protocols/-run!","promesa.protocols/-submit!","promesa.protocols/IExecutor","task","promesa.protocols/-schedule!","promesa.protocols/IScheduler","ms","func"],"sourcesContent":[";; Copyright (c) 2015-2019 Andrey Antukh <niwi@niwi.nz>\n;; All rights reserved.\n;;\n;; Redistribution and use in source and binary forms, with or without\n;; modification, are permitted provided that the following conditions\n;; are met:\n;;\n;; 1. Redistributions of source code must retain the above copyright\n;;    notice, this list of conditions and the following disclaimer.\n;; 2. Redistributions in binary form must reproduce the above copyright\n;;    notice, this list of conditions and the following disclaimer in the\n;;    documentation and/or other materials provided with the distribution.\n;;\n;; THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR\n;; IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES\n;; OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n;; IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,\n;; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n;; NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n;; DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n;; THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n;; (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\n;; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n(ns promesa.protocols\n  \"A generic promise abstraction and related protocols.\")\n\n(defprotocol IPromise\n  \"A promise abstraction.\"\n  (-bind [_ f] [_ f executor]\n    \"Apply function to a computation and flatten.\")\n\n  (-map [_ f] [_ f executor]\n    \"Apply function to a computation\")\n  (-then [_ f] [_ f executor]\n    \"Apply function to a computation and flatten if promise found.\")\n  (-mapErr [_ f] [_ f executor]\n    \"Apply function to a failed computation.\")\n  (-thenErr [_ f] [_ f executor]\n    \"Apply function to a failed computation. and flatten if promise found.\")\n\n  (-handle [_ f] [_ f executor]\n    \"Apply function to a computation identpendently if is failed or\n    successful and flatten if promise found.\")\n  (-finally [_ f] [_ f executor]\n    \"Apply function to a computation identpendently if is failed or\n    successful; the return value is ignored.\"))\n\n(defprotocol IState\n  \"Additional state/introspection abstraction.\"\n  (-extract [_] \"Extract the current value.\")\n  (-resolved? [_] \"Returns true if a promise is resolved.\")\n  (-rejected? [_] \"Returns true if a promise is rejected.\")\n  (-pending? [_] \"Retutns true if a promise is pending.\"))\n\n(defprotocol IPromiseFactory\n  \"A promise constructor abstraction.\"\n  (-promise [_] \"Create a promise instance from other types\"))\n\n(defprotocol ICancellable\n  \"A cancellation abstraction.\"\n  (-cancel! [_])\n  (-cancelled? [_]))\n\n(defprotocol ICompletable\n  (-resolve! [_ v] \"Deliver a value to empty promise.\")\n  (-reject! [_ e] \"Deliver an error to empty promise.\"))\n\n(defprotocol IExecutor\n  (-run! [_ task] \"Run a task and return a promise.\")\n  (-submit! [_ task] \"Submit a task and return a promise.\"))\n\n(defprotocol IScheduler\n  \"A generic abstraction for scheduler facilities.\"\n  (-schedule! [_ ms func] \"Schedule a function to be executed in future.\"))\n"]}