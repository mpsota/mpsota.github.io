shadow$provide.module$node_modules$scryptsy$lib$scrypt=function(global,require,module,exports){var crypto=require("module$node_modules$crypto_browserify$index");global=require("module$node_modules$scryptsy$lib$utils");var checkAndInit=global.checkAndInit,smix=global.smix;module.exports=function(key,salt,N,r,p,dkLen,progressCallback,promiseInterval){var $jscomp$destructuring$var3,XY,V,B32,x,_X,B,tickCallback,i;return $jscomp.asyncExecutePromiseGeneratorProgram(function($jscomp$generator$context){switch($jscomp$generator$context.nextAddress){case 1:$jscomp$destructuring$var3=
checkAndInit(key,salt,N,r,p,dkLen,progressCallback),XY=$jscomp$destructuring$var3.XY,V=$jscomp$destructuring$var3.V,B32=$jscomp$destructuring$var3.B32,x=$jscomp$destructuring$var3.x,_X=$jscomp$destructuring$var3._X,B=$jscomp$destructuring$var3.B,tickCallback=$jscomp$destructuring$var3.tickCallback,i=0;case 2:if(!(i<p)){$jscomp$generator$context.jumpTo(4);break}return $jscomp$generator$context.yield(smix(B,128*i*r,r,N,V,XY,_X,B32,x,tickCallback,promiseInterval),3);case 3:i++;$jscomp$generator$context.jumpTo(2);
break;case 4:return $jscomp$generator$context.return(crypto.pbkdf2Sync(key,B,1,dkLen,"sha256"))}})}}
//# sourceMappingURL=module$node_modules$scryptsy$lib$scrypt.js.map
