{
"version":3,
"file":"module$node_modules$url_set_query$index.js",
"lineCount":1,
"mappings":"AAAAA,cAAA,wCAAA,CAA4D,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CACpGD,MAAAC,QAAA,CACAC,QAAqB,CAACC,GAAD,CAAMC,KAAN,CAAa,CAChC,GAAIA,KAAJ,CAAW,CAKTA,KAAA,CAAQ,CAHRA,KAGQ,CAHAA,KAAAC,KAAA,EAAAC,QAAA,CAAqB,WAArB,CAAkC,EAAlC,CAGA,EAAS,GAAT,CAAeF,KAAf,CAAwBA,KAGhC,KAAIG,MADQJ,GAAAK,MAAAC,CAAU,OAAVA,CACA,CAAM,CAAN,CACRL,MAAJ,EAAa,cAAAM,KAAA,CAAqBH,KAArB,CAAb,GAEUA,KAFV,EAEkB,GAFlB,CAIA,KAAII,MAAQR,GAAAQ,MAAA,CAAU,QAAV,CACZR,IAAA,CAAMI,KAAN,CAAcH,KACVO,MAAJ,GACQR,GADR,EACcQ,KAAA,CAAM,CAAN,CADd,CAfS,CAmBX,MAAOR,IApByB,CAFkE;",
"sources":["node_modules/url-set-query/index.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$url_set_query$index\"] = function(global,require,module,exports) {\nmodule.exports = urlSetQuery\nfunction urlSetQuery (url, query) {\n  if (query) {\n    // remove optional leading symbols\n    query = query.trim().replace(/^(\\?|#|&)/, '')\n\n    // don't append empty query\n    query = query ? ('?' + query) : query\n\n    var parts = url.split(/[\\?\\#]/)\n    var start = parts[0]\n    if (query && /\\:\\/\\/[^\\/]*$/.test(start)) {\n      // e.g. http://foo.com -> http://foo.com/\n      start = start + '/'\n    }\n    var match = url.match(/(\\#.*)$/)\n    url = start + query\n    if (match) { // add hash back in\n      url = url + match[0]\n    }\n  }\n  return url\n}\n\n};"],
"names":["shadow$provide","global","require","module","exports","urlSetQuery","url","query","trim","replace","start","split","parts","test","match"]
}
