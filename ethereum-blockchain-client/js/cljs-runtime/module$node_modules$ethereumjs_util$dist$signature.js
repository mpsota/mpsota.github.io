shadow$provide.module$node_modules$ethereumjs_util$dist$signature=function(global,require,module,exports){var Buffer=require("module$node_modules$buffer$index").Buffer;"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var secp256k1=require("module$node_modules$secp256k1$elliptic"),BN=require("module$node_modules$bn_DOT_js$lib$bn"),bytes_1=require("module$node_modules$ethereumjs_util$dist$bytes"),hash_1=require("module$node_modules$ethereumjs_util$dist$hash");exports.ecsign=function(msgHash,
privateKey,chainId){msgHash=secp256k1.sign(msgHash,privateKey);privateKey=msgHash.recovery;return{r:msgHash.signature.slice(0,32),s:msgHash.signature.slice(32,64),v:chainId?privateKey+(2*chainId+35):privateKey+27}};exports.ecrecover=function(msgHash,v,r,s,chainId){r=Buffer.concat([bytes_1.setLength(r,32),bytes_1.setLength(s,32)],64);v=chainId?v-(2*chainId+35):v-27;if(0!==v&&1!==v)throw Error("Invalid signature v value");msgHash=secp256k1.recover(msgHash,r,v);return secp256k1.publicKeyConvert(msgHash,
!1).slice(1)};exports.toRpcSig=function(v,r,s,chainId){chainId=chainId?v-(2*chainId+35):v-27;if(0!==chainId&&1!==chainId)throw Error("Invalid signature v value");return bytes_1.bufferToHex(Buffer.concat([bytes_1.setLengthLeft(r,32),bytes_1.setLengthLeft(s,32),bytes_1.toBuffer(v)]))};exports.fromRpcSig=function(sig){sig=bytes_1.toBuffer(sig);if(65!==sig.length)throw Error("Invalid signature length");var v=sig[64];27>v&&(v+=27);return{v:v,r:sig.slice(0,32),s:sig.slice(32,64)}};exports.isValidSignature=
function(v,r,s,homesteadOrLater,chainId){void 0===homesteadOrLater&&(homesteadOrLater=!0);var SECP256K1_N_DIV_2=new BN("7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0",16),SECP256K1_N=new BN("fffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141",16);if(32!==r.length||32!==s.length)return!1;v=chainId?v-(2*chainId+35):v-27;if(0!==v&&1!==v)return!1;r=new BN(r);s=new BN(s);return r.isZero()||r.gt(SECP256K1_N)||s.isZero()||s.gt(SECP256K1_N)||homesteadOrLater&&1===s.cmp(SECP256K1_N_DIV_2)?
!1:!0};exports.hashPersonalMessage=function(message){var prefix=Buffer.from("Ethereum Signed Message:\n"+message.length.toString(),"utf-8");return hash_1.keccak(Buffer.concat([prefix,message]))}}
//# sourceMappingURL=module$node_modules$ethereumjs_util$dist$signature.js.map
