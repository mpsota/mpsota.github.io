{
"version":3,
"file":"module$node_modules$lodash$_createCtor.js",
"lineCount":2,
"mappings":"AAAAA,cAAA,uCAAA,CAA2D,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAAA,IAC/FC,WAAaH,OAAA,CAAQ,wCAAR,CADkF,CAE/FI,SAAWJ,OAAA,CAAQ,qCAAR,CAmCfC,OAAAC,QAAA,CAzBAG,QAAmB,CAACC,IAAD,CAAO,CACxB,MAAO,SAAQ,EAAG,CAIhB,IAAIC,KAAOC,SACX,QAAQD,IAAAE,OAAR,EACE,KAAK,CAAL,CAAQ,MAAO,KAAIH,IACnB,MAAK,CAAL,CAAQ,MAAO,KAAIA,IAAJ,CAASC,IAAA,CAAK,CAAL,CAAT,CACf,MAAK,CAAL,CAAQ,MAAO,KAAID,IAAJ,CAASC,IAAA,CAAK,CAAL,CAAT,CAAkBA,IAAA,CAAK,CAAL,CAAlB,CACf,MAAK,CAAL,CAAQ,MAAO,KAAID,IAAJ,CAASC,IAAA,CAAK,CAAL,CAAT,CAAkBA,IAAA,CAAK,CAAL,CAAlB,CAA2BA,IAAA,CAAK,CAAL,CAA3B,CACf,MAAK,CAAL,CAAQ,MAAO,KAAID,IAAJ,CAASC,IAAA,CAAK,CAAL,CAAT,CAAkBA,IAAA,CAAK,CAAL,CAAlB,CAA2BA,IAAA,CAAK,CAAL,CAA3B,CAAoCA,IAAA,CAAK,CAAL,CAApC,CACf;KAAK,CAAL,CAAQ,MAAO,KAAID,IAAJ,CAASC,IAAA,CAAK,CAAL,CAAT,CAAkBA,IAAA,CAAK,CAAL,CAAlB,CAA2BA,IAAA,CAAK,CAAL,CAA3B,CAAoCA,IAAA,CAAK,CAAL,CAApC,CAA6CA,IAAA,CAAK,CAAL,CAA7C,CACf,MAAK,CAAL,CAAQ,MAAO,KAAID,IAAJ,CAASC,IAAA,CAAK,CAAL,CAAT,CAAkBA,IAAA,CAAK,CAAL,CAAlB,CAA2BA,IAAA,CAAK,CAAL,CAA3B,CAAoCA,IAAA,CAAK,CAAL,CAApC,CAA6CA,IAAA,CAAK,CAAL,CAA7C,CAAsDA,IAAA,CAAK,CAAL,CAAtD,CACf,MAAK,CAAL,CAAQ,MAAO,KAAID,IAAJ,CAASC,IAAA,CAAK,CAAL,CAAT,CAAkBA,IAAA,CAAK,CAAL,CAAlB,CAA2BA,IAAA,CAAK,CAAL,CAA3B,CAAoCA,IAAA,CAAK,CAAL,CAApC,CAA6CA,IAAA,CAAK,CAAL,CAA7C,CAAsDA,IAAA,CAAK,CAAL,CAAtD,CAA+DA,IAAA,CAAK,CAAL,CAA/D,CARjB,CALgB,IAeZG,YAAcP,UAAA,CAAWG,IAAAK,UAAX,CACdC,KAAAA,CAASN,IAAAO,MAAA,CAAWH,WAAX,CAAwBH,IAAxB,CAIb,OAAOH,SAAA,CAASQ,IAAT,CAAA,CAAmBA,IAAnB,CAA4BF,WApBnB,CADM,CAZyE;",
"sources":["node_modules/lodash/_createCtor.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$lodash$_createCtor\"] = function(global,require,module,exports) {\nvar baseCreate = require('./_baseCreate'),\n    isObject = require('./isObject');\n\n/**\n * Creates a function that produces an instance of `Ctor` regardless of\n * whether it was invoked as part of a `new` expression or by `call` or `apply`.\n *\n * @private\n * @param {Function} Ctor The constructor to wrap.\n * @returns {Function} Returns the new wrapped function.\n */\nfunction createCtor(Ctor) {\n  return function() {\n    // Use a `switch` statement to work with class constructors. See\n    // http://ecma-international.org/ecma-262/7.0/#sec-ecmascript-function-objects-call-thisargument-argumentslist\n    // for more details.\n    var args = arguments;\n    switch (args.length) {\n      case 0: return new Ctor;\n      case 1: return new Ctor(args[0]);\n      case 2: return new Ctor(args[0], args[1]);\n      case 3: return new Ctor(args[0], args[1], args[2]);\n      case 4: return new Ctor(args[0], args[1], args[2], args[3]);\n      case 5: return new Ctor(args[0], args[1], args[2], args[3], args[4]);\n      case 6: return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5]);\n      case 7: return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5], args[6]);\n    }\n    var thisBinding = baseCreate(Ctor.prototype),\n        result = Ctor.apply(thisBinding, args);\n\n    // Mimic the constructor's `return` behavior.\n    // See https://es5.github.io/#x13.2.2 for more details.\n    return isObject(result) ? result : thisBinding;\n  };\n}\n\nmodule.exports = createCtor;\n\n};"],
"names":["shadow$provide","global","require","module","exports","baseCreate","isObject","createCtor","Ctor","args","arguments","length","thisBinding","prototype","result","apply"]
}
