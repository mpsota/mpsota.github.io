{
"version":3,
"file":"module$node_modules$lodash$rearg.js",
"lineCount":1,
"mappings":"AAAAA,cAAA,iCAAA,CAAqD,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAAA,IACzFC,WAAaH,OAAA,CAAQ,wCAAR,CA4BbI,OAAAA,CA3BWJ,OAAAK,CAAQ,sCAARA,CA2BH,CAAS,QAAQ,CAACC,IAAD,CAAOC,OAAP,CAAgB,CAC3C,MAAOJ,WAAA,CAAWG,IAAX,CAzBaE,GAyBb,CAAkCC,IAAAA,EAAlC,CAA6CA,IAAAA,EAA7C,CAAwDA,IAAAA,EAAxD,CAAmEF,OAAnE,CADoC,CAAjC,CAIZN,OAAAC,QAAA,CAAiBE,MAjC4E;",
"sources":["node_modules/lodash/rearg.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$lodash$rearg\"] = function(global,require,module,exports) {\nvar createWrap = require('./_createWrap'),\n    flatRest = require('./_flatRest');\n\n/** Used to compose bitmasks for function metadata. */\nvar WRAP_REARG_FLAG = 256;\n\n/**\n * Creates a function that invokes `func` with arguments arranged according\n * to the specified `indexes` where the argument value at the first index is\n * provided as the first argument, the argument value at the second index is\n * provided as the second argument, and so on.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Function\n * @param {Function} func The function to rearrange arguments for.\n * @param {...(number|number[])} indexes The arranged argument indexes.\n * @returns {Function} Returns the new function.\n * @example\n *\n * var rearged = _.rearg(function(a, b, c) {\n *   return [a, b, c];\n * }, [2, 0, 1]);\n *\n * rearged('b', 'c', 'a')\n * // => ['a', 'b', 'c']\n */\nvar rearg = flatRest(function(func, indexes) {\n  return createWrap(func, WRAP_REARG_FLAG, undefined, undefined, undefined, indexes);\n});\n\nmodule.exports = rearg;\n\n};"],
"names":["shadow$provide","global","require","module","exports","createWrap","rearg","flatRest","func","indexes","WRAP_REARG_FLAG","undefined"]
}
