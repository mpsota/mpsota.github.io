{
"version":3,
"file":"module$node_modules$lodash$_createCompounder.js",
"lineCount":1,
"mappings":"AAAAA,cAAA,6CAAA,CAAiE,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAAA,IACrGC,YAAcH,OAAA,CAAQ,yCAAR,CADuF,CAErGI,OAASJ,OAAA,CAAQ,mCAAR,CAF4F,CAGrGK,MAAQL,OAAA,CAAQ,kCAAR,CAH6F,CASrGM,OAAS,OAebL,OAAAC,QAAA,CANAK,QAAyB,CAACC,QAAD,CAAW,CAClC,MAAO,SAAQ,CAACC,MAAD,CAAS,CACtB,MAAON,YAAA,CAAYE,KAAA,CAAMD,MAAA,CAAOK,MAAP,CAAAC,QAAA,CAAuBJ,MAAvB,CAA+B,EAA/B,CAAN,CAAZ,CAAuDE,QAAvD,CAAiE,EAAjE,CADe,CADU,CAlBqE;",
"sources":["node_modules/lodash/_createCompounder.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$lodash$_createCompounder\"] = function(global,require,module,exports) {\nvar arrayReduce = require('./_arrayReduce'),\n    deburr = require('./deburr'),\n    words = require('./words');\n\n/** Used to compose unicode capture groups. */\nvar rsApos = \"['\\u2019]\";\n\n/** Used to match apostrophes. */\nvar reApos = RegExp(rsApos, 'g');\n\n/**\n * Creates a function like `_.camelCase`.\n *\n * @private\n * @param {Function} callback The function to combine each word.\n * @returns {Function} Returns the new compounder function.\n */\nfunction createCompounder(callback) {\n  return function(string) {\n    return arrayReduce(words(deburr(string).replace(reApos, '')), callback, '');\n  };\n}\n\nmodule.exports = createCompounder;\n\n};"],
"names":["shadow$provide","global","require","module","exports","arrayReduce","deburr","words","reApos","createCompounder","callback","string","replace"]
}
