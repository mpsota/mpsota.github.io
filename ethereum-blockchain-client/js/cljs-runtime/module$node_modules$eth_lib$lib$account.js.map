{
"version":3,
"file":"module$node_modules$eth_lib$lib$account.js",
"lineCount":8,
"mappings":"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",
"sources":["node_modules/eth-lib/lib/account.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$eth_lib$lib$account\"] = function(global,require,module,exports) {\nvar Buffer = require('buffer').Buffer;\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\nvar Bytes = require(\"./bytes\");\nvar Nat = require(\"./nat\");\nvar elliptic = require(\"elliptic\");\nvar rlp = require(\"./rlp\");\nvar secp256k1 = new elliptic.ec(\"secp256k1\"); // eslint-disable-line\n\nvar _require = require(\"./hash\"),\n    keccak256 = _require.keccak256,\n    keccak256s = _require.keccak256s;\n\nvar create = function create(entropy) {\n  var innerHex = keccak256(Bytes.concat(Bytes.random(32), entropy || Bytes.random(32)));\n  var middleHex = Bytes.concat(Bytes.concat(Bytes.random(32), innerHex), Bytes.random(32));\n  var outerHex = keccak256(middleHex);\n  return fromPrivate(outerHex);\n};\n\nvar toChecksum = function toChecksum(address) {\n  var addressHash = keccak256s(address.slice(2));\n  var checksumAddress = \"0x\";\n  for (var i = 0; i < 40; i++) {\n    checksumAddress += parseInt(addressHash[i + 2], 16) > 7 ? address[i + 2].toUpperCase() : address[i + 2];\n  }return checksumAddress;\n};\n\nvar fromPrivate = function fromPrivate(privateKey) {\n  var buffer = new Buffer(privateKey.slice(2), \"hex\");\n  var ecKey = secp256k1.keyFromPrivate(buffer);\n  var publicKey = \"0x\" + ecKey.getPublic(false, 'hex').slice(2);\n  var publicHash = keccak256(publicKey);\n  var address = toChecksum(\"0x\" + publicHash.slice(-40));\n  return {\n    address: address,\n    privateKey: privateKey\n  };\n};\n\nvar encodeSignature = function encodeSignature(_ref) {\n  var _ref2 = _slicedToArray(_ref, 3),\n      v = _ref2[0],\n      r = _ref2[1],\n      s = _ref2[2];\n\n  return Bytes.flatten([r, s, v]);\n};\n\nvar decodeSignature = function decodeSignature(hex) {\n  return [Bytes.slice(64, 65, hex), Bytes.slice(0, 32, hex), Bytes.slice(32, 64, hex)];\n};\n\nvar makeSign = function makeSign(addToV) {\n  return function (hash, privateKey) {\n    var signature = secp256k1.keyFromPrivate(new Buffer(privateKey.slice(2), \"hex\")).sign(new Buffer(hash.slice(2), \"hex\"), { canonical: true });\n    return encodeSignature([Bytes.pad(1, Bytes.fromNumber(addToV + signature.recoveryParam)), Bytes.pad(32, Bytes.fromNat(\"0x\" + signature.r.toString(16))), Bytes.pad(32, Bytes.fromNat(\"0x\" + signature.s.toString(16)))]);\n  };\n};\n\nvar sign = makeSign(27); // v=27|28 instead of 0|1...\n\nvar recover = function recover(hash, signature) {\n  var vals = decodeSignature(signature);\n  var vrs = { v: Bytes.toNumber(vals[0]), r: vals[1].slice(2), s: vals[2].slice(2) };\n  var ecPublicKey = secp256k1.recoverPubKey(new Buffer(hash.slice(2), \"hex\"), vrs, vrs.v < 2 ? vrs.v : 1 - vrs.v % 2); // because odd vals mean v=0... sadly that means v=0 means v=1... I hate that\n  var publicKey = \"0x\" + ecPublicKey.encode(\"hex\", false).slice(2);\n  var publicHash = keccak256(publicKey);\n  var address = toChecksum(\"0x\" + publicHash.slice(-40));\n  return address;\n};\n\nvar transactionSigningData = function transactionSigningData(tx) {\n  return rlp.encode([Bytes.fromNat(tx.nonce), Bytes.fromNat(tx.gasPrice), Bytes.fromNat(tx.gas), tx.to.toLowerCase(), Bytes.fromNat(tx.value), tx.data, Bytes.fromNat(tx.chainId || \"0x1\"), \"0x\", \"0x\"]);\n};\n\nvar signTransaction = function signTransaction(tx, privateKey) {\n  var signingData = transactionSigningData(tx);\n  var signature = makeSign(Nat.toNumber(tx.chainId || \"0x1\") * 2 + 35)(keccak256(signingData), privateKey);\n  var rawTransaction = rlp.decode(signingData).slice(0, 6).concat(decodeSignature(signature));\n  return rlp.encode(rawTransaction);\n};\n\nvar recoverTransaction = function recoverTransaction(rawTransaction) {\n  var values = rlp.decode(rawTransaction);\n  var signature = encodeSignature(values.slice(6, 9));\n  var recovery = Bytes.toNumber(values[6]);\n  var extraData = recovery < 35 ? [] : [Bytes.fromNumber(recovery - 35 >> 1), \"0x\", \"0x\"];\n  var signingData = values.slice(0, 6).concat(extraData);\n  var signingDataHex = rlp.encode(signingData);\n  return recover(keccak256(signingDataHex), signature);\n};\n\nmodule.exports = {\n  create: create,\n  toChecksum: toChecksum,\n  fromPrivate: fromPrivate,\n  sign: sign,\n  recover: recover,\n  signTransaction: signTransaction,\n  recoverTransaction: recoverTransaction,\n  transactionSigningData: transactionSigningData,\n  encodeSignature: encodeSignature,\n  decodeSignature: decodeSignature\n};\n};"],
"names":["shadow$provide","global","require","module","exports","Buffer","_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_i","_s","done","next","push","value","length","err","TypeError","Bytes","Nat","elliptic","rlp","secp256k1","ec","_require","keccak256","keccak256s","toChecksum","address","addressHash","slice","checksumAddress","parseInt","toUpperCase","fromPrivate","privateKey","buffer","publicKey","keyFromPrivate","ecKey","getPublic","publicHash","encodeSignature","_ref","_ref2","flatten","r","s","v","decodeSignature","hex","makeSign","addToV","hash","signature","sign","canonical","pad","fromNumber","recoveryParam","fromNat","toString","recover","vals","vrs","toNumber","recoverPubKey","ecPublicKey","encode","transactionSigningData","tx","nonce","gasPrice","gas","to","toLowerCase","data","chainId","create","entropy","innerHex","concat","random","middleHex","outerHex","signTransaction","signingData","rawTransaction","decode","recoverTransaction","values","recovery","extraData","signingDataHex"]
}
