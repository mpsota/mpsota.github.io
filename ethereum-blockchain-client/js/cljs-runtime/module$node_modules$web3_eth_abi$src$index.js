shadow$provide.module$node_modules$web3_eth_abi$src$index=function(global,require,module,exports){function Result(){}var _=require("module$node_modules$underscore$underscore"),utils=require("module$node_modules$web3_utils$src$index"),ethersAbiCoder=new (require("module$node_modules$ethers$utils$abi_coder").AbiCoder)(function(type,value){return!type.match(/^u?int/)||_.isArray(value)||_.isObject(value)&&"BN"===value.constructor.name?value:value.toString()});global=function(){};global.prototype.encodeFunctionSignature=
function(functionName){_.isObject(functionName)&&(functionName=utils._jsonInterfaceMethodToString(functionName));return utils.sha3(functionName).slice(0,10)};global.prototype.encodeEventSignature=function(functionName){_.isObject(functionName)&&(functionName=utils._jsonInterfaceMethodToString(functionName));return utils.sha3(functionName)};global.prototype.encodeParameter=function(type,param){return this.encodeParameters([type],[param])};global.prototype.encodeParameters=function(types,params){return ethersAbiCoder.encode(this.mapTypes(types),
params.map(function(param){return utils.isBN(param)||utils.isBigNumber(param)?param.toString(10):param}))};global.prototype.mapTypes=function(types){var self=this,mappedTypes=[];types.forEach(function(type){if(self.isSimplifiedStructFormat(type)){var structName=Object.keys(type)[0];mappedTypes.push(Object.assign(self.mapStructNameAndType(structName),{components:self.mapStructToCoderFormat(type[structName])}))}else mappedTypes.push(type)});return mappedTypes};global.prototype.isSimplifiedStructFormat=
function(type){return"object"===typeof type&&"undefined"===typeof type.components&&"undefined"===typeof type.name};global.prototype.mapStructNameAndType=function(structName){var type="tuple";-1<structName.indexOf("[]")&&(type="tuple[]",structName=structName.slice(0,-2));return{type:type,name:structName}};global.prototype.mapStructToCoderFormat=function(struct){var self=this,components=[];Object.keys(struct).forEach(function(key){"object"===typeof struct[key]?components.push(Object.assign(self.mapStructNameAndType(key),
{components:self.mapStructToCoderFormat(struct[key])})):components.push({name:key,type:struct[key]})});return components};global.prototype.encodeFunctionCall=function(jsonInterface,params){return this.encodeFunctionSignature(jsonInterface)+this.encodeParameters(jsonInterface.inputs,params).replace("0x","")};global.prototype.decodeParameter=function(type,bytes){return this.decodeParameters([type],bytes)[0]};global.prototype.decodeParameters=function(outputs,bytes){if(0<outputs.length&&(!bytes||"0x"===
bytes||"0X"===bytes))throw Error("Returned values aren't valid, did it run Out of Gas? You might also see this error if you are not using the correct ABI for the contract you are retrieving data from, requesting data from a block number that does not exist, or querying a node which is not fully synced.");var res=ethersAbiCoder.decode(this.mapTypes(outputs),"0x"+bytes.replace(/0x/i,"")),returnValue=new Result;returnValue.__length__=0;outputs.forEach(function(output,i){var decodedValue=res[returnValue.__length__];
decodedValue="0x"===decodedValue?null:decodedValue;returnValue[i]=decodedValue;_.isObject(output)&&output.name&&(returnValue[output.name]=decodedValue);returnValue.__length__++});return returnValue};global.prototype.decodeLog=function(inputs,data,topics){var _this=this;topics=_.isArray(topics)?topics:[topics];data=data||"";var notIndexedInputs=[],indexedParams=[],topicCount=0;inputs.forEach(function(input,i){input.indexed?(indexedParams[i]="bool int uint address fixed ufixed".split(" ").find(function(staticType){return-1!==
input.type.indexOf(staticType)})?_this.decodeParameter(input.type,topics[topicCount]):topics[topicCount],topicCount++):notIndexedInputs[i]=input});var notIndexedParams=data?this.decodeParameters(notIndexedInputs,data):[],returnValue=new Result;returnValue.__length__=0;inputs.forEach(function(res,i){returnValue[i]="string"===res.type?"":null;"undefined"!==typeof notIndexedParams[i]&&(returnValue[i]=notIndexedParams[i]);"undefined"!==typeof indexedParams[i]&&(returnValue[i]=indexedParams[i]);res.name&&
(returnValue[res.name]=returnValue[i]);returnValue.__length__++});return returnValue};global=new global;module.exports=global}
//# sourceMappingURL=module$node_modules$web3_eth_abi$src$index.js.map
