{
"version":3,
"file":"module$node_modules$lodash$toArray.js",
"lineCount":3,
"mappings":"AAAAA,cAAA,mCAAA,CAAuD,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAC3FC,MAAAA,CAASH,OAAA,CAAQ,oCAAR,CADkF,KAE3FI,UAAYJ,OAAA,CAAQ,uCAAR,CAF+E,CAG3FK,OAASL,OAAA,CAAQ,oCAAR,CAHkF,CAI3FM,YAAcN,OAAA,CAAQ,wCAAR,CAJ6E,CAK3FO,SAAWP,OAAA,CAAQ,qCAAR,CALgF,CAM3FQ,gBAAkBR,OAAA,CAAQ,6CAAR,CANyE,CAO3FS,WAAaT,OAAA,CAAQ,wCAAR,CAP8E;AAQ3FU,WAAaV,OAAA,CAAQ,wCAAR,CAR8E,CAS3FW,cAAgBX,OAAA,CAAQ,2CAAR,CAT2E,CAU3FY,OAASZ,OAAA,CAAQ,mCAAR,CAVkF,CAiB3Fa,YAAcV,MAAA,CAASA,MAAAW,SAAT,CAA2BC,IAAAA,EAyC7Cd,OAAAC,QAAA,CAhBAc,QAAgB,CAACC,KAAD,CAAQ,CACtB,GAAI,CAACA,KAAL,CACE,MAAO,EAET,IAAIX,WAAA,CAAYW,KAAZ,CAAJ,CACE,MAAOV,SAAA,CAASU,KAAT,CAAA,CAAkBN,aAAA,CAAcM,KAAd,CAAlB,CAAyCb,SAAA,CAAUa,KAAV,CAElD,IAAIJ,WAAJ,EAAmBI,KAAA,CAAMJ,WAAN,CAAnB,CACE,MAAOL,gBAAA,CAAgBS,KAAA,CAAMJ,WAAN,CAAA,EAAhB,CARa,KAUlBK,IAAMb,MAAA,CAAOY,KAAP,CAGV,OAAO,CA1CIE,cAwCAC,EAAAF,GAAAE,CAAgBX,UAAhBW,CAvCAC,cAuC8B;AAAAH,GAAA,CAAgBR,UAAhB,CAA6BE,MAE/D,EAAKK,KAAL,CAbe,CA1CuE;",
"sources":["node_modules/lodash/toArray.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$lodash$toArray\"] = function(global,require,module,exports) {\nvar Symbol = require('./_Symbol'),\n    copyArray = require('./_copyArray'),\n    getTag = require('./_getTag'),\n    isArrayLike = require('./isArrayLike'),\n    isString = require('./isString'),\n    iteratorToArray = require('./_iteratorToArray'),\n    mapToArray = require('./_mapToArray'),\n    setToArray = require('./_setToArray'),\n    stringToArray = require('./_stringToArray'),\n    values = require('./values');\n\n/** `Object#toString` result references. */\nvar mapTag = '[object Map]',\n    setTag = '[object Set]';\n\n/** Built-in value references. */\nvar symIterator = Symbol ? Symbol.iterator : undefined;\n\n/**\n * Converts `value` to an array.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {Array} Returns the converted array.\n * @example\n *\n * _.toArray({ 'a': 1, 'b': 2 });\n * // => [1, 2]\n *\n * _.toArray('abc');\n * // => ['a', 'b', 'c']\n *\n * _.toArray(1);\n * // => []\n *\n * _.toArray(null);\n * // => []\n */\nfunction toArray(value) {\n  if (!value) {\n    return [];\n  }\n  if (isArrayLike(value)) {\n    return isString(value) ? stringToArray(value) : copyArray(value);\n  }\n  if (symIterator && value[symIterator]) {\n    return iteratorToArray(value[symIterator]());\n  }\n  var tag = getTag(value),\n      func = tag == mapTag ? mapToArray : (tag == setTag ? setToArray : values);\n\n  return func(value);\n}\n\nmodule.exports = toArray;\n\n};"],
"names":["shadow$provide","global","require","module","exports","Symbol","copyArray","getTag","isArrayLike","isString","iteratorToArray","mapToArray","setToArray","stringToArray","values","symIterator","iterator","undefined","toArray","value","tag","mapTag","func","setTag"]
}
