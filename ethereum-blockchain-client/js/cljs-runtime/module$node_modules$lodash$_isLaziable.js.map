{
"version":3,
"file":"module$node_modules$lodash$_isLaziable.js",
"lineCount":2,
"mappings":"AAAAA,cAAA,uCAAA,CAA2D,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAAA,IAC/FC,YAAcH,OAAA,CAAQ,yCAAR,CADiF,CAE/FI,QAAUJ,OAAA,CAAQ,qCAAR,CAFqF,CAG/FK,YAAcL,OAAA,CAAQ,yCAAR,CAHiF,CAI/FM,OAASN,OAAA,CAAQ,0CAAR,CAwBbC,OAAAC,QAAA,CAdAK,QAAmB,CAACC,IAAD,CAAO,CAAA,IACpBC,SAAWJ,WAAA,CAAYG,IAAZ,CADS,CAEpBE,MAAQJ,MAAA,CAAOG,QAAP,CAEZ,IAAoB,UAApB,EAAI,MAAOC,MAAX,EAAkC,EAAED,QAAF,GAAcN,YAAAQ,UAAd,CAAlC,CACE,MAAO,CAAA,CAET,IAAIH,IAAJ;AAAaE,KAAb,CACE,MAAO,CAAA,CAELE,SAAAA,CAAOR,OAAA,CAAQM,KAAR,CACX,OAAO,CAAC,CAACE,QAAT,EAAiBJ,IAAjB,GAA0BI,QAAA,CAAK,CAAL,CAXF,CAdyE;",
"sources":["node_modules/lodash/_isLaziable.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$lodash$_isLaziable\"] = function(global,require,module,exports) {\nvar LazyWrapper = require('./_LazyWrapper'),\n    getData = require('./_getData'),\n    getFuncName = require('./_getFuncName'),\n    lodash = require('./wrapperLodash');\n\n/**\n * Checks if `func` has a lazy counterpart.\n *\n * @private\n * @param {Function} func The function to check.\n * @returns {boolean} Returns `true` if `func` has a lazy counterpart,\n *  else `false`.\n */\nfunction isLaziable(func) {\n  var funcName = getFuncName(func),\n      other = lodash[funcName];\n\n  if (typeof other != 'function' || !(funcName in LazyWrapper.prototype)) {\n    return false;\n  }\n  if (func === other) {\n    return true;\n  }\n  var data = getData(other);\n  return !!data && func === data[0];\n}\n\nmodule.exports = isLaziable;\n\n};"],
"names":["shadow$provide","global","require","module","exports","LazyWrapper","getData","getFuncName","lodash","isLaziable","func","funcName","other","prototype","data"]
}
