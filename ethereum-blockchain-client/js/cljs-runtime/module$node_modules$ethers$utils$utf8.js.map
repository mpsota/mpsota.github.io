{
"version":3,
"file":"module$node_modules$ethers$utils$utf8.js",
"lineCount":7,
"mappings":"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",
"sources":["node_modules/ethers/utils/utf8.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$ethers$utils$utf8\"] = function(global,require,module,exports) {\n'use strict';\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar constants_1 = require(\"../constants\");\nvar errors_1 = require(\"../errors\");\nvar bytes_1 = require(\"./bytes\");\n///////////////////////////////\nvar UnicodeNormalizationForm;\n(function (UnicodeNormalizationForm) {\n    UnicodeNormalizationForm[\"current\"] = \"\";\n    UnicodeNormalizationForm[\"NFC\"] = \"NFC\";\n    UnicodeNormalizationForm[\"NFD\"] = \"NFD\";\n    UnicodeNormalizationForm[\"NFKC\"] = \"NFKC\";\n    UnicodeNormalizationForm[\"NFKD\"] = \"NFKD\";\n})(UnicodeNormalizationForm = exports.UnicodeNormalizationForm || (exports.UnicodeNormalizationForm = {}));\n;\n// http://stackoverflow.com/questions/18729405/how-to-convert-utf8-string-to-byte-array\nfunction toUtf8Bytes(str, form) {\n    if (form === void 0) { form = UnicodeNormalizationForm.current; }\n    if (form != UnicodeNormalizationForm.current) {\n        errors_1.checkNormalize();\n        str = str.normalize(form);\n    }\n    var result = [];\n    for (var i = 0; i < str.length; i++) {\n        var c = str.charCodeAt(i);\n        if (c < 0x80) {\n            result.push(c);\n        }\n        else if (c < 0x800) {\n            result.push((c >> 6) | 0xc0);\n            result.push((c & 0x3f) | 0x80);\n        }\n        else if ((c & 0xfc00) == 0xd800) {\n            i++;\n            var c2 = str.charCodeAt(i);\n            if (i >= str.length || (c2 & 0xfc00) !== 0xdc00) {\n                throw new Error('invalid utf-8 string');\n            }\n            // Surrogate Pair\n            c = 0x10000 + ((c & 0x03ff) << 10) + (c2 & 0x03ff);\n            result.push((c >> 18) | 0xf0);\n            result.push(((c >> 12) & 0x3f) | 0x80);\n            result.push(((c >> 6) & 0x3f) | 0x80);\n            result.push((c & 0x3f) | 0x80);\n        }\n        else {\n            result.push((c >> 12) | 0xe0);\n            result.push(((c >> 6) & 0x3f) | 0x80);\n            result.push((c & 0x3f) | 0x80);\n        }\n    }\n    return bytes_1.arrayify(result);\n}\nexports.toUtf8Bytes = toUtf8Bytes;\n;\n// http://stackoverflow.com/questions/13356493/decode-utf-8-with-javascript#13691499\nfunction toUtf8String(bytes, ignoreErrors) {\n    bytes = bytes_1.arrayify(bytes);\n    var result = '';\n    var i = 0;\n    // Invalid bytes are ignored\n    while (i < bytes.length) {\n        var c = bytes[i++];\n        // 0xxx xxxx\n        if (c >> 7 === 0) {\n            result += String.fromCharCode(c);\n            continue;\n        }\n        // Multibyte; how many bytes left for this character?\n        var extraLength = null;\n        var overlongMask = null;\n        // 110x xxxx 10xx xxxx\n        if ((c & 0xe0) === 0xc0) {\n            extraLength = 1;\n            overlongMask = 0x7f;\n            // 1110 xxxx 10xx xxxx 10xx xxxx\n        }\n        else if ((c & 0xf0) === 0xe0) {\n            extraLength = 2;\n            overlongMask = 0x7ff;\n            // 1111 0xxx 10xx xxxx 10xx xxxx 10xx xxxx\n        }\n        else if ((c & 0xf8) === 0xf0) {\n            extraLength = 3;\n            overlongMask = 0xffff;\n        }\n        else {\n            if (!ignoreErrors) {\n                if ((c & 0xc0) === 0x80) {\n                    throw new Error('invalid utf8 byte sequence; unexpected continuation byte');\n                }\n                throw new Error('invalid utf8 byte sequence; invalid prefix');\n            }\n            continue;\n        }\n        // Do we have enough bytes in our data?\n        if (i + extraLength > bytes.length) {\n            if (!ignoreErrors) {\n                throw new Error('invalid utf8 byte sequence; too short');\n            }\n            // If there is an invalid unprocessed byte, skip continuation bytes\n            for (; i < bytes.length; i++) {\n                if (bytes[i] >> 6 !== 0x02) {\n                    break;\n                }\n            }\n            continue;\n        }\n        // Remove the length prefix from the char\n        var res = c & ((1 << (8 - extraLength - 1)) - 1);\n        for (var j = 0; j < extraLength; j++) {\n            var nextChar = bytes[i];\n            // Invalid continuation byte\n            if ((nextChar & 0xc0) != 0x80) {\n                res = null;\n                break;\n            }\n            ;\n            res = (res << 6) | (nextChar & 0x3f);\n            i++;\n        }\n        if (res === null) {\n            if (!ignoreErrors) {\n                throw new Error('invalid utf8 byte sequence; invalid continuation byte');\n            }\n            continue;\n        }\n        // Check for overlong seuences (more bytes than needed)\n        if (res <= overlongMask) {\n            if (!ignoreErrors) {\n                throw new Error('invalid utf8 byte sequence; overlong');\n            }\n            continue;\n        }\n        // Maximum code point\n        if (res > 0x10ffff) {\n            if (!ignoreErrors) {\n                throw new Error('invalid utf8 byte sequence; out-of-range');\n            }\n            continue;\n        }\n        // Reserved for UTF-16 surrogate halves\n        if (res >= 0xd800 && res <= 0xdfff) {\n            if (!ignoreErrors) {\n                throw new Error('invalid utf8 byte sequence; utf-16 surrogate');\n            }\n            continue;\n        }\n        if (res <= 0xffff) {\n            result += String.fromCharCode(res);\n            continue;\n        }\n        res -= 0x10000;\n        result += String.fromCharCode(((res >> 10) & 0x3ff) + 0xd800, (res & 0x3ff) + 0xdc00);\n    }\n    return result;\n}\nexports.toUtf8String = toUtf8String;\nfunction formatBytes32String(text) {\n    // Get the bytes\n    var bytes = toUtf8Bytes(text);\n    // Check we have room for null-termination\n    if (bytes.length > 31) {\n        throw new Error('bytes32 string must be less than 32 bytes');\n    }\n    // Zero-pad (implicitly null-terminates)\n    return bytes_1.hexlify(bytes_1.concat([bytes, constants_1.HashZero]).slice(0, 32));\n}\nexports.formatBytes32String = formatBytes32String;\nfunction parseBytes32String(bytes) {\n    var data = bytes_1.arrayify(bytes);\n    // Must be 32 bytes with a null-termination\n    if (data.length !== 32) {\n        throw new Error('invalid bytes32 - not 32 bytes long');\n    }\n    if (data[31] !== 0) {\n        throw new Error('invalid bytes32 string - no null terminator');\n    }\n    // Find the null termination\n    var length = 31;\n    while (data[length - 1] === 0) {\n        length--;\n    }\n    // Determine the string value\n    return toUtf8String(data.slice(0, length));\n}\nexports.parseBytes32String = parseBytes32String;\n\n};"],
"names":["shadow$provide","global","require","module","exports","toUtf8Bytes","str","form","UnicodeNormalizationForm","current","errors_1","checkNormalize","normalize","result","i","length","c","charCodeAt","push","c2","Error","bytes_1","arrayify","toUtf8String","bytes","ignoreErrors","String","fromCharCode","extraLength","overlongMask","res","j","nextChar","Object","defineProperty","value","constants_1","formatBytes32String","text","hexlify","concat","HashZero","slice","parseBytes32String","data"]
}
