{
"version":3,
"file":"module$node_modules$lodash$_createHybrid.js",
"lineCount":4,
"mappings":"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",
"sources":["node_modules/lodash/_createHybrid.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$lodash$_createHybrid\"] = function(global,require,module,exports) {\nvar composeArgs = require('./_composeArgs'),\n    composeArgsRight = require('./_composeArgsRight'),\n    countHolders = require('./_countHolders'),\n    createCtor = require('./_createCtor'),\n    createRecurry = require('./_createRecurry'),\n    getHolder = require('./_getHolder'),\n    reorder = require('./_reorder'),\n    replaceHolders = require('./_replaceHolders'),\n    root = require('./_root');\n\n/** Used to compose bitmasks for function metadata. */\nvar WRAP_BIND_FLAG = 1,\n    WRAP_BIND_KEY_FLAG = 2,\n    WRAP_CURRY_FLAG = 8,\n    WRAP_CURRY_RIGHT_FLAG = 16,\n    WRAP_ARY_FLAG = 128,\n    WRAP_FLIP_FLAG = 512;\n\n/**\n * Creates a function that wraps `func` to invoke it with optional `this`\n * binding of `thisArg`, partial application, and currying.\n *\n * @private\n * @param {Function|string} func The function or method name to wrap.\n * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n * @param {*} [thisArg] The `this` binding of `func`.\n * @param {Array} [partials] The arguments to prepend to those provided to\n *  the new function.\n * @param {Array} [holders] The `partials` placeholder indexes.\n * @param {Array} [partialsRight] The arguments to append to those provided\n *  to the new function.\n * @param {Array} [holdersRight] The `partialsRight` placeholder indexes.\n * @param {Array} [argPos] The argument positions of the new function.\n * @param {number} [ary] The arity cap of `func`.\n * @param {number} [arity] The arity of `func`.\n * @returns {Function} Returns the new wrapped function.\n */\nfunction createHybrid(func, bitmask, thisArg, partials, holders, partialsRight, holdersRight, argPos, ary, arity) {\n  var isAry = bitmask & WRAP_ARY_FLAG,\n      isBind = bitmask & WRAP_BIND_FLAG,\n      isBindKey = bitmask & WRAP_BIND_KEY_FLAG,\n      isCurried = bitmask & (WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG),\n      isFlip = bitmask & WRAP_FLIP_FLAG,\n      Ctor = isBindKey ? undefined : createCtor(func);\n\n  function wrapper() {\n    var length = arguments.length,\n        args = Array(length),\n        index = length;\n\n    while (index--) {\n      args[index] = arguments[index];\n    }\n    if (isCurried) {\n      var placeholder = getHolder(wrapper),\n          holdersCount = countHolders(args, placeholder);\n    }\n    if (partials) {\n      args = composeArgs(args, partials, holders, isCurried);\n    }\n    if (partialsRight) {\n      args = composeArgsRight(args, partialsRight, holdersRight, isCurried);\n    }\n    length -= holdersCount;\n    if (isCurried && length < arity) {\n      var newHolders = replaceHolders(args, placeholder);\n      return createRecurry(\n        func, bitmask, createHybrid, wrapper.placeholder, thisArg,\n        args, newHolders, argPos, ary, arity - length\n      );\n    }\n    var thisBinding = isBind ? thisArg : this,\n        fn = isBindKey ? thisBinding[func] : func;\n\n    length = args.length;\n    if (argPos) {\n      args = reorder(args, argPos);\n    } else if (isFlip && length > 1) {\n      args.reverse();\n    }\n    if (isAry && ary < length) {\n      args.length = ary;\n    }\n    if (this && this !== root && this instanceof wrapper) {\n      fn = Ctor || createCtor(fn);\n    }\n    return fn.apply(thisBinding, args);\n  }\n  return wrapper;\n}\n\nmodule.exports = createHybrid;\n\n};"],
"names":["shadow$provide","global","require","module","exports","createHybrid","func","bitmask","thisArg","partials","holders","partialsRight","holdersRight","argPos","ary","arity","wrapper","length","arguments","args","Array","index","isCurried","placeholder","getHolder","holdersCount","countHolders","composeArgs","composeArgsRight","newHolders","replaceHolders","createRecurry","thisBinding","isBind","fn","isBindKey","reorder","isFlip","reverse","isAry","root","Ctor","createCtor","apply","WRAP_ARY_FLAG","WRAP_BIND_FLAG","WRAP_BIND_KEY_FLAG","WRAP_FLIP_FLAG","undefined"]
}
