shadow$provide.module$node_modules$web3_core_helpers$src$formatters=function(global,require,module,exports){var _=require("module$node_modules$underscore$underscore"),utils=require("module$node_modules$web3_utils$src$index"),Iban=require("module$node_modules$web3_eth_iban$src$index"),outputBigNumberFormatter=function(number){return utils.toBN(number).toString(10)},inputBlockNumberFormatter=function(blockNumber){if(void 0!==blockNumber)return"latest"===blockNumber||"pending"===blockNumber||"earliest"===
blockNumber?blockNumber:"genesis"===blockNumber?"0x0":utils.isHexStrict(blockNumber)?_.isString(blockNumber)?blockNumber.toLowerCase():blockNumber:utils.numberToHex(blockNumber)},_txInputFormatter=function(options){options.to&&(options.to=inputAddressFormatter(options.to));if(options.data&&options.input)throw Error('You can\'t have "data" and "input" as properties of transactions at the same time, please use either "data" or "input" instead.');!options.data&&options.input&&(options.data=options.input,
delete options.input);if(options.data&&!utils.isHex(options.data))throw Error("The data field must be HEX encoded data.");if(options.gas||options.gasLimit)options.gas=options.gas||options.gasLimit;["gasPrice","gas","value","nonce"].filter(function(key){return void 0!==options[key]}).forEach(function(key){options[key]=utils.numberToHex(options[key])});return options},outputTransactionFormatter=function(tx){null!==tx.blockNumber&&(tx.blockNumber=utils.hexToNumber(tx.blockNumber));null!==tx.transactionIndex&&
(tx.transactionIndex=utils.hexToNumber(tx.transactionIndex));tx.nonce=utils.hexToNumber(tx.nonce);tx.gas=utils.hexToNumber(tx.gas);tx.gasPrice=outputBigNumberFormatter(tx.gasPrice);tx.value=outputBigNumberFormatter(tx.value);tx.to&&utils.isAddress(tx.to)?tx.to=utils.toChecksumAddress(tx.to):tx.to=null;tx.from&&(tx.from=utils.toChecksumAddress(tx.from));return tx},outputLogFormatter=function(log){if("string"===typeof log.blockHash&&"string"===typeof log.transactionHash&&"string"===typeof log.logIndex){var shaId=
utils.sha3(log.blockHash.replace("0x","")+log.transactionHash.replace("0x","")+log.logIndex.replace("0x",""));log.id="log_"+shaId.replace("0x","").substr(0,8)}else log.id||(log.id=null);null!==log.blockNumber&&(log.blockNumber=utils.hexToNumber(log.blockNumber));null!==log.transactionIndex&&(log.transactionIndex=utils.hexToNumber(log.transactionIndex));null!==log.logIndex&&(log.logIndex=utils.hexToNumber(log.logIndex));log.address&&(log.address=utils.toChecksumAddress(log.address));return log},inputAddressFormatter=
function(address){var iban=new Iban(address);if(iban.isValid()&&iban.isDirect())return iban.toAddress().toLowerCase();if(utils.isAddress(address))return"0x"+address.toLowerCase().replace("0x","");throw Error('Provided address "'+address+"\" is invalid, the capitalization checksum test failed, or its an indrect IBAN address which can't be converted.");};module.exports={inputDefaultBlockNumberFormatter:function(blockNumber){return!this||void 0!==blockNumber&&null!==blockNumber?inputBlockNumberFormatter(blockNumber):
inputBlockNumberFormatter(this.defaultBlock)},inputBlockNumberFormatter:inputBlockNumberFormatter,inputCallFormatter:function(options){options=_txInputFormatter(options);var from=options.from||(this?this.defaultAccount:null);from&&(options.from=inputAddressFormatter(from));return options},inputTransactionFormatter:function(options){options=_txInputFormatter(options);if(!_.isNumber(options.from)&&!_.isObject(options.from)){options.from=options.from||(this?this.defaultAccount:null);if(!options.from&&
!_.isNumber(options.from))throw Error('The send transactions "from" field must be defined!');options.from=inputAddressFormatter(options.from)}return options},inputAddressFormatter:inputAddressFormatter,inputPostFormatter:function(post){post.ttl&&(post.ttl=utils.numberToHex(post.ttl));post.workToProve&&(post.workToProve=utils.numberToHex(post.workToProve));post.priority&&(post.priority=utils.numberToHex(post.priority));_.isArray(post.topics)||(post.topics=post.topics?[post.topics]:[]);post.topics=
post.topics.map(function(topic){return 0===topic.indexOf("0x")?topic:utils.fromUtf8(topic)});return post},inputLogFormatter:function(options){var toTopic=function(value){if(null===value||"undefined"===typeof value)return null;value=String(value);return 0===value.indexOf("0x")?value:utils.fromUtf8(value)};if(options.fromBlock||0===options.fromBlock)options.fromBlock=inputBlockNumberFormatter(options.fromBlock);if(options.toBlock||0===options.toBlock)options.toBlock=inputBlockNumberFormatter(options.toBlock);
options.topics=options.topics||[];options.topics=options.topics.map(function(topic){return _.isArray(topic)?topic.map(toTopic):toTopic(topic)});toTopic=null;options.address&&(options.address=_.isArray(options.address)?options.address.map(function(addr){return inputAddressFormatter(addr)}):inputAddressFormatter(options.address));return options},inputSignFormatter:function(data){return utils.isHexStrict(data)?data:utils.utf8ToHex(data)},inputStorageKeysFormatter:function(keys){return keys.map(utils.numberToHex)},
outputProofFormatter:function(proof){proof.address=utils.toChecksumAddress(proof.address);proof.nonce=utils.hexToNumberString(proof.nonce);proof.balance=utils.hexToNumberString(proof.balance);return proof},outputBigNumberFormatter:outputBigNumberFormatter,outputTransactionFormatter:outputTransactionFormatter,outputTransactionReceiptFormatter:function(receipt){if("object"!==typeof receipt)throw Error("Received receipt is invalid: "+receipt);null!==receipt.blockNumber&&(receipt.blockNumber=utils.hexToNumber(receipt.blockNumber));
null!==receipt.transactionIndex&&(receipt.transactionIndex=utils.hexToNumber(receipt.transactionIndex));receipt.cumulativeGasUsed=utils.hexToNumber(receipt.cumulativeGasUsed);receipt.gasUsed=utils.hexToNumber(receipt.gasUsed);_.isArray(receipt.logs)&&(receipt.logs=receipt.logs.map(outputLogFormatter));receipt.contractAddress&&(receipt.contractAddress=utils.toChecksumAddress(receipt.contractAddress));"undefined"!==typeof receipt.status&&null!==receipt.status&&(receipt.status=!!parseInt(receipt.status));
return receipt},outputBlockFormatter:function(block){block.gasLimit=utils.hexToNumber(block.gasLimit);block.gasUsed=utils.hexToNumber(block.gasUsed);block.size=utils.hexToNumber(block.size);block.timestamp=utils.hexToNumber(block.timestamp);null!==block.number&&(block.number=utils.hexToNumber(block.number));block.difficulty&&(block.difficulty=outputBigNumberFormatter(block.difficulty));block.totalDifficulty&&(block.totalDifficulty=outputBigNumberFormatter(block.totalDifficulty));_.isArray(block.transactions)&&
block.transactions.forEach(function(item){if(!_.isString(item))return outputTransactionFormatter(item)});block.miner&&(block.miner=utils.toChecksumAddress(block.miner));return block},outputLogFormatter:outputLogFormatter,outputPostFormatter:function(post){post.expiry=utils.hexToNumber(post.expiry);post.sent=utils.hexToNumber(post.sent);post.ttl=utils.hexToNumber(post.ttl);post.workProved=utils.hexToNumber(post.workProved);post.topics||(post.topics=[]);post.topics=post.topics.map(function(topic){return utils.toUtf8(topic)});
return post},outputSyncingFormatter:function(result){result.startingBlock=utils.hexToNumber(result.startingBlock);result.currentBlock=utils.hexToNumber(result.currentBlock);result.highestBlock=utils.hexToNumber(result.highestBlock);result.knownStates&&(result.knownStates=utils.hexToNumber(result.knownStates),result.pulledStates=utils.hexToNumber(result.pulledStates));return result}}}
//# sourceMappingURL=module$node_modules$web3_core_helpers$src$formatters.js.map
