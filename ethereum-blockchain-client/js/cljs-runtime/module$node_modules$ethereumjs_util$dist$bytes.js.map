{
"version":3,
"file":"module$node_modules$ethereumjs_util$dist$bytes.js",
"lineCount":5,
"mappings":"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",
"sources":["node_modules/ethereumjs-util/dist/bytes.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$ethereumjs_util$dist$bytes\"] = function(global,require,module,exports) {\nvar Buffer = require('buffer').Buffer;\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar ethjsUtil = require('ethjs-util');\nvar BN = require(\"bn.js\");\n/**\n * Returns a buffer filled with 0s.\n * @param bytes the number of bytes the buffer should be\n */\nexports.zeros = function (bytes) {\n    return Buffer.allocUnsafe(bytes).fill(0);\n};\n/**\n * Left Pads an `Array` or `Buffer` with leading zeros till it has `length` bytes.\n * Or it truncates the beginning if it exceeds.\n * @param msg the value to pad (Buffer|Array)\n * @param length the number of bytes the output should be\n * @param right whether to start padding form the left or right\n * @return (Buffer|Array)\n */\nexports.setLengthLeft = function (msg, length, right) {\n    if (right === void 0) { right = false; }\n    var buf = exports.zeros(length);\n    msg = exports.toBuffer(msg);\n    if (right) {\n        if (msg.length < length) {\n            msg.copy(buf);\n            return buf;\n        }\n        return msg.slice(0, length);\n    }\n    else {\n        if (msg.length < length) {\n            msg.copy(buf, length - msg.length);\n            return buf;\n        }\n        return msg.slice(-length);\n    }\n};\nexports.setLength = exports.setLengthLeft;\n/**\n * Right Pads an `Array` or `Buffer` with leading zeros till it has `length` bytes.\n * Or it truncates the beginning if it exceeds.\n * @param msg the value to pad (Buffer|Array)\n * @param length the number of bytes the output should be\n * @return (Buffer|Array)\n */\nexports.setLengthRight = function (msg, length) {\n    return exports.setLength(msg, length, true);\n};\n/**\n * Trims leading zeros from a `Buffer` or an `Array`.\n * @param a (Buffer|Array|String)\n * @return (Buffer|Array|String)\n */\nexports.unpad = function (a) {\n    a = ethjsUtil.stripHexPrefix(a);\n    var first = a[0];\n    while (a.length > 0 && first.toString() === '0') {\n        a = a.slice(1);\n        first = a[0];\n    }\n    return a;\n};\nexports.stripZeros = exports.unpad;\n/**\n * Attempts to turn a value into a `Buffer`. As input it supports `Buffer`, `String`, `Number`, null/undefined, `BN` and other objects with a `toArray()` method.\n * @param v the value\n */\nexports.toBuffer = function (v) {\n    if (!Buffer.isBuffer(v)) {\n        if (Array.isArray(v)) {\n            v = Buffer.from(v);\n        }\n        else if (typeof v === 'string') {\n            if (ethjsUtil.isHexString(v)) {\n                v = Buffer.from(ethjsUtil.padToEven(ethjsUtil.stripHexPrefix(v)), 'hex');\n            }\n            else {\n                throw new Error(\"Cannot convert string to buffer. toBuffer only supports 0x-prefixed hex strings and this string was given: \" + v);\n            }\n        }\n        else if (typeof v === 'number') {\n            v = ethjsUtil.intToBuffer(v);\n        }\n        else if (v === null || v === undefined) {\n            v = Buffer.allocUnsafe(0);\n        }\n        else if (BN.isBN(v)) {\n            v = v.toArrayLike(Buffer);\n        }\n        else if (v.toArray) {\n            // converts a BN to a Buffer\n            v = Buffer.from(v.toArray());\n        }\n        else {\n            throw new Error('invalid type');\n        }\n    }\n    return v;\n};\n/**\n * Converts a `Buffer` to a `Number`.\n * @param buf `Buffer` object to convert\n * @throws If the input number exceeds 53 bits.\n */\nexports.bufferToInt = function (buf) {\n    return new BN(exports.toBuffer(buf)).toNumber();\n};\n/**\n * Converts a `Buffer` into a `0x`-prefixed hex `String`.\n * @param buf `Buffer` object to convert\n */\nexports.bufferToHex = function (buf) {\n    buf = exports.toBuffer(buf);\n    return '0x' + buf.toString('hex');\n};\n/**\n * Interprets a `Buffer` as a signed integer and returns a `BN`. Assumes 256-bit numbers.\n * @param num Signed integer value\n */\nexports.fromSigned = function (num) {\n    return new BN(num).fromTwos(256);\n};\n/**\n * Converts a `BN` to an unsigned integer and returns it as a `Buffer`. Assumes 256-bit numbers.\n * @param num\n */\nexports.toUnsigned = function (num) {\n    return Buffer.from(num.toTwos(256).toArray());\n};\n/**\n * Adds \"0x\" to a given `String` if it does not already start with \"0x\".\n */\nexports.addHexPrefix = function (str) {\n    if (typeof str !== 'string') {\n        return str;\n    }\n    return ethjsUtil.isHexPrefixed(str) ? str : '0x' + str;\n};\n/**\n * Converts a `Buffer` or `Array` to JSON.\n * @param ba (Buffer|Array)\n * @return (Array|String|null)\n */\nexports.baToJSON = function (ba) {\n    if (Buffer.isBuffer(ba)) {\n        return \"0x\" + ba.toString('hex');\n    }\n    else if (ba instanceof Array) {\n        var array = [];\n        for (var i = 0; i < ba.length; i++) {\n            array.push(exports.baToJSON(ba[i]));\n        }\n        return array;\n    }\n};\n//# sourceMappingURL=bytes.js.map\n};"],
"names":["shadow$provide","global","require","module","exports","Buffer","Object","defineProperty","value","ethjsUtil","BN","zeros","exports.zeros","bytes","allocUnsafe","fill","setLengthLeft","exports.setLengthLeft","msg","length","right","buf","toBuffer","copy","slice","setLength","setLengthRight","exports.setLengthRight","unpad","exports.unpad","a","stripHexPrefix","first","toString","stripZeros","exports.toBuffer","v","isBuffer","Array","isArray","from","isHexString","padToEven","Error","intToBuffer","undefined","isBN","toArrayLike","toArray","bufferToInt","exports.bufferToInt","toNumber","bufferToHex","exports.bufferToHex","fromSigned","exports.fromSigned","num","fromTwos","toUnsigned","exports.toUnsigned","toTwos","addHexPrefix","exports.addHexPrefix","str","isHexPrefixed","baToJSON","exports.baToJSON","ba","array","i","push"]
}
