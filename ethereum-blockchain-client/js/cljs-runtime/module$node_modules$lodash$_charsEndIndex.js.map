{
"version":3,
"file":"module$node_modules$lodash$_charsEndIndex.js",
"lineCount":1,
"mappings":"AAAAA,cAAA,0CAAA,CAA8D,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CACtG,IAAIC,YAAcH,OAAA,CAAQ,yCAAR,CAkBlBC,OAAAC,QAAA,CAPAE,QAAsB,CAACC,UAAD,CAAaC,UAAb,CAAyB,CAG7C,IAFA,IAAIC,MAAQF,UAAAG,OAEZ,CAAOD,KAAA,EAAP,EAAmE,EAAnE,CAAkBJ,WAAA,CAAYG,UAAZ,CAAwBD,UAAA,CAAWE,KAAX,CAAxB,CAA2C,CAA3C,CAAlB,CAAA,EACA,MAAOA,MAJsC,CAZuD;",
"sources":["node_modules/lodash/_charsEndIndex.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$lodash$_charsEndIndex\"] = function(global,require,module,exports) {\nvar baseIndexOf = require('./_baseIndexOf');\n\n/**\n * Used by `_.trim` and `_.trimEnd` to get the index of the last string symbol\n * that is not found in the character symbols.\n *\n * @private\n * @param {Array} strSymbols The string symbols to inspect.\n * @param {Array} chrSymbols The character symbols to find.\n * @returns {number} Returns the index of the last unmatched string symbol.\n */\nfunction charsEndIndex(strSymbols, chrSymbols) {\n  var index = strSymbols.length;\n\n  while (index-- && baseIndexOf(chrSymbols, strSymbols[index], 0) > -1) {}\n  return index;\n}\n\nmodule.exports = charsEndIndex;\n\n};"],
"names":["shadow$provide","global","require","module","exports","baseIndexOf","charsEndIndex","strSymbols","chrSymbols","index","length"]
}
