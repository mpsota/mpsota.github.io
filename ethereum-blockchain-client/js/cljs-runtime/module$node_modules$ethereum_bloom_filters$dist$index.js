shadow$provide.module$node_modules$ethereum_bloom_filters$dist$index=function(global,require,module,exports){function isBloom(bloom){return"string"===typeof bloom&&/^(0x)?[0-9a-f]{512}$/i.test(bloom)?/^(0x)?[0-9a-f]{512}$/.test(bloom)||/^(0x)?[0-9A-F]{512}$/.test(bloom)?!0:!1:!1}function isInBloom(bloom,value){"object"===typeof value&&value.constructor===Uint8Array&&(value=utils_1.bytesToHex(value));value=utils_1.keccak256(value).replace("0x","");for(var i=0;12>i;i+=4){var bitpos=(parseInt(value.substr(i,
2),16)<<8)+parseInt(value.substr(i+2,2),16)&2047;var JSCompiler_inline_result=bloom.charCodeAt(bloom.length-1-Math.floor(bitpos/4));if(48<=JSCompiler_inline_result&&57>=JSCompiler_inline_result)JSCompiler_inline_result-=48;else if(65<=JSCompiler_inline_result&&70>=JSCompiler_inline_result)JSCompiler_inline_result-=55;else if(97<=JSCompiler_inline_result&&102>=JSCompiler_inline_result)JSCompiler_inline_result-=87;else throw Error("invalid bloom");bitpos=1<<bitpos%4;if((JSCompiler_inline_result&bitpos)!==
bitpos)return!1}return!0}function isTopic(topic){return"string"!==typeof topic?!1:/^(0x)?[0-9a-f]{64}$/i.test(topic)&&(/^(0x)?[0-9a-f]{64}$/.test(topic)||/^(0x)?[0-9A-F]{64}$/.test(topic))?!0:!1}function isAddress(address){return"string"!==typeof address?!1:address.match(/^(0x)?[0-9a-fA-F]{40}$/)||address.match(/^XE[0-9]{2}[0-9A-Za-z]{30,31}$/)?!0:!1}Object.defineProperty(exports,"__esModule",{value:!0});var utils_1=require("module$node_modules$ethereum_bloom_filters$dist$utils");exports.isBloom=
isBloom;exports.isInBloom=isInBloom;exports.isUserEthereumAddressInBloom=function(bloom,ethereumAddress){if(!isBloom(bloom))throw Error("Invalid bloom given");if(!isAddress(ethereumAddress))throw Error('Invalid ethereum address given: "'+ethereumAddress+'"');ethereumAddress=utils_1.padLeft(ethereumAddress,64);return isInBloom(bloom,ethereumAddress)};exports.isContractAddressInBloom=function(bloom,contractAddress){if(!isBloom(bloom))throw Error("Invalid bloom given");if(!isAddress(contractAddress))throw Error('Invalid contract address given: "'+
contractAddress+'"');return isInBloom(bloom,contractAddress)};exports.isTopicInBloom=function(bloom,topic){if(!isBloom(bloom))throw Error("Invalid bloom given");if(!isTopic(topic))throw Error("Invalid topic");return isInBloom(bloom,topic)};exports.isTopic=isTopic;exports.isAddress=isAddress}
//# sourceMappingURL=module$node_modules$ethereum_bloom_filters$dist$index.js.map
