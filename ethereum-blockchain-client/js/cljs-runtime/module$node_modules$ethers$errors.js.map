{
"version":3,
"file":"module$node_modules$ethers$errors.js",
"lineCount":7,
"mappings":"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",
"sources":["node_modules/ethers/errors.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$ethers$errors\"] = function(global,require,module,exports) {\n'use strict';\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar _version_1 = require(\"./_version\");\n// Unknown Error\nexports.UNKNOWN_ERROR = 'UNKNOWN_ERROR';\n// Not implemented\nexports.NOT_IMPLEMENTED = 'NOT_IMPLEMENTED';\n// Missing new operator to an object\n//  - name: The name of the class\nexports.MISSING_NEW = 'MISSING_NEW';\n// Call exception\n//  - transaction: the transaction\n//  - address?: the contract address\n//  - args?: The arguments passed into the function\n//  - method?: The Solidity method signature\n//  - errorSignature?: The EIP848 error signature\n//  - errorArgs?: The EIP848 error parameters\n//  - reason: The reason (only for EIP848 \"Error(string)\")\nexports.CALL_EXCEPTION = 'CALL_EXCEPTION';\n// Invalid argument (e.g. value is incompatible with type) to a function:\n//   - argument: The argument name that was invalid\n//   - value: The value of the argument\nexports.INVALID_ARGUMENT = 'INVALID_ARGUMENT';\n// Missing argument to a function:\n//   - count: The number of arguments received\n//   - expectedCount: The number of arguments expected\nexports.MISSING_ARGUMENT = 'MISSING_ARGUMENT';\n// Too many arguments\n//   - count: The number of arguments received\n//   - expectedCount: The number of arguments expected\nexports.UNEXPECTED_ARGUMENT = 'UNEXPECTED_ARGUMENT';\n// Numeric Fault\n//   - operation: the operation being executed\n//   - fault: the reason this faulted\nexports.NUMERIC_FAULT = 'NUMERIC_FAULT';\n// Insufficien funds (< value + gasLimit * gasPrice)\n//   - transaction: the transaction attempted\nexports.INSUFFICIENT_FUNDS = 'INSUFFICIENT_FUNDS';\n// Nonce has already been used\n//   - transaction: the transaction attempted\nexports.NONCE_EXPIRED = 'NONCE_EXPIRED';\n// The replacement fee for the transaction is too low\n//   - transaction: the transaction attempted\nexports.REPLACEMENT_UNDERPRICED = 'REPLACEMENT_UNDERPRICED';\n// Unsupported operation\n//   - operation\nexports.UNSUPPORTED_OPERATION = 'UNSUPPORTED_OPERATION';\nvar _permanentCensorErrors = false;\nvar _censorErrors = false;\n// @TODO: Enum\nfunction throwError(message, code, params) {\n    if (_censorErrors) {\n        throw new Error('unknown error');\n    }\n    if (!code) {\n        code = exports.UNKNOWN_ERROR;\n    }\n    if (!params) {\n        params = {};\n    }\n    var messageDetails = [];\n    Object.keys(params).forEach(function (key) {\n        try {\n            messageDetails.push(key + '=' + JSON.stringify(params[key]));\n        }\n        catch (error) {\n            messageDetails.push(key + '=' + JSON.stringify(params[key].toString()));\n        }\n    });\n    messageDetails.push(\"version=\" + _version_1.version);\n    var reason = message;\n    if (messageDetails.length) {\n        message += ' (' + messageDetails.join(', ') + ')';\n    }\n    // @TODO: Any??\n    var error = new Error(message);\n    error.reason = reason;\n    error.code = code;\n    Object.keys(params).forEach(function (key) {\n        error[key] = params[key];\n    });\n    throw error;\n}\nexports.throwError = throwError;\nfunction checkNew(self, kind) {\n    if (!(self instanceof kind)) {\n        throwError('missing new', exports.MISSING_NEW, { name: kind.name });\n    }\n}\nexports.checkNew = checkNew;\nfunction checkArgumentCount(count, expectedCount, suffix) {\n    if (!suffix) {\n        suffix = '';\n    }\n    if (count < expectedCount) {\n        throwError('missing argument' + suffix, exports.MISSING_ARGUMENT, { count: count, expectedCount: expectedCount });\n    }\n    if (count > expectedCount) {\n        throwError('too many arguments' + suffix, exports.UNEXPECTED_ARGUMENT, { count: count, expectedCount: expectedCount });\n    }\n}\nexports.checkArgumentCount = checkArgumentCount;\nfunction setCensorship(censorship, permanent) {\n    if (_permanentCensorErrors) {\n        throwError('error censorship permanent', exports.UNSUPPORTED_OPERATION, { operation: 'setCensorship' });\n    }\n    _censorErrors = !!censorship;\n    _permanentCensorErrors = !!permanent;\n}\nexports.setCensorship = setCensorship;\nfunction checkNormalize() {\n    try {\n        // Make sure all forms of normalization are supported\n        [\"NFD\", \"NFC\", \"NFKD\", \"NFKC\"].forEach(function (form) {\n            try {\n                \"test\".normalize(form);\n            }\n            catch (error) {\n                throw new Error('missing ' + form);\n            }\n        });\n        if (String.fromCharCode(0xe9).normalize('NFD') !== String.fromCharCode(0x65, 0x0301)) {\n            throw new Error('broken implementation');\n        }\n    }\n    catch (error) {\n        throwError('platform missing String.prototype.normalize', exports.UNSUPPORTED_OPERATION, { operation: 'String.prototype.normalize', form: error.message });\n    }\n}\nexports.checkNormalize = checkNormalize;\nvar LogLevels = { debug: 1, \"default\": 2, info: 2, warn: 3, error: 4, off: 5 };\nvar LogLevel = LogLevels[\"default\"];\nfunction setLogLevel(logLevel) {\n    var level = LogLevels[logLevel];\n    if (level == null) {\n        warn(\"invliad log level - \" + logLevel);\n        return;\n    }\n    LogLevel = level;\n}\nexports.setLogLevel = setLogLevel;\nfunction log(logLevel, args) {\n    if (LogLevel > LogLevels[logLevel]) {\n        return;\n    }\n    console.log.apply(console, args);\n}\nfunction warn() {\n    var args = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        args[_i] = arguments[_i];\n    }\n    log(\"warn\", args);\n}\nexports.warn = warn;\nfunction info() {\n    var args = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        args[_i] = arguments[_i];\n    }\n    log(\"info\", args);\n}\nexports.info = info;\n\n};"],
"names":["shadow$provide","global","require","module","exports","throwError","message","code","params","_censorErrors","Error","UNKNOWN_ERROR","messageDetails","Object","keys","forEach","key","push","JSON","stringify","error","toString","_version_1","version","reason","length","join","warn","args","_i","arguments","LogLevel","LogLevels","console","log","apply","defineProperty","value","NOT_IMPLEMENTED","MISSING_NEW","CALL_EXCEPTION","INVALID_ARGUMENT","MISSING_ARGUMENT","UNEXPECTED_ARGUMENT","NUMERIC_FAULT","INSUFFICIENT_FUNDS","NONCE_EXPIRED","REPLACEMENT_UNDERPRICED","UNSUPPORTED_OPERATION","_permanentCensorErrors","checkNew","self","kind","name","checkArgumentCount","count","expectedCount","suffix","setCensorship","censorship","permanent","operation","checkNormalize","form","normalize","String","fromCharCode","debug","info","off","setLogLevel","logLevel","level"]
}
