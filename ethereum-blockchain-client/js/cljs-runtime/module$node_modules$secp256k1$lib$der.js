shadow$provide.module$node_modules$secp256k1$lib$der=function(global,require,module,exports){var Buffer=require("module$node_modules$safe_buffer$index").Buffer,bip66=require("module$node_modules$bip66$index"),EC_PRIVKEY_EXPORT_DER_COMPRESSED=Buffer.from([48,129,211,2,1,1,4,32,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,160,129,133,48,129,130,2,1,1,48,44,6,7,42,134,72,206,61,1,1,2,33,0,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,
255,255,255,254,255,255,252,47,48,6,4,1,0,4,1,7,4,33,2,121,190,102,126,249,220,187,172,85,160,98,149,206,135,11,7,2,155,252,219,45,206,40,217,89,242,129,91,22,248,23,152,2,33,0,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,254,186,174,220,230,175,72,160,59,191,210,94,140,208,54,65,65,2,1,1,161,36,3,34,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),EC_PRIVKEY_EXPORT_DER_UNCOMPRESSED=Buffer.from([48,130,1,19,2,1,1,4,32,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,160,129,165,48,129,162,2,1,1,48,44,6,7,42,134,72,206,61,1,1,2,33,0,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,254,255,255,252,47,48,6,4,1,0,4,1,7,4,65,4,121,190,102,126,249,220,187,172,85,160,98,149,206,135,11,7,2,155,252,219,45,206,40,217,89,242,129,91,22,248,23,152,72,58,218,119,38,163,196,101,93,164,251,252,14,17,8,168,253,23,180,72,166,133,84,25,156,71,208,143,251,16,212,184,2,33,0,255,255,255,255,255,255,255,
255,255,255,255,255,255,255,255,254,186,174,220,230,175,72,160,59,191,210,94,140,208,54,65,65,2,1,1,161,68,3,66,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]);exports.privateKeyExport=function(privateKey,publicKey,compressed){var result=Buffer.from(compressed?EC_PRIVKEY_EXPORT_DER_COMPRESSED:EC_PRIVKEY_EXPORT_DER_UNCOMPRESSED);privateKey.copy(result,compressed?8:9);publicKey.copy(result,compressed?181:214);return result};
exports.privateKeyImport=function(privateKey){var length=privateKey.length,index=0;if(!(length<index+1||48!==privateKey[index])&&(index+=1,!(length<index+1)&&privateKey[index]&128)){var lenb=privateKey[index]&127;index+=1;if(!(1>lenb||2<lenb||length<index+lenb)){var len=privateKey[index+lenb-1]|(1<lenb?privateKey[index+lenb-2]<<8:0);index+=lenb;if(!(length<index+len||length<index+3||2!==privateKey[index]||1!==privateKey[index+1]||1!==privateKey[index+2]||(index+=3,length<index+2||4!==privateKey[index]||
32<privateKey[index+1]||length<index+2+privateKey[index+1])))return privateKey.slice(index+2,index+2+privateKey[index+1])}}};exports.signatureExport=function(sigObj){for(var r=Buffer.concat([Buffer.from([0]),sigObj.r]),lenR=33,posR=0;1<lenR&&0===r[posR]&&!(r[posR+1]&128);--lenR,++posR);sigObj=Buffer.concat([Buffer.from([0]),sigObj.s]);lenR=33;for(var posS=0;1<lenR&&0===sigObj[posS]&&!(sigObj[posS+1]&128);--lenR,++posS);return bip66.encode(r.slice(posR),sigObj.slice(posS))};exports.signatureImport=
function(sig){var r=Buffer.alloc(32,0),s=Buffer.alloc(32,0);try{var sigObj=bip66.decode(sig);33===sigObj.r.length&&0===sigObj.r[0]&&(sigObj.r=sigObj.r.slice(1));if(32<sigObj.r.length)throw Error("R length is too long");33===sigObj.s.length&&0===sigObj.s[0]&&(sigObj.s=sigObj.s.slice(1));if(32<sigObj.s.length)throw Error("S length is too long");}catch(err){return}sigObj.r.copy(r,32-sigObj.r.length);sigObj.s.copy(s,32-sigObj.s.length);return{r:r,s:s}};exports.signatureImportLax=function(sig){var r=Buffer.alloc(32,
0),s=Buffer.alloc(32,0),length=sig.length,index=0;if(48===sig[index++]){var lenbyte=sig[index++];if(lenbyte&128&&(index+=lenbyte-128,index>length))return;if(2===sig[index++]){var rlen=sig[index++];if(rlen&128){lenbyte=rlen-128;if(index+lenbyte>length)return;for(;0<lenbyte&&0===sig[index];index+=1,--lenbyte);for(rlen=0;0<lenbyte;index+=1,--lenbyte)rlen=(rlen<<8)+sig[index]}if(!(rlen>length-index)){var rindex=index;index+=rlen;if(2===sig[index++]){var slen=sig[index++];if(slen&128){lenbyte=slen-128;
if(index+lenbyte>length)return;for(;0<lenbyte&&0===sig[index];index+=1,--lenbyte);for(slen=0;0<lenbyte;index+=1,--lenbyte)slen=(slen<<8)+sig[index]}if(!(slen>length-index)){for(length=index;0<rlen&&0===sig[rindex];--rlen,rindex+=1);if(!(32<rlen)){rlen=sig.slice(rindex,rindex+rlen);for(rlen.copy(r,32-rlen.length);0<slen&&0===sig[length];--slen,length+=1);if(!(32<slen))return sig=sig.slice(length,length+slen),sig.copy(s,32-sig.length),{r:r,s:s}}}}}}}}}
//# sourceMappingURL=module$node_modules$secp256k1$lib$der.js.map
