shadow$provide.module$node_modules$web3_core_subscriptions$src$subscription=function(global,require,module,exports){function Subscription(options){EventEmitter.call(this);this.id=null;this.callback=_.identity;this._reconnectIntervalId=this.arguments=null;this.options={subscription:options.subscription,type:options.type,requestManager:options.requestManager}}var _=require("module$node_modules$underscore$underscore"),errors=require("module$node_modules$web3_core_helpers$src$index").errors,EventEmitter=
require("module$node_modules$eventemitter3$index");Subscription.prototype=Object.create(EventEmitter.prototype);Subscription.prototype.constructor=Subscription;Subscription.prototype._extractCallback=function(args){if(_.isFunction(args[args.length-1]))return args.pop()};Subscription.prototype._validateArgs=function(args){var subscription=this.options.subscription;subscription||(subscription={});subscription.params||(subscription.params=0);if(args.length!==subscription.params)throw errors.InvalidNumberOfParams(args.length,
subscription.params+1,args[0]);};Subscription.prototype._formatInput=function(args){var subscription=this.options.subscription;return subscription&&subscription.inputFormatter?subscription.inputFormatter.map(function(formatter,index){return formatter?formatter(args[index]):args[index]}):args};Subscription.prototype._formatOutput=function(result){var subscription=this.options.subscription;return subscription&&subscription.outputFormatter&&result?subscription.outputFormatter(result):result};Subscription.prototype._toPayload=
function(args){var params=[];this.callback=this._extractCallback(args)||_.identity;this.subscriptionMethod||(this.subscriptionMethod=args.shift(),this.options.subscription.subscriptionName&&(this.subscriptionMethod=this.options.subscription.subscriptionName));this.arguments||(this.arguments=this._formatInput(args),this._validateArgs(this.arguments),args=[]);params.push(this.subscriptionMethod);params=params.concat(this.arguments);if(args.length)throw Error("Only a callback is allowed as parameter on an already instantiated subscription.");
return{method:this.options.type+"_subscribe",params:params}};Subscription.prototype.unsubscribe=function(callback){this.options.requestManager.removeSubscription(this.id,callback);this.id=null;this.removeAllListeners();clearInterval(this._reconnectIntervalId)};Subscription.prototype.subscribe=function(){var _this=this,args=Array.prototype.slice.call(arguments),payload=this._toPayload(args);if(!payload)return this;if(!this.options.requestManager.provider)return args=Error("No provider set."),this.callback(args,
null,this),this.emit("error",args),this;if(!this.options.requestManager.provider.on)return args=Error("The current provider doesn't support subscriptions: "+this.options.requestManager.provider.constructor.name),this.callback(args,null,this),this.emit("error",args),this;this.id&&this.unsubscribe();this.options.params=payload.params[1];"logs"===payload.params[0]&&_.isObject(payload.params[1])&&payload.params[1].hasOwnProperty("fromBlock")&&isFinite(payload.params[1].fromBlock)&&this.options.requestManager.send({method:"eth_getLogs",
params:[payload.params[1]]},function(err,logs){err?(_this.callback(err,null,_this),_this.emit("error",err)):logs.forEach(function(log){log=_this._formatOutput(log);_this.callback(null,log,_this);_this.emit("data",log)})});"object"===typeof payload.params[1]&&delete payload.params[1].fromBlock;this.options.requestManager.send(payload,function(err$jscomp$0,result$jscomp$0){!err$jscomp$0&&result$jscomp$0?(_this.id=result$jscomp$0,_this.emit("connected",result$jscomp$0),_this.options.requestManager.addSubscription(_this.id,
payload.params[0],_this.options.type,function(err,result){err?(_this.options.requestManager.removeSubscription(_this.id),_this.options.requestManager.provider.once&&(_this._reconnectIntervalId=setInterval(function(){_this.options.requestManager.provider.reconnect&&_this.options.requestManager.provider.reconnect()},500),_this.options.requestManager.provider.once("connect",function(){clearInterval(_this._reconnectIntervalId);_this.subscribe(_this.callback)})),_this.emit("error",err),_this.callback(err,
null,_this)):(_.isArray(result)||(result=[result]),result.forEach(function(resultItem){resultItem=_this._formatOutput(resultItem);if(_.isFunction(_this.options.subscription.subscriptionHandler))return _this.options.subscription.subscriptionHandler.call(_this,resultItem);_this.emit("data",resultItem);_this.callback(null,resultItem,_this)}))})):(_this.callback(err$jscomp$0,null,_this),_this.emit("error",err$jscomp$0))});return this};module.exports=Subscription}
//# sourceMappingURL=module$node_modules$web3_core_subscriptions$src$subscription.js.map
