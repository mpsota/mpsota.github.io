shadow$provide.module$node_modules$$stardust_ui$react_component_event_listener$dist$commonjs$useEventListener=function(global,require,module,exports){global=require("module$node_modules$$babel$runtime$helpers$interopRequireWildcard");Object.defineProperty(exports,"__esModule",{value:!0});exports.default=void 0;var React=global(require("module$node_modules$react$index"));exports.default=function(options){var capture=options.capture,listener=options.listener,type=options.type,targetRef=options.targetRef,
latestListener=React.useRef(listener);latestListener.current=listener;var eventHandler=React.useCallback(function(event){return latestListener.current(event)},[]);React.useEffect(function(){if(targetRef&&targetRef.current&&targetRef.current.addEventListener)targetRef.current.addEventListener(type,eventHandler,capture);else throw Error("@stardust-ui/react-component-event-listener: Passed `targetRef` is not valid or does not support `addEventListener()` method.");return function(){if(targetRef&&targetRef.current&&
targetRef.current.removeEventListener)targetRef.current.removeEventListener(type,eventHandler,capture);else throw Error("@stardust-ui/react-component-event-listener: Passed `targetRef` is not valid or does not support `removeEventListener()` method.");}},[capture,targetRef,type])}}
//# sourceMappingURL=module$node_modules$$stardust_ui$react_component_event_listener$dist$commonjs$useEventListener.js.map
