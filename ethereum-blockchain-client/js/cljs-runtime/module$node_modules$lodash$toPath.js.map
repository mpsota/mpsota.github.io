{
"version":3,
"file":"module$node_modules$lodash$toPath.js",
"lineCount":2,
"mappings":"AAAAA,cAAA,kCAAA,CAAsD,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAAA,IAC1FC,SAAWH,OAAA,CAAQ,sCAAR,CAD+E,CAE1FI,UAAYJ,OAAA,CAAQ,uCAAR,CAF8E,CAG1FK,QAAUL,OAAA,CAAQ,oCAAR,CAHgF,CAI1FM,SAAWN,OAAA,CAAQ,qCAAR,CAJ+E,CAK1FO,aAAeP,OAAA,CAAQ,0CAAR,CAL2E,CAM1FQ,MAAQR,OAAA,CAAQ,mCAAR,CANkF,CAO1FS,SAAWT,OAAA,CAAQ,qCAAR,CA0BfC,OAAAC,QAAA;AAPAQ,QAAe,CAACC,KAAD,CAAQ,CACrB,MAAIN,QAAA,CAAQM,KAAR,CAAJ,CACSR,QAAA,CAASQ,KAAT,CAAgBH,KAAhB,CADT,CAGOF,QAAA,CAASK,KAAT,CAAA,CAAkB,CAACA,KAAD,CAAlB,CAA4BP,SAAA,CAAUG,YAAA,CAAaE,QAAA,CAASE,KAAT,CAAb,CAAV,CAJd,CA1BuE;",
"sources":["node_modules/lodash/toPath.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$lodash$toPath\"] = function(global,require,module,exports) {\nvar arrayMap = require('./_arrayMap'),\n    copyArray = require('./_copyArray'),\n    isArray = require('./isArray'),\n    isSymbol = require('./isSymbol'),\n    stringToPath = require('./_stringToPath'),\n    toKey = require('./_toKey'),\n    toString = require('./toString');\n\n/**\n * Converts `value` to a property path array.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Util\n * @param {*} value The value to convert.\n * @returns {Array} Returns the new property path array.\n * @example\n *\n * _.toPath('a.b.c');\n * // => ['a', 'b', 'c']\n *\n * _.toPath('a[0].b.c');\n * // => ['a', '0', 'b', 'c']\n */\nfunction toPath(value) {\n  if (isArray(value)) {\n    return arrayMap(value, toKey);\n  }\n  return isSymbol(value) ? [value] : copyArray(stringToPath(toString(value)));\n}\n\nmodule.exports = toPath;\n\n};"],
"names":["shadow$provide","global","require","module","exports","arrayMap","copyArray","isArray","isSymbol","stringToPath","toKey","toString","toPath","value"]
}
