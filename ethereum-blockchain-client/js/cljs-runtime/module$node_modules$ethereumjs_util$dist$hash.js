shadow$provide.module$node_modules$ethereumjs_util$dist$hash=function(global,require,module,exports){var Buffer=require("module$node_modules$buffer$index").Buffer;"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var createKeccakHash=require("module$node_modules$keccak$js"),createHash=require("module$node_modules$create_hash$browser"),ethjsUtil=require("module$node_modules$ethjs_util$lib$index"),rlp=require("module$node_modules$rlp$dist$index"),bytes_1=require("module$node_modules$ethereumjs_util$dist$bytes");
exports.keccak=function(a,bits){void 0===bits&&(bits=256);a="string"!==typeof a||ethjsUtil.isHexString(a)?bytes_1.toBuffer(a):Buffer.from(a,"utf8");bits||(bits=256);return createKeccakHash("keccak"+bits).update(a).digest()};exports.keccak256=function(a){return exports.keccak(a)};exports.sha256=function(a){a=bytes_1.toBuffer(a);return createHash("sha256").update(a).digest()};exports.ripemd160=function(a,padded){a=bytes_1.toBuffer(a);a=createHash("rmd160").update(a).digest();return!0===padded?bytes_1.setLength(a,
32):a};exports.rlphash=function(a){return exports.keccak(rlp.encode(a))}}
//# sourceMappingURL=module$node_modules$ethereumjs_util$dist$hash.js.map
