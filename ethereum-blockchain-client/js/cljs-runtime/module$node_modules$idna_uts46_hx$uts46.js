shadow$provide.module$node_modules$idna_uts46_hx$uts46=function(global,require,module,exports){(function(root,factory){"function"===typeof define&&define.amd?define(["punycode","./idna-map"],function(punycode,idna_map){return factory(punycode,idna_map)}):"object"===typeof exports?module.exports=factory(require("module$node_modules$punycode$punycode"),require("module$node_modules$idna_uts46_hx$idna_map")):root.uts46=factory(root.punycode,root.idna_map)})(this,function(punycode,idna_map){function mapLabel(label,
useStd3ASCII,transitional){var mapped=[];label=punycode.ucs2.decode(label);for(var i=0;i<label.length;i++){var cp=label[i],ch=punycode.ucs2.encode([label[i]]),composite=idna_map.mapChar(cp);cp=composite>>23;var kind=composite>>21&3;composite=idna_map.mapStr.substr(composite>>5&65535,composite&31);if(0===kind||useStd3ASCII&&cp&1)throw Error("Illegal char "+ch);1===kind?mapped.push(composite):2===kind?mapped.push(transitional?composite:ch):3===kind&&mapped.push(ch)}return mapped.join("").normalize("NFC")}
function process(domain,transitional,useStd3ASCII){void 0===useStd3ASCII&&(useStd3ASCII=!1);domain=mapLabel(domain,useStd3ASCII,transitional).split(".");domain=domain.map(function(label){label.startsWith("xn--")?(label=punycode.decode(label.substring(4)),validateLabel(label,useStd3ASCII,!1)):validateLabel(label,useStd3ASCII,transitional);return label});return domain.join(".")}function validateLabel(label,useStd3ASCII,transitional){if("-"===label[2]&&"-"===label[3])throw Error("Failed to validate "+
label);if(label.startsWith("-")||label.endsWith("-"))throw Error("Failed to validate "+label);if(label.includes("."))throw Error("Failed to validate "+label);if(mapLabel(label,useStd3ASCII,transitional)!==label)throw Error("Failed to validate "+label);label=label.codePointAt(0);if(idna_map.mapChar(label)&16777216)throw Error("Label contains illegal character: "+label);}return{toUnicode:function(domain,options){void 0===options&&(options={});return process(domain,!1,"useStd3ASCII"in options?options.useStd3ASCII:
!1)},toAscii:function(domain,options){void 0===options&&(options={});var verifyDnsLength="verifyDnsLength"in options?options.verifyDnsLength:!1;domain=process(domain,"transitional"in options?options.transitional:!0,"useStd3ASCII"in options?options.useStd3ASCII:!1).split(".").map(punycode.toASCII);options=domain.join(".");if(verifyDnsLength){if(1>options.length||253<options.length)throw Error("DNS name has wrong length: "+options);for(verifyDnsLength=0;verifyDnsLength<domain.length;verifyDnsLength++){var label=
domain[verifyDnsLength];if(1>label.length||63<label.length)throw Error("DNS label has wrong length: "+label);}}return options}}})}
//# sourceMappingURL=module$node_modules$idna_uts46_hx$uts46.js.map
